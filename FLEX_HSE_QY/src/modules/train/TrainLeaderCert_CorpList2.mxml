<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="100%"
		 height="100%"
		 creationComplete="init()">
	<fx:Declarations>
		<fx:XML id="hseDataXML" />
		<s:Parallel id="par">
			<s:Fade alphaFrom="0.0" alphaTo="1.0" duration="2000"/>
		</s:Parallel>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import events.PopupEvent;
			
			import mx.collections.ArrayCollection;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import renderers.MyADGILinkRenderer;
			
			import skins.popWinStyle;
			
			import spark.components.TitleWindow;
			
			import views.PopupTitleWinDG;
			[Bindable]
			public var DataSource:mx.collections.ArrayCollection;
			[Bindable]
			public var PlateName:String = "";
			[Bindable]
			public var LevelName:String = "";
			[Bindable]
			public var CertTypeName:String = "";
			[Bindable]
			public var TypeName:String = "";
			[Bindable]
			public var LeaderLevelName:String = "";
			[Bindable]
			public var DateStr:String = "";
			[Bindable]
			public var ShowTitle:Boolean = true;
			public var fun_call:Function = new Function();
			public var fun_back:Function = new Function();
			[Bindable]
			[Embed(source="assets/images/back3.png")]
			private var icon:Class;
			
			private var renderers:IFactory = new ClassFactory(MyADGILinkRenderer);
			
			protected function init():void
			{
				this.addEventListener(events.PopupEvent.PopupItemClick, popLeaderMX);
			}
			private var titleWin:TitleWindow = new TitleWindow;
			
			private function popLeaderMX(event:events.PopupEvent):void
			{
				var obj:Object = event.hitDataItem;
				popLeaderMX_titleWin(obj);
			}
			
			private var titleWindow1:views.PopupTitleWinDG;
			
			protected function popLeaderMX_titleWin(obj:Object):void
			{
				titleWindow1 = new views.PopupTitleWinDG();
//				titleWindow1.TitleValue = "中国石化按班次完成情况(" + DateStr + "年) 计量单位：班次";
				titleWindow1.TitleValue = "中国石化取证情况(" + DateStr + ")";
				titleWindow1.addEventListener(CloseEvent.CLOSE, function closeEV():void
				{
					PopUpManager.removePopUp(titleWindow1);
				});
				titleWindow1.IfShowFirstRecordBgColor = true;
				titleWindow1.IfShowFrontRecordColor = false;
				titleWindow1.IfShowBackRecordColor = false;
				titleWindow1.tw_width = 700;
				titleWindow1.DataSourceConf = new ArrayCollection([
					{headerText: "序号", dataField: "order", width: "20", textAlign: "center", sortable: false, draggable: false}, 
					{headerText: "姓名", dataField: "leadername", width: "80", textAlign: "center", sortable: true, draggable: true}, 
					{headerText: "证书名称", dataField: "certName", width: "170", textAlign: "center", sortable: true, draggable: true},
					{headerText: "证书编号", dataField: "certID", width: "100", textAlign: "center", sortable: true, draggable: true}, 
					{headerText: "下次复审日期",enableUrlLink: false, dataField: "certReexamine", width: "80", textAlign: "center", sortable: true, draggable: true},
					{headerText: "下次换证日期", dataField: "certExpirationDate", width: "80", textAlign: "center", sortable: true, draggable: true}
				]);
				try
				{
					var tmpArrayCollection:ArrayCollection = new ArrayCollection();
					var tmpList:XMLList;
					if (obj.item == "effectiveCert12")
					{
						tmpList = hseDataXML.byLeaderCertData.plateData.corpData.(@subCorpid==obj.id).effectiveCert12.leaderData;
					}
					else if(obj.item == "effectiveCert6")
					{
						tmpList = hseDataXML.byLeaderCertData.plateData.corpData.(@subCorpid==obj.id).effectiveCert6.leaderData;
					}
					else if(obj.item == "effectiveCert3")
					{
						tmpList = hseDataXML.byLeaderCertData.plateData.corpData.(@subCorpid==obj.id).effectiveCert3.leaderData;
					}
					else if(obj.item == "beover")
					{
						tmpList = hseDataXML.byLeaderCertData.plateData.corpData.(@subCorpid==obj.id).beover.leaderData;
					}
					else if(obj.item == "remainderCert")
					{
						titleWindow1.tw_width = 500;
						titleWindow1.DataSourceConf = new ArrayCollection([
							{headerText: "序号", dataField: "order", width: "40", textAlign: "center", sortable: false, draggable: false}, 
							{headerText: "姓名", dataField: "leadername", width: "40", textAlign: "center", sortable: true, draggable: true}, 
							{headerText: "证书名称", dataField: "certName", width: "40", textAlign: "center", sortable: true, draggable: true},
						]);
						
						tmpList = hseDataXML.byLeaderCertData.plateData.corpData.(@subCorpid==obj.id).remainderCert.leaderData;
					}
					
					if (tmpList.length() > 0)
					{
						var index:int = 2;
						var order:int = 1;
						for each (var xml:XML in tmpList)
						{
							var obj:Object = {leadername: xml.@leadername, certName: xml.@certName, certID: xml.@certID, certReexamine: xml.@certReexamine,certExpirationDate: xml.@certExpirationDate,index: index, id: xml.@leaderid, order: order};
							tmpArrayCollection.addItem(obj);
							index++;
							order++;
						}
					}
						
					titleWindow1.DataSource = tmpArrayCollection;
				}
				catch (e:Event)
				{
					trace(e);
				}
//				titleWindow1.addEventListener(events.PopupEvent.PopupItemClick, popClassCorp);
				if (tmpList.length() > 0)
				PopUpManager.addPopUp(titleWindow1, this.root, true);
				PopUpManager.centerPopUp(titleWindow1);
			}
		]]>
	</fx:Script>
	<s:VGroup horizontalAlign="center"
			  verticalAlign="middle"
			  gap="0"
			  width="100%"
			  height="100%">
		<mx:Label width="100%"
				  height="30"
				  text="{DateStr}{LevelName}{CertTypeName}{LeaderLevelName}{TypeName}培训完成情况"
				  styleName="titleStyle"
				  visible="{ShowTitle}"
				  includeInLayout="{ShowTitle}" />
		<mx:AdvancedDataGrid id="adg"
							 styleName="CusAdvancedDataGrid"
							 width="100%"
							 height="100%"
							 sortExpertMode="true"
							 sortableColumns="false"
							 selectionMode="none"
							 horizontalGridLines="false"
							 dataProvider="{DataSource}"
							 textAlign="center"
							 borderVisible="false">
			<mx:groupedColumns>
				<mx:AdvancedDataGridColumn width="60"
										   dataField="order"
										   headerText="序号" />
				<mx:AdvancedDataGridColumn dataField="plateLabel" id="plate_renderer"
										   headerText="名称"
										  />
				<mx:AdvancedDataGridColumn dataField="certNum"
										   headerText="应持证人数"
										   />
				<mx:AdvancedDataGridColumn dataField="realityCertNum"
										   headerText="实际持证人数"
										 />
				<mx:AdvancedDataGridColumn dataField="certRation"
										   headerText="持证率%"
										   />
				<mx:AdvancedDataGridColumn dataField="effectiveCertNum"
										   headerText="有效证" /> 
				<mx:AdvancedDataGridColumnGroup headerText="预警证">
					<mx:AdvancedDataGridColumn dataField="effectiveCert12"
											   headerText="一年内到期" itemRenderer="renderers.MyADGILinkRenderer"  />
					<mx:AdvancedDataGridColumn dataField="effectiveCert6"
											   headerText="半年内到期" itemRenderer="renderers.MyADGILinkRenderer" />
					<mx:AdvancedDataGridColumn dataField="effectiveCert3"
											   headerText="三个月内到期" itemRenderer="renderers.MyADGILinkRenderer" />
				</mx:AdvancedDataGridColumnGroup>
				<mx:AdvancedDataGridColumn dataField="beover"
										   headerText="过期证" itemRenderer="renderers.MyADGILinkRenderer" 
										   />
				<mx:AdvancedDataGridColumn dataField="realityRation"
										   headerText="证书有效率%"
										   />
				<mx:AdvancedDataGridColumn dataField="remainderCert"
										   headerText="未持证" itemRenderer="renderers.MyADGILinkRenderer" 
										   />
			</mx:groupedColumns>
		</mx:AdvancedDataGrid>
	</s:VGroup>
</s:Group>
