<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   skinClass="skins.popWinStyle" mouseEnabled="true"
			   width="1200" creationComplete="titlewindow1_creationCompleteHandler(event)"
			   height="400"
			   close="titlewindow1_closeHandler(event)">
	<s:layout>
		<s:BasicLayout />
	</s:layout>
	<fx:Script>
		<![CDATA[
			import events.ExportEvent;
			
			import modules.meantime.events.MeantimeOverAllStatusEvent;
			import modules.meantime.events.MeantimeOverFilterEvent;
			import modules.meantime.renderers.AdvancedDataGridWarningRenderer;
			import modules.meantime.renderers.MeantimeOneStatusRenderer;
			import modules.meantime.renderers.MeantimeOneStatusRenderer_corpName;
			import modules.meantime.renderers.MeantimeOneStatusRenderer_projectURL;
			import modules.meantime.renderers.serialItemRender;
			
			import mx.collections.ArrayCollection;
			import mx.containers.DividedBox;
			import mx.controls.AdvancedDataGrid;
			import mx.controls.Alert;
			import mx.controls.PopUpButton;
			import mx.controls.advancedDataGridClasses.AdvancedDataGridColumn;
			import mx.controls.advancedDataGridClasses.AdvancedDataGridColumnGroup;
			import mx.core.FlexGlobals;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.printing.FlexPrintJob;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import views.RowAdvDataGrid;
			
			private var loader:URLLoader = new URLLoader();
			private var stateArr:Array = ['可研批复', '基础设计批复', '正在施工', '开始试运行', '试运行6个月'];
			private var advancedDataGridWarningRenderer:IFactory = new ClassFactory(AdvancedDataGridWarningRenderer);
			private var seriaItem:IFactory = new ClassFactory(serialItemRender);
			private var meantimeOneStatusRenderer:IFactory = new ClassFactory(MeantimeOneStatusRenderer);
			private var meantimeOneStatusRenderer_corpName:IFactory = new ClassFactory(MeantimeOneStatusRenderer_corpName);
			private var meantimeOneStatusRenderer_projectURL:IFactory = new ClassFactory(MeantimeOneStatusRenderer_projectURL);
			
			private var hseDataXML:XML;
			
			private var plateid:String = "";
			private var corpid:String = "";
			private var levelid:String = "";
			private var profid:String = "";
			private var stageid:String = "";
			private var stageidBefore:String = "";
			
			private var plateName:String = "";
			private var corpName:String = "";
			private var levelName:String = "";
			private var profName:String = "";
			private var stageName:String = "";
			private var field_num:int = 1;
			[Bindable]
			private var ac_dataProvider:ArrayCollection = new ArrayCollection();
			[Bindable]
			private var ac_dataProvider_temp:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			private var contextmenu:ContextMenu;
			
			public function setData(wsdlUrl:String, dateStr:String, obj:Object,statusStr:String,stageFlag:String):void
			{
				this.plateName = obj.plate;
				this.corpName = obj.corp;
				this.levelName = obj.level;
				this.profName = obj.prof;
				this.stageName = obj.stage;
				
				this.plateid = obj.plateid;
				this.corpid = obj.corpid;
				this.levelid = obj.levelid;
				this.profid = obj.profid;
				this.stageid = obj.stageid;
				this.stageidBefore = obj.stageidBefore;
//				if(obj.stage_before){
//					this.stageidBefore = obj.stage_before[0].stageidBefore;
//				}
				if(obj.stage=="小计"){
					switch (profid)
					{
						case "safety": 
							profid = "safetysubtotal";
							break;
						case "environmentalProtection": 
							profid = "environmentalProtectionsubtotal";
							break;
						case "health": 
							profid = "healthsubtotal";
							break;
						case "fireControl": 
							profid = "fireControlsubtotal";
							break;
						case "anti-seismic": 
							profid = "anti-seismicsubtotal";
							break;
					}
				}
				
				if(statusStr=="1"){
					statusStr = "yellow";
				}
				if(statusStr=="2"){
					statusStr = "red";
				}
				if(statusStr=="4"){
					statusStr = "green";
				}
//				if(statusStr=="project_num"){
//					statusStr=="";
//				}
				if(corpid==""){
					corpid="00"
				}
				ws.wsdl = wsdlUrl;
				ws.loadWSDL();
//				loadDataByURLLoader();
				/** stageidid改为statusStr 新加入的状态
				 * 
				 * 	loadDataByWs(dateStr, plateid, corpid, levelid, profid, stageid, "");
				*/
				if(stageFlag=="current"){
					if(statusStr=="project_num"){
						loadDataByWs_project_num(dateStr, plateid, corpid, levelid, profid, "", stageid);
					}else{
						loadDataByWs_current(dateStr, plateid, corpid, levelid, profid, statusStr, stageid);
					}
					
				}else if(stageFlag=="before"){
					loadDataByWs_before(dateStr, plateid, corpid, levelid, profid, statusStr,stageidBefore, stageid);
				}else{
					if(statusStr=="project_num"){
						statusStr="";
					}
					loadDataByWs(dateStr, plateid, corpid, levelid, profid, statusStr, "");
				}
				
				
//				loadDataByWs("2013", "00", "", "00", "safety", "9993518AD2054247AFD27695E4999B61", "");
			}
			
			private function loadDataByURLLoader():void
			{
				loader.load(new URLRequest("assets/data/zb_meantimeOverAllProjListdata.xml"));
				loader.addEventListener(Event.COMPLETE, loadDataHandler);
			}
			
			private function loadDataByWs_project_num(dateStr:String, plateid:String, corpid:String, levelid:String, profid:String, statusStr:String, stageid:String):void
			{
				ws.GetMeantime("PhaseContrast", dateStr, profid,"", statusStr, "",stageid);
			}
			
			private function loadDataByWs_before(dateStr:String, plateid:String, corpid:String, levelid:String, profid:String, statusStr:String, stageidBefore:String, stageid:String):void
			{
				ws.GetMeantime("PhaseContrast", dateStr, profid,"", statusStr,stageidBefore,stageid);
			}
			
			private function loadDataByWs_current(dateStr:String, plateid:String, corpid:String, levelid:String, profid:String, statusStr:String, stageid:String):void
			{
				ws.GetMeantime("PhaseContrast", dateStr, profid,"", statusStr, "",stageid);
			}
			
			private function loadDataByWs(dateStr:String, plateid:String, corpid:String, levelid:String, profid:String, stageid:String, statusid:String):void
			{
//				Alert.show(dateStr+":"+plateid+":"+corpid+":"+levelid+profid+stageid);
//				ws.GetMeantime("overAllDetails", dateStr, plateid, corpid, levelid, profid,"", stageid, "");
				ws.GetMeantime("overAllDetails", dateStr, profid,"", stageid, "");
			}
			
			private function loadDataHandler(event:Event):void
			{
				hseDataXML = XML(loader.data);
				this.removeAllElements();
				var advancedDataGrid:AdvancedDataGrid = createAdvancedDataGrid();
//				advancedDataGrid.dataProvider = createAdvancedDataGridAc(this.stageName);
//				this.addElement(advancedDataGrid);
				ac_dataProvider = createAdvancedDataGridAc(this.stageName);
				for(var i:int=0;i<ac_dataProvider.length;i++){
					ac_dataProvider_temp.addItem(ac_dataProvider[i]);
				}
//				this.skin.mouseEnabled=true;
				
				
//				var cmi:ContextMenuItem = new ContextMenuItem("View item...", true);
//				
//				contextmenu = new ContextMenu();
//				contextmenu.hideBuiltInItems();
//				contextmenu.customItems = [cmi];
//				this.contextMenu = Menu_as.Instance.add_menu(this,this);
				
				
//				var cmi:ContextMenuItem = new ContextMenuItem("View out", true);
//				
//				contextmenu = new ContextMenu();
//				contextmenu.hideBuiltInItems();
//				contextmenu.customItems = [cmi];
//				advancedDataGrid.contextMenu = contextmenu;
//				cmi.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, function(event : ContextMenuEvent) : void{
//					Image_as.Instance.exportChart(advancedDataGrid);
					
//					var printJob:FlexPrintJob = new FlexPrintJob();  
//					printJob.printAsBitmap = false;  
//					if (printJob.start()){  
//						printJob.addObject(advancedDataGrid);  
//					}
//						printJob.send();  
					
					/* var printJob:FlexPrintJob = new FlexPrintJob();
					if (printJob.start()) {
						// Create a FormPrintView control as a child of the current view.
						var thePrintView:FormPrintView = new FormPrintView();
						FlexGlobals.topLevelApplication.addElement(thePrintView);
						
						//Set the print view properties.
						thePrintView.width=printJob.pageWidth;
						thePrintView.height=printJob.pageHeight;
//						thePrintView.prodTotal = prodTotal;
						// Set the data provider of the FormPrintView component's data grid
						// to be the data provider of the displayed data grid.
						thePrintView.myDataGrid.dataProvider = ac_dataProvider;
						// Create a single-page image.
						thePrintView.showPage("single");
						// If the print image's data grid can hold all the provider's rows,
						// add the page to the print job.
						if (!thePrintView.myDataGrid.validNextPage)  {
							printJob.addObject(thePrintView);
						}
							// Otherwise, the job requires multiple pages.
						else {
							// Create the first page and add it to the print job.
							thePrintView.showPage("first");
							printJob.addObject(thePrintView);
							thePrintView.pageNumber++;
							// Loop through the following code until all pages are queued.
							while (true) {
								// Move the next page of data to the top of the print grid.
								thePrintView.myDataGrid.nextPage();
								thePrintView.showPage("last");
								// If the page holds the remaining data, or if the last page
								// was completely filled by the last grid data, queue it for printing.
								// Test if there is data for another PrintDataGrid page.
								if (!thePrintView.myDataGrid.validNextPage) {
									// This is the last page; queue it and exit the print loop.
									printJob.addObject(thePrintView);
									break;
								} else {
									// This is not the last page. Queue a middle page.
									thePrintView.showPage("middle");
									printJob.addObject(thePrintView);
									thePrintView.pageNumber++;
								}
							}
						}
						// All pages are queued; remove the FormPrintView control to free memory.
						FlexGlobals.topLevelApplication.removeElement(thePrintView);
					}
					// Send the job to the printer.
					printJob.send(); */
//				});
				
				advancedDataGrid.dataProvider = ac_dataProvider;
				this.addElement(advancedDataGrid);
				this.addElement(back_but);
			}
			
			protected function ws_resultHandler(event:ResultEvent):void
			{
				hseDataXML = XML(event.result);
				this.removeAllElements();
				var advancedDataGrid:AdvancedDataGrid = createAdvancedDataGrid();
				ac_dataProvider = createAdvancedDataGridAc(this.stageName);
				for(var i:int=0;i<ac_dataProvider.length;i++){
					ac_dataProvider_temp.addItem(ac_dataProvider[i]);
				}
				advancedDataGrid.dataProvider = ac_dataProvider;
				this.addElement(advancedDataGrid);
				this.addElement(back_but);
			}
			
			private function createAdvancedDataGrid():RowAdvDataGrid
			{
				var advancedDataGrid:RowAdvDataGrid = new RowAdvDataGrid();
				advancedDataGrid.percentWidth = 100;
				advancedDataGrid.percentHeight = 100;
				advancedDataGrid.setStyle("alternatingItemColors", ['#EDF5F9', '#FFFFFF']);
				advancedDataGrid.setStyle("color", "#000000");
				advancedDataGrid.setStyle("rollOverColor","haloBlue");
				advancedDataGrid.sortExpertMode = true;
				advancedDataGrid.sortableColumns = false;
				advancedDataGrid.variableRowHeight = true;
				
				var groupColumn:Array = new Array();
				var column:AdvancedDataGridColumn;
				
				column = new AdvancedDataGridColumn();
				column.dataField = "order";
				column.headerText = "序号";
				column.itemRenderer=seriaItem;
				column.width = 50;
				groupColumn.push(column);
				
//				column = new AdvancedDataGridColumn();
//				column.dataField = "corpName";
//				column.headerText = "企业名称";
//				column.itemRenderer = meantimeOneStatusRenderer_corpName;
//				column.width = 100;
//				groupColumn.push(column);
				
				column = new AdvancedDataGridColumn();
				column.dataField = "projectName";
				column.headerText = "项目名称";
//				column.showDataTips = true;
				column.itemRenderer = meantimeOneStatusRenderer_projectURL;
				
				column.dataTipField = "projectName";
				column.width = 200;
				groupColumn.push(column);
				
				column = new AdvancedDataGridColumn();
				column.dataField = "level";
				column.headerText = "项目级别";
				column.width = 90;
				groupColumn.push(column);
				
				column = new AdvancedDataGridColumn();
				column.dataField = "investment";
				column.headerText = "投资金额";
				column.width = 80;
				groupColumn.push(column);
				
				column = new AdvancedDataGridColumn();
				column.dataField = "currentStage";
				column.headerText = "项目进度";
				column.width = 85;
				groupColumn.push(column);
				
				var columngroup:AdvancedDataGridColumnGroup = new AdvancedDataGridColumnGroup();
				columngroup.dataField = "stage";
				columngroup.headerText = "三同时进度";
				//columngroup.width = 230;
				
				var columngroupArr:Array = new Array();
				var i:int = 1;
				var tmpList:XMLList;
				tmpList = hseDataXML.allData.dataset;
				if (tmpList != null && tmpList.length() > 0)
				{
					var stageColumn:AdvancedDataGridColumn;
					for each (var xml:XML in tmpList[0].stagedata)
					{
						stageColumn = new AdvancedDataGridColumn();
						stageColumn.dataField = "field" + i;
						stageColumn.headerText = xml.@label + "";
						stageColumn.width = 140;
						stageColumn.itemRenderer = meantimeOneStatusRenderer;
						columngroupArr.push(stageColumn);
						i++;
					}
				}
				field_num = i;
				columngroup.children = columngroupArr;
				groupColumn.push(columngroup);
				
				advancedDataGrid.groupedColumns = groupColumn;
				advancedDataGrid.rowColorFunction = colorFunction;
				return advancedDataGrid;
			}
			
			private function createAdvancedDataGridAc(stageName:String):ArrayCollection
			{
				var tmpArrayCollection:ArrayCollection = new ArrayCollection();
				try
				{
					var xmllist:XMLList = hseDataXML.allData.(@dataLabel == profName).dataset; //筛选专业
//					var xmllist:XMLList = hseDataXML.allData.dataset; 
					if (xmllist != null && xmllist.length() > 0)
					{
						var sum_obj:Object = new Object();
						var sum_investment:Number = 0;
						var sum_objPro:Object = new Object();
						var index:int = 1;
						for each (var xml:XML in xmllist)
						{
							//var xmlList2:XMLList=xml.stagedata.(@label==stageName).(@inStatus=="1");
							//xmlList2=xmlList2.(@status=="IN-PROCESS" || @status=="NO-START");
							var xmlList2:XMLList
							if (stageName == "小计" || stageName == "")
							{
								xmlList2 = xml.stagedata;
							}
							else
							{
//								xmlList2 = xml.stagedata.(@label == stageName).(@ifShow == "1");
								xmlList2 = xml.stagedata.(@label == stageName);
							}
							if (xmlList2 != null && xmlList2.length() > 0)
							{
								sum_investment += Number(xml.@investment);
								var obj:Object = new Object();
								obj['order'] = index;
								obj['isSum'] = "0";
								obj['corpName'] = xml.@corpName + "";
								obj['level'] = xml.@level + "";
								obj['projectName'] = xml.@projectName + "";
								obj['projectURL'] = xml.@projectURL + "";
								obj['investment'] = xml.@investment + "";
								var currentStage:int = int(xml.@currentStage);
								obj['currentStage'] = handlerCurrState(currentStage);
								var i:int = 1;
								var stopShow:Boolean = false;
								if (xml.stagedata != null && xml.stagedata.length() > 0)
								{
									for each (var xml2:XML in xml.stagedata)
									{
										if (!stopShow)
										{
											var objStage:Object = new Object;
											objStage.status = xml2.@status;
											objStage.warning = xml2.@warning;
											objStage.alarmTxt = xml2.@alarmTxt;
											obj['field' + i] = objStage;
										}
										else
										{
											obj['field' + i] = null;
										}
										i++;
										if(objStage.warning=="1"){
											obj['exfield' + i]="预警";
										}
										if(objStage.warning=="2"){
											obj['exfield' + i]="超期";
										}
										if(objStage.warning=="3"||objStage.warning=="4"){
											obj['exfield' + i]="已完成";
										}
									}
								}
								index++;
								tmpArrayCollection.addItem(obj);
							}
							else
							{
								//cccccccccccccccccccccccccccccccccccc
							}
						}
						sum_obj['order'] = "";
						sum_obj['isSum'] = "1";
						sum_obj['investment'] = sum_investment
						sum_obj['currentStage'] = "";
						sum_obj['corpName'] = "合计";
						sum_obj['projectName'] = tmpArrayCollection.length+"个项目";
						sum_obj['isShow'] = "1";
						for(var j:int=1;j<field_num;j++){
							var sum_red:Number = 0;
							var sum_yellow:Number = 0;
							var sum_green:Number = 0;
							for(var k:int=0;k<tmpArrayCollection.length;k++){
								if(tmpArrayCollection[k]['field'+j]){
									if(tmpArrayCollection[k]['field'+j].status == "IN-PROCESS"||tmpArrayCollection[k]['field'+j].status == "NO-START"){
										if(tmpArrayCollection[k]['field'+j].warning=="1"){
											sum_yellow= sum_yellow+1;
										}else if(tmpArrayCollection[k]['field'+j].warning=="2"){
											sum_red= sum_red+1;
										}
									}
									if(tmpArrayCollection[k]['field'+j].status == "FINISHED"){
										sum_green= sum_green+1;
									}  
								}
							}
							
							var sumObjStage:Object = new Object;
							
							sumObjStage['sum_red'] = sum_red;
							sumObjStage['sum_yellow'] = sum_yellow;
							sumObjStage['sum_green'] = sum_green;
							sum_obj['field' + j] = sumObjStage;
							sum_obj['exfield' + j]="超期："+sum_red+"  "+"预警："+sum_yellow+"  "+"已完成"+sum_green;
						}
						tmpArrayCollection.addItemAt(sum_obj, 0);
					}
					
				}
				catch (e:Event)
				{
					trace(e);
				}
				return tmpArrayCollection;
			
			}
			
			private function handlerStateStr(str:String):String
			{
				var str_:String = "";
				if (str == "FINISHED")
				{
					str_ = "已完成";
				}
				else if (str == "IN-PROCESS")
				{
					str_ = "进行中";
				}
				else if (str == "NO-START")
				{
					str_ = "未启动";
				}
				else if (str == "Ignore" || str == "")
				{
					str_ = "";
				}
				return str_;
			}
			
			private function colorFunction(item:Object, color:uint):uint
			{
				if (item.order == "")
					color = 0xFFBF00;
				return color;
			}
			
			private function handlerCurrState(index:int):String
			{
				if (index == 0)
				{
					return "";
				}
				return stateArr[index - 1];
			}
			
			protected function titlewindow1_closeHandler(event:CloseEvent):void
			{
				PopUpManager.removePopUp(this);
			}
			
			protected function ws_faultHandler(event:FaultEvent):void
			{
				cursorManager.removeAllCursors();
			}
			
			protected function titlewindow1_creationCompleteHandler(event:FlexEvent):void
			{
				this.addEventListener(events.ExportEvent.ExportClick,exportFun);
//				this.contextMenu = Menu_as.Instance.add_menu(this,this);
//				this.contextMenu.hideBuiltInItems();
//				this.skin.mouseEnabled=true;
				this.addEventListener(MeantimeOverAllStatusEvent.STATUS_CLICK, corpName_clickHandler);
				this.addEventListener(MeantimeOverFilterEvent.FILTER_CLICK,filter_clickHandler);
			}
			
			protected function corpName_clickHandler(event:MeantimeOverAllStatusEvent):void
			{
				return;
				var obj:Object = event.data;
				var sum_obj:Object = new Object();
				var sum_investment:Number = 0;
				back_but.includeInLayout = true;
				back_but.visible = true;
				ac_dataProvider.removeAll();
				for(var i:int=1;i<ac_dataProvider_temp.length;i++){
					if(ac_dataProvider_temp[i].corpName == obj.corpName){
						sum_investment += Number(ac_dataProvider_temp[i].investment);
						ac_dataProvider.addItem(ac_dataProvider_temp[i]);
					}
				}
				
				for(var j:int=1;j<field_num;j++){
					var sum_red:Number = 0;
					var sum_yellow:Number = 0;
					var sum_green:Number = 0;
					for(var k:int=0;k<ac_dataProvider.length;k++){
						if(ac_dataProvider[k]['field'+j]){
							if(ac_dataProvider[k]['field'+j].status == "IN-PROCESS"||ac_dataProvider[k]['field'+j].status == "NO-START"){
								if(ac_dataProvider[k]['field'+j].warning=="1"){
									sum_yellow= sum_yellow+1;
								}else if(ac_dataProvider[k]['field'+j].warning=="2"){
									sum_red= sum_red+1;
								}
							}
							if(ac_dataProvider[k]['field'+j].status == "FINISHED"){
								sum_green= sum_green+1;
							}  
						}
					}
					
					var sumObjStage:Object = new Object;
					
					sumObjStage['sum_red'] = sum_red;
					sumObjStage['sum_yellow'] = sum_yellow;
					sumObjStage['sum_green'] = sum_green;
					sum_obj['field' + j] = sumObjStage;
					sum_obj['exfield' + j]="超期："+sum_red+"  "+"预警："+sum_yellow+"  "+"已完成"+sum_green;
				}
				sum_obj['order'] = "";
				sum_obj['isSum'] = "1";
				sum_obj['currentStage'] = "";
				sum_obj['investment'] = sum_investment;
				sum_obj['corpName'] = "合计";
				sum_obj['projectName'] = ac_dataProvider.length+"个项目";
				sum_obj['isShow'] = "0";
				ac_dataProvider.addItemAt(sum_obj,0);
			}
			
			protected function filter_clickHandler(event:MeantimeOverFilterEvent):void
			{
				var sum_obj:Object = new Object();
				var sum_investment:Number = 0;
				if(event.state_filter!=""){
					back_but.includeInLayout = true;
					back_but.visible = true;
					ac_dataProvider.removeAll();
					if(event.state_filter=="green"){
						for(var i:int=1;i<ac_dataProvider_temp.length;i++){
							if(ac_dataProvider_temp[i]['field'+event.state_field]){
								if(ac_dataProvider_temp[i]['field'+event.state_field].warning=="3"||ac_dataProvider_temp[i]['field'+event.state_field].warning=="4"){
									ac_dataProvider.addItem(ac_dataProvider_temp[i]);
									sum_investment += Number(ac_dataProvider_temp[i].investment);
								}
							}
						}
					}else{
						for(var i1:int=1;i1<ac_dataProvider_temp.length;i1++){
							if(ac_dataProvider_temp[i1]['field'+event.state_field]){
								if(ac_dataProvider_temp[i1]['field'+event.state_field].warning==event.state_filter){
									ac_dataProvider.addItem(ac_dataProvider_temp[i1]);
									sum_investment += Number(ac_dataProvider_temp[i1].investment);
								}
							}
						}
					}
//					for(var ac_index:int=0;ac_index<ac_dataProvider.length;ac_index++){
//						ac_dataProvider[ac_index].order = ac_index+1;
//					}
					
					for(var j:int=1;j<field_num;j++){
						var sum_red:Number = 0;
						var sum_yellow:Number = 0;
						var sum_green:Number = 0;
						for(var k:int=0;k<ac_dataProvider.length;k++){
							if(ac_dataProvider[k]['field'+j]){
								if(ac_dataProvider[k]['field'+j].status == "IN-PROCESS"||ac_dataProvider[k]['field'+j].status == "NO-START"){
									if(ac_dataProvider[k]['field'+j].warning=="1"){
										sum_yellow= sum_yellow+1;
									}else if(ac_dataProvider[k]['field'+j].warning=="2"){
										sum_red= sum_red+1;
									}
								}
								if(ac_dataProvider[k]['field'+j].status == "FINISHED"){
									sum_green= sum_green+1;
								}  
							}
						}
						
						var sumObjStage:Object = new Object;
						
						sumObjStage['sum_red'] = sum_red;
						sumObjStage['sum_yellow'] = sum_yellow;
						sumObjStage['sum_green'] = sum_green;
						sum_obj['field' + j] = sumObjStage;
						sum_obj['exfield' + j]="超期："+sum_red+"  "+"预警："+sum_yellow+"  "+"已完成"+sum_green;
					}
					sum_obj['order'] = "";
					sum_obj['isSum'] = "1";
					sum_obj['investment'] = sum_investment;
					sum_obj['currentStage'] = "";
					sum_obj['corpName'] = "合计";
					sum_obj['projectName'] = ac_dataProvider.length+"个项目";
					sum_obj['isShow'] = "0";
					ac_dataProvider.addItemAt(sum_obj,0);
//					ac_dataProvider.addItemAt(ac_dataProvider_temp[0],0);
				}
			}
			
			protected function back_but_clickHandler(event:MouseEvent):void
			{
				ac_dataProvider.removeAll();
				for(var i:int=0;i<ac_dataProvider_temp.length;i++){
					ac_dataProvider.addItem(ac_dataProvider_temp[i]);
				}
				back_but.includeInLayout = false;
				back_but.visible = false;
			}
			
			protected function exportFun(event:ExportEvent):void
			{
				var titleWindow:views.PopupTitleWinDG = new views.PopupTitleWinDG();  
				titleWindow.title = "三同时信息";   
				titleWindow.width=1000;
				titleWindow.height=800;
				titleWindow.DataSourceConf=new ArrayCollection([
					{headerText:"排序号",dataField:"order",width1:"40",textAlign:"left",sortable:true,draggable:false},
					{headerText:"企业",dataField:"corpName",width1:"90",textAlign:"left",sortable:true,draggable:false},
					{headerText:"项目名称",dataField:"projectName",width1:"140",textAlign:"center",sortable:true,draggable:false},
				]);
				var xmllist:XML = hseDataXML.allData.(@dataLabel == profName).dataset[0]; //筛选专业
				var i:int = 2;
				for each(var xml:XML in xmllist.stagedata){
					var obj:Object = new Object();
					obj.headerText = profName+"-"+xml.@label;
					obj.dataField = "exfield"+i;
					obj.width1 = "40";
					obj.textAlign = "center";
					obj.sortable = true;
					obj.draggable = false;
					i++;
					titleWindow.DataSourceConf.addItem(obj);
				}
				titleWindow.DataSource= ac_dataProvider;
				titleWindow.exportToExcel();
				
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:WebService id="ws"
					  result="ws_resultHandler(event)"
					  fault="ws_faultHandler(event)"
					  showBusyCursor="true" />
		<s:Parallel id="par">
			<s:Fade alphaFrom="0.0" alphaTo="1.0" duration="1000"/>
		</s:Parallel>
	</fx:Declarations>
	<s:Image id="back_but" source="assets/images/back.png" toolTip="返回总数据"  showEffect="{par}"
			 includeInLayout="false" visible="false" x="{this.width-105}" y="-28" click="back_but_clickHandler(event)"/>
</s:TitleWindow>
