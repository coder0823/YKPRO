<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" creationComplete="application1_creationCompleteHandler(event)"
			   xmlns:mx1="library://ns.adobe.com/flex/halo">
	<fx:Script>
		<![CDATA[
			import mx.charts.CategoryAxis;
			import mx.charts.chartClasses.IAxis;
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import spark.events.IndexChangeEvent;
			[Bindable]
			private var historyData:ArrayCollection = new ArrayCollection(
				[
					{date:"8/1/2007",open:"40.29",close:"39.58"},{date:"8/2/2007",open:"39.4",close:"39.52"},
					{date:"8/3/2007",open:"39.47",close:"38.75"},{date:"8/6/2007", open:"38.71", close:"39.38"},
					{date:"8/7/2007",open:"39.08",close:"39.42"},{date:"8/8/2007", open:"39.61", close:"40.23"},
					{date:"8/9/2007", open:"39.9", close:"40.75"},{date:"8/10/2007",open:"41.3",close:"41.06"},
					
					
					
					
					{date:"8/13/2007",open:"41",close:"40.83"},{date:"8/14/2007",open:"41.01",close:"40.41"},
					{date:"8/15/2007",open:"40.22",close:"40.18"},{date:"8/16/2007",open:"39.83",close:"39.96"},
					{date:"8/17/2007",open:"40.18",close:"40.32"},{date:"8/20/2007",open:"40.55",close:"40.74"},
					{date:"8/21/2007",open:"40.41",close:"40.13"},{date:"8/22/2007",open:"40.4",close:"40.77"},
					{date:"8/23/2007",open:"40.82",close:"40.6"},{date:"8/24/2007",open:"40.5",close:"40.41"},
					{date:"8/27/2007",open:"40.38",close:"40.81"},{date:"8/9/2007",open:"39.9",close:"40.75"},
				]);
			
			private function linearAxis_labelFunc(item:Object, prevValue:Object, axis:IAxis):String {
				return currencyFormatter.format(item);
			}
			
			private function categoryAxis_labelFunc(item:Object, prevValue:Object, axis:CategoryAxis, categoryItem:Object):String {
				var datNum:Number = Date.parse(item);
				var tempDate:Date = new Date(datNum);
				return dateFormatter.format(tempDate).toUpperCase();
				//				var _df:DateFormatter = new DateFormatter;  
				//				_df.formatString = "JJ:NN:SS";  
				//				return _df.format(item);  
			}
			
			protected function widthDropDown_changeHandler(event:IndexChangeEvent):void  
			{  
				totalPage = int(widthDropDown.selectedItem.@value);  
				hsb.maximum = (totalPage - 1) * 10;  
				hsb.value = 0;  
				
				setDataProvider();  
			}  
			
			protected function hsb_changeHandler(event:Event):void  
			{  
				setDataProvider();  
			}  
			
			private var totalPage:int = 1;  
			
			protected function zoomin(event:MouseEvent):void  
			{  
				if(totalPage >= (1 << 4))  
					return;  
				hsb.value = hsb.value * 0.5;  
				totalPage = totalPage << 1;  
				hsb.maximum = (totalPage - 1) * 10;  
				
				setDataProvider();  
			}  
			
			protected function zoomout(event:MouseEvent):void  
			{  
				if(totalPage == 1)  
					return;  
				
				hsb.value = hsb.value * 2;  
				totalPage = totalPage >> 1;  
				hsb.maximum = (totalPage - 1) * 10;  
				
				setDataProvider();  
			}  
			
			protected function setDataProvider():void  
			{  
				var j:int = int(hsb.value / hsb.maximum * (hsb.maximum / 10 / totalPage) * historyData.length);  
				
				var ac:ArrayCollection = new ArrayCollection();  
				var len:int = Math.ceil(1.0 * historyData.length / totalPage);  
				for (var i:int = 0; (i < len) && (i + j) < historyData.length; i++)   
				{  
					ac.addItem(historyData.getItemAt(i + j));  
				}  
				
				columnChart.dataProvider = ac;  
			}  
			
			protected function application1_creationCompleteHandler(event:FlexEvent):void
			{
				
				//				var len:int = 1 * 60 * 1000;  
				//				var now:Date = new Date();  
				//				historyData = new ArrayCollection();  
				//				
				//				now.setTime(now.time - len);  
				//				for (var i:int = 0; i < len / 1000; i++)   
				//				{  
				//					now.setTime(now.time + 1000);  
				//					var t:Date = new Date(now.time);  
				//					var gas:Object = {date:t, value:Math.random() * 0.9};  
				//					historyData.addItem(gas);  
				//				}  
				//				
				//				columnChart.dataProvider = historyData;  
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<mx:DateFormatter id="dateFormatter" formatString="DD" />
		<mx:CurrencyFormatter id="currencyFormatter" precision="2" />
		
		<s:XMLListCollection id="dp">
			<s:source>
				<fx:XMLList xmlns="">
					<quote date="8/1/2007" open="40.29" close="39.58" />
					<quote date="8/2/2007" open="39.4" close="39.52" />
					<quote date="8/3/2007" open="39.47" close="38.75" />
					<quote date="8/6/2007" open="38.71" close="39.38" />
					<quote date="8/7/2007" open="39.08" close="39.42" />
					<quote date="8/8/2007" open="39.61" close="40.23" />
					<quote date="8/9/2007" open="39.9" close="40.75" />
					<quote date="8/10/2007" open="41.3" close="41.06" />
					<quote date="8/13/2007" open="41" close="40.83" />
					<quote date="8/14/2007" open="41.01" close="40.41" />
					<quote date="8/15/2007" open="40.22" close="40.18" />
					<quote date="8/16/2007" open="39.83" close="39.96" />
					<quote date="8/17/2007" open="40.18" close="40.32" />
					<quote date="8/20/2007" open="40.55" close="40.74" />
					<quote date="8/21/2007" open="40.41" close="40.13" />
					<quote date="8/22/2007" open="40.4" close="40.77" />
					<quote date="8/23/2007" open="40.82" close="40.6" />
					<quote date="8/24/2007" open="40.5" close="40.41" />
					<quote date="8/27/2007" open="40.38" close="40.81" />
				</fx:XMLList>
			</s:source>
		</s:XMLListCollection>
	</fx:Declarations>
	
	<mx:ColumnChart id="columnChart"
					showDataTips="true"
					dataProvider="{historyData}"
					width="100%"
					height="100%">
		
		<mx:backgroundElements>
			<mx:GridLines>
				<mx:horizontalStroke>
					<mx:Stroke color="haloSilver" weight="0" />
				</mx:horizontalStroke>
			</mx:GridLines>
		</mx:backgroundElements>
		
		<!-- vertical axis -->
		<mx:verticalAxis>
			<mx:LinearAxis baseAtZero="false"
						   labelFunction="linearAxis_labelFunc" />
		</mx:verticalAxis>
		
		<!-- horizontal axis -->
		<mx:horizontalAxis>
			<mx:CategoryAxis id="ca"
							 categoryField="date"
							 title="August 2007"
							 labelFunction="categoryAxis_labelFunc" />
		</mx:horizontalAxis>
		
		<!-- horizontal axis renderer -->
		
		<mx:horizontalAxisRenderers>
			<mx:AxisRenderer axis="{ca}"
							 canDropLabels="true" />
		</mx:horizontalAxisRenderers>
		
		<!-- series -->
		<mx:series>
			<mx:ColumnSeries displayName="Open"
							 xField="date"
							 yField="open">
				<mx:stroke>
					<mx:Stroke color="black" weight="2" alpha="1.0" />
				</mx:stroke>
				<mx:fill>
					<mx:RadialGradient>
						<mx:entries>
							<mx:GradientEntry  color="haloBlue"  />
							<mx:GradientEntry color="#994C34" ratio="1"/>
						</mx:entries>
					</mx:RadialGradient>
					<!--<mx:SolidColor color="haloBlue" alpha="0.9" />-->
				</mx:fill>
			</mx:ColumnSeries>
		</mx:series>
		
		<!-- series filters -->
		<mx:seriesFilters>
		</mx:seriesFilters>
	</mx:ColumnChart>
	<s:controlBarContent>  
		<s:HGroup width="100%" height="25" horizontalAlign="center" verticalAlign="middle">  
			<s:ComboBox id="widthDropDown" width="90" change="widthDropDown_changeHandler(event)"  
							labelField="@label" requireSelection="true">  
				<s:XMLListCollection>  
					<fx:XMLList xmlns="">  
						<node label="原始宽度" value="1"/>  
						<node label="两倍宽度" value="2"/>  
						<node label="四倍宽度" value="4"/>  
					</fx:XMLList>  
				</s:XMLListCollection>  
			</s:ComboBox>  
			<s:Button label="放大" click="zoomin(event)"/>  
			<s:Button label="缩小" click="zoomout(event)"/>  
			<s:HScrollBar id="hsb" width="100%" height="20" change="hsb_changeHandler(event)"  
						  maximum="0" minimum="0" snapInterval="1" value="0"/>  
		</s:HGroup>  
	</s:controlBarContent>  
</s:Application>
