<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:views="views.*"
		 width="400" height="300" creationComplete="init()">
	<!--
		 /* *
		 * 名称：总部仪表盘-事故-总体情况
		 * 参数：年度（2012）
		 * 作者：孙山虎
		 * 日期：2013年5月8日
		 * */
	-->
	<fx:Script>
		<![CDATA[
			import events.PopupEvent;
			
			import modules.accident.components.AccidentInfo;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.DateField;
			import mx.core.FlexGlobals;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import skins.popWinStyle;
			
			import spark.components.TitleWindow;
			
			import views.PopupTitleWinDG;
			public const _dataPath:String = "assets/data/zb_accidentdata.xml";
			public const _wsdlPath:String = "assets/webserviceConf.xml";
			public const _dataType:String = "remoteWebservice"; //localStaticData   loccalXMLFile   remoteWebservice
			public const _showCorpCnt:int = 7;
			
			private var isFirstLoad:Boolean = true;
			private var dateStrChanged:Boolean = false;
			[Bindable]
			private var dateStr:String = "2012";
			[Bindable]
			private var showDataLabel:Boolean=true;
			
			[Bindable]
			private var tab1_title:String = "总体情况";
			
			private var tab1_currentYearSelect:String = DateField.dateToString(new Date(), 'YYYY');
			private var tab1_currentMonthSelect:String = DateField.dateToString(new Date(), 'MM');
			
			[Bindable]
			private var tab1_topLeftTitle:String = "";
			[Bindable]
			private var tab1_topRightTitle:String = "";
			[Bindable]
			private var tab1_downTitle:String = "";
			
			[Bindable]
			private var tab1_topLeftConfDS:ArrayCollection;
			[Bindable]
			private var tab1_topRightConfDS:ArrayCollection;
			[Bindable]
			private var tab1_downConfDS:ArrayCollection;
			
			[Bindable]
			private var tab1_topLeftDS:ArrayCollection;
			[Bindable]
			private var tab1_topRightDS:ArrayCollection;
			[Bindable]
			private var tab1_downDS:ArrayCollection;
			
			private var loader_wsdl:URLLoader = new URLLoader();
			private var loader:URLLoader = new URLLoader();
			
			protected function init():void
			{
				
				tab1_topLeftDS = new ArrayCollection();
				tab1_topRightDS = new ArrayCollection();
				tab1_downDS = new ArrayCollection();
				
				tab1_topLeftConfDS = new ArrayCollection([{name: "数量", field: "vol1", type: "lineSeries", axis: "left"},]);
				tab1_topRightConfDS = new ArrayCollection([{name: "数量", field: "vol1", type: "lineSeries", axis: "left"},]);
				tab1_downConfDS = new ArrayCollection([{name: "数量", field: "vol1", type: "lineSeries", axis: "left",color:"0xB69942"},]);
				
				refreshData();
				isFirstLoad = false;
			}
			
			private function refreshData():void
			{
				switch (_dataType)
				{
					case "remoteWebservice": 
						loadWSDL();
						break;
					case "loccalXMLFile": 
						loadData();
						break;
					case "localStaticData": 
						loadDemo();
						break;
				}
			}
			
			private function loadDemo():void
			{
				Alert.show("您现在浏览的为（静态）测试数据");
				//。。。。。。给其他图赋值，这里省略。。。。。。。
			}
			
			private function loadWSDL():void
			{
				loader_wsdl.load(new URLRequest(this._wsdlPath));
				loader_wsdl.addEventListener(Event.COMPLETE, loader_wsdl_result_handler);
			}
			
			private function loader_wsdl_result_handler(event:Event):void
			{
				ws_init();
			}
			
			private function ws_init():void
			{
				try
				{
					ws.wsdl = XML(loader_wsdl.data).url;
					ws.loadWSDL();
					ws.GetAccident(dateStr);
				}
				catch (e:Event)
				{
					Alert.show("请检查WEBSERVICE配置文件，在./assets/webserviceConf.xml中");
				}
			}
			
			protected function ws_resultHandler(event:ResultEvent):void
			{
				hseDataXML = XML(event.result);
				executeBind();
			}
			
			protected function ws_faultHandler(event:FaultEvent):void
			{
				trace(event);
			}
			
			private function loadData():void
			{
				Alert.show("您现在浏览的为（本地XML）测试数据");
				loader.load(new URLRequest(this._dataPath));
				loader.addEventListener(Event.COMPLETE, loadDataHandler);
			}
			
			private function loadDataHandler(event:Event):void
			{
				hseDataXML = XML(loader.data);
				executeBind();
			}
			
			private function executeBind():void
			{
				getTab1_currentYM();
				tab1_topLeftDS = getTab1_topLeftDS();
				tab1_topRightDS = getTab1_topRightDS();
				tab1_downDS = getTab1_downDS();
				
				executeBindTab1Title();
			
			}
			
			private function executeBindTab1Title():void
			{
				tab1_topLeftTitle = "中国石化近5年事故发生情况";
				tab1_topRightTitle = "中国石化" + tab1_currentYearSelect + "年事故发生情况";
				tab1_downTitle = "中国石化" + tab1_currentYearSelect + "年板块未遂事件情况";
			}
			
			private function getTab1_currentYM():void
			{
				try
				{
					//获取当年，当月
					var tmpList0:XMLList = hseDataXML.accidentData;
					if (tmpList0.length() > 0)
					{
						tab1_currentYearSelect = tmpList0[0].@currentYearid;
						tab1_currentMonthSelect = tmpList0[0].@currentMonthid;
					}
				}
				catch (e:Event)
				{
					trace(e);
				}
			}
			
			private function getTab1_topLeftDS():ArrayCollection
			{
				var tmpArrayCollection:ArrayCollection = new ArrayCollection();
				try
				{
					var tmpList:XMLList;
					tmpList = hseDataXML.accidentData.yearData;
					
					if (tmpList.length() > 0)
					{
						for each (var xml:XML in tmpList)
						{
							var obj:Object = {label: xml.@label, vol1: xml.@yearAccidentNumbers, id: xml.@yearid};
							tmpArrayCollection.addItem(obj);
						}
					}
				}
				catch (e:Event)
				{
					trace(e);
				}
				return tmpArrayCollection;
			}
			
			private function getTab1_topRightDS():ArrayCollection
			{
				var tmpArrayCollection:ArrayCollection = new ArrayCollection();
				try
				{
					var tmpList:XMLList;
					tmpList = hseDataXML.accidentData.yearData.(@yearid == tab1_currentYearSelect).monthData;
					if (tmpList.length() > 0)
					{
						for each (var xml:XML in tmpList)
						{
							var obj:Object = {label: xml.@label, vol1: xml.@monthAccidentNumbers, id: xml.@monthid};
							tmpArrayCollection.addItem(obj);
						}
					}
				}
				catch (e:Event)
				{
					trace(e);
				}
				return tmpArrayCollection;
			}
			
			private function getTab1_downDS():ArrayCollection
			{
				var tmpArrayCollection:ArrayCollection = new ArrayCollection();
				try
				{
					var tmpList:XMLList;
					tmpList = hseDataXML.accidentData.yearData.(@yearid == tab1_currentYearSelect).monthData;
					if (tmpList.length() > 0)
					{
						for each (var xml:XML in tmpList)
						{
							var obj:Object = {label: xml.@label, vol1: xml.@monthUnaccidentNumbers, id: xml.@monthid};
							tmpArrayCollection.addItem(obj);
						}
					}
				}
				catch (e:Event)
				{
					trace(e);
				}
				return tmpArrayCollection;
			}
			
			//****************************************************
			//            板块年度数据
			//****************************************************
			//弹出窗口
			private var titleWindow1:views.PopupTitleWinDG;
			private function popupPlateMX(dataType:String, dataTypeName:String):void
			{
				titleWindow1 = new views.PopupTitleWinDG();
				titleWindow1.TitleValue = "中国石化" + dataTypeName + "情况" + " 计量单位：起";
				titleWindow1.addEventListener(CloseEvent.CLOSE, function closeEV():void
					{
						PopUpManager.removePopUp(titleWindow1);
					});
				titleWindow1.IfShowFirstRecordBgColor = true;
				var tmpHeadConf:ArrayCollection = new ArrayCollection([{headerText: "序号", dataField: "order", width: "30", textAlign: "center", sortable: true, draggable: false}, {headerText: "板块", dataField: "label", width: "40", textAlign: "left", sortable: false, draggable: true, enableUrlLink: true,footHeakerText:"合计"}]);
				
				try
				{
					var tmpList0:XMLList = hseDataXML.accidentData.yearData;
					if (tmpList0.length() > 0)
					{
						for each (var xml0:Object in tmpList0)
						{
							var obj0:Object = {headerText: xml0.@label, dataField: "cusField" + xml0.@yearid, yearid: xml0.@yearid, width: "90", textAlign: "center", sortable: true, draggable: true, enableUrlLink: true,footLblFunEnable:true,footLblFunType:"sum"};
							tmpHeadConf.addItem(obj0);
						}
					}
					titleWindow1.DataSourceConf = tmpHeadConf
					
					var tmpArrayCollection:ArrayCollection = new ArrayCollection();
					var tmpArrayCollection2:ArrayCollection = new ArrayCollection();
					var tmpList:XMLList
					tmpList = hseDataXML.accidentData.yearData;
					if (tmpList.length() > 0)
					{
						//合计数据
						/*组件2自动合计，因此不需要数据计算，注释掉
						var obj1:Object = new Object();
						obj1.index = 1;
						obj1.order = "";
						obj1.label = "全部";
						obj1.id = "00";
						obj1.dataType = dataType;
						obj1.dataTypeName = dataTypeName;
						for (var j:int = 2; j < tmpHeadConf.length; j++)
						{ //列
							var tmpYearid1:String = tmpHeadConf[j].yearid
							var tmpYear1:XMLList = tmpList.(@yearid == tmpYearid1);
							//判断是事故还是未遂
							var showNum0:Number = 0;
							if (dataType == "accident")
							{
								showNum0 = (tmpYear1 == null || tmpYear1.length() == 0) ? 0 : Number(tmpYear1[0].@yearAccidentNumbers);
							}
							else
							{
								showNum0 = (tmpYear1 == null || tmpYear1.length() == 0) ? 0 : Number(tmpYear1[0].@yearUnaccidentNumbers);
							}
							obj1[tmpHeadConf[j].dataField] = showNum0;
						}
						tmpArrayCollection2.addItem(obj1);
						*/
						
						//明细数据
						var index:int = 2;
						var order:int = 1;
						//获取第一年的板块信息，作为循环条件
						var tmpPlate:XMLList = tmpList[0].plateData;
						for each (var xml:XML in tmpPlate)
						{
							var obj:Object = new Object();
							obj.index = index;
							obj.order = order;
							obj.label = xml.@plateLabel;
							obj.id = xml.@plateid;
							obj.dataType = dataType;
							obj.dataTypeName = dataTypeName;
							for (var k:int = 2; k < tmpHeadConf.length; k++)
							{ //列
								var tmpYearid:String = tmpHeadConf[k].yearid
								var tmpYearPlate:XMLList = tmpList.(@yearid == tmpYearid).plateData.(@plateid == xml.@plateid);
								//判断是事故还是未遂
								var showNum:Number = 0;
								if (dataType == "accident")
								{
									showNum = (tmpYearPlate == null || tmpYearPlate.length() == 0) ? 0 : Number(tmpYearPlate[0].@yearAccidentNumbers);
								}
								else
								{
									showNum = (tmpYearPlate == null || tmpYearPlate.length() == 0) ? 0 : Number(tmpYearPlate[0].@yearUnaccidentNumbers);
								}
								obj[tmpHeadConf[k].dataField] = showNum;
							}
							tmpArrayCollection.addItem(obj);
							order++;
							index++;
						}
						
						//var sort:Sort=new Sort();  
						//sort.fields=[new SortField("yearAccidentNumbers",true,true)];  
						//tmpArrayCollection.sort=sort;
						//tmpArrayCollection.refresh();
						var order2:int = 1;
						for each (var obj2:Object in tmpArrayCollection)
						{
							obj2.order = order2;
							tmpArrayCollection2.addItem(obj2);
							order2++;
						}
						
					}
					titleWindow1.DataSource = tmpArrayCollection2;
					
				}
				catch (e:Event)
				{
					trace(e);
				}
				titleWindow1.addEventListener(events.PopupEvent.PopupDoubleClick, popCorpYearMX);
				titleWindow1.addEventListener(events.PopupEvent.PopupItemClick, popCorpMonthMX);
				PopUpManager.addPopUp(titleWindow1, this, true);
				PopUpManager.centerPopUp(titleWindow1);
			}
			
			//在板块列表中双击弹出 企业列表
			//titleWindow5.addEventListener(events.PopupEvent.PopupDoubleClick,popPersonsCorp);
			protected function popCorpYearMX(event:events.PopupEvent):void
			{
				var obj:Object = event.hitDataItem;
				if (obj.id != "00")
				{
					popupCorpYearMX(obj.dataType, obj.dataTypeName, obj.id, obj.label);
				}
			}
			
			protected function popCorpMonthMX(event:events.PopupEvent):void
			{
				var obj:Object = event.hitDataItem;
				var currYearid:String = obj.item;
				if (obj.item == "label")
				{
					if (obj.id != "00")
					{
						popupCorpYearMX(obj.dataType, obj.dataTypeName, obj.id, obj.label);
					}
				}
				else
				{
					currYearid = currYearid.substr(8, 4);
					if (obj.id != "00")
					{
						popupCorpMonthMX(obj.dataType, obj.dataTypeName, currYearid, currYearid + "年", obj.id, obj.label);
					}
				}
			}
			//****************************************************
			//            企业年度数据（板块）
			//****************************************************
			//弹出窗口
			private var titleWindow2:views.PopupTitleWinDG;
			private function popupCorpYearMX(dataType:String, dataTypeName:String, plateid:String, platename:String):void
			{
				var flag:Boolean = true;
				if(dataType=="unaccident"){
					flag = false;
				}
				titleWindow2 = new views.PopupTitleWinDG();
				titleWindow2.TitleValue = platename + "板块" + dataTypeName + "情况" + " 计量单位：起";
				titleWindow2.addEventListener(CloseEvent.CLOSE, function closeEV():void
					{
						PopUpManager.removePopUp(titleWindow2);
					});
				titleWindow2.IfShowFirstRecordBgColor = true;
				titleWindow2.IfShowFrontRecordColor = false;
				titleWindow2.IfShowBackRecordColor = false;
				var tmpHeadConf:ArrayCollection = new ArrayCollection([
					{headerText: "序号", dataField: "order", width: "30", textAlign: "center", sortable: true, draggable: false}, 
					{headerText: "企业", dataField: "label", width: "90", textAlign: "center", sortable: true, draggable: true,sortByCustomField:"displayindex",footHeakerText:platename + "板块合计"}
				]);
				
				try
				{
					var tmpList0:XMLList = hseDataXML.accidentData.yearData;
					if (tmpList0.length() > 0)
					{
						for each (var xml0:Object in tmpList0)
						{
							var obj0:Object = {headerText: xml0.@label, dataField: "cusField" + xml0.@yearid, yearid: xml0.@yearid, width: "90", textAlign: "center", sortable: true, draggable: true, enableUrlLink: flag,footLblFunEnable:true,footLblFunType:"sum"};
							tmpHeadConf.addItem(obj0);
						}
					}
					titleWindow2.DataSourceConf = tmpHeadConf
					
					var tmpArrayCollection:ArrayCollection = new ArrayCollection();
					var tmpArrayCollection2:ArrayCollection = new ArrayCollection();
					var tmpList:XMLList
					tmpList = hseDataXML.accidentData.yearData;
					if (tmpList.length() > 0)
					{
						//合计数据
						/*组件2自动合计，因此不需要数据计算，注释掉
						var obj1:Object = new Object();
						obj1.index = 1;
						obj1.order = " ";
						obj1.label = "全部";
						obj1.id = "00";
						obj1.plateid = plateid;
						obj1.platename = platename;
						obj1.dataType = dataType;
						obj1.dataTypeName = dataTypeName;
						obj1.displayindex=0;
						for (var j:int = 2; j < tmpHeadConf.length; j++)
						{ //列
							var tmpYearid1:String = tmpHeadConf[j].yearid
							var tmpYear1:XMLList = tmpList.(@yearid == tmpYearid1).plateData.(@plateid == plateid);
							//判断是事故还是未遂
							var showNum0:Number = 0;
							if (dataType == "accident")
							{
								showNum0 = (tmpYear1 == null || tmpYear1.length() == 0) ? 0 : Number(tmpYear1[0].@yearAccidentNumbers);
							}
							else
							{
								showNum0 = (tmpYear1 == null || tmpYear1.length() == 0) ? 0 : Number(tmpYear1[0].@yearUnaccidentNumbers);
							}
							obj1[tmpHeadConf[j].dataField] = showNum0;
						}
						tmpArrayCollection2.addItem(obj1);
						*/
						
						//明细数据
						var index:int = 2;
						var order:int = 1;
						
						//获取企业信息，作为循环条件
						var tmpCorp_:XMLList = tmpList.plateData.(@plateid == plateid).corpData;
						var tmpCorp:ArrayCollection = new ArrayCollection();
						if (tmpCorp_.length() > 0)
						{
							for each (var xml_:XML in tmpCorp_)
							{
								//判断是否已经有该企业了
								var ifHas:Boolean = false;
								if (tmpCorp && tmpCorp.length > 0)
								{
									for each (var xml1:Object in tmpCorp)
									{
										if (String(xml1.corpid) == String(xml_.@subCorpid))
										{
											ifHas = true;
											break;
										}
									}
								}
								if (!ifHas)
								{
									var oo:Object = new Object;
									oo.corpid = xml_.@subCorpid;
									oo.corpname = xml_.@subCorpname;
									oo.displayindex=Number(xml_.@displayindex);
									tmpCorp.addItem(oo);
								}
							}
						}
						
						if (tmpCorp && tmpCorp.length > 0)
						{
							for each (var xml:Object in tmpCorp)
							{
								var obj:Object = new Object();
								obj.index = index;
								obj.order = order;
								obj.label = xml.corpname;
								obj.id = xml.corpid;
								obj.plateid = plateid;
								obj.platename = platename;
								obj.dataType = dataType;
								obj.dataTypeName = dataTypeName;
								obj.displayindex=Number(xml.displayindex);
								for (var k:int = 2; k < tmpHeadConf.length; k++)
								{ //列
									var tmpYearid:String = tmpHeadConf[k].yearid
									var tmpYearCorp:XMLList = tmpList.(@yearid == tmpYearid).plateData.(@plateid == plateid).corpData.(@subCorpid == xml.corpid);
									//判断是事故还是未遂
									var showNum:Number = 0;
									if (dataType == "accident")
									{
										showNum = (tmpYearCorp == null || tmpYearCorp.length() == 0) ? 0 : Number(tmpYearCorp[0].@yearAccidentNumbers);
									}
									else
									{
										showNum = (tmpYearCorp == null || tmpYearCorp.length() == 0) ? 0 : Number(tmpYearCorp[0].@yearUnaccidentNumbers);
									}
									obj[tmpHeadConf[k].dataField] = showNum;
								}
								tmpArrayCollection.addItem(obj);
								order++;
								index++;
							}
							
							//var sort:Sort=new Sort();  
							//sort.fields=[new SortField("yearAccidentNumbers",true,true)];  
							//tmpArrayCollection.sort=sort;
							//tmpArrayCollection.refresh();
							var order2:int = 1;
							for each (var obj2:Object in tmpArrayCollection)
							{
								obj2.order = order2;
								tmpArrayCollection2.addItem(obj2);
								order2++;
							}
						}
						
					}
					titleWindow2.DataSource = tmpArrayCollection2;
					
				}
				catch (e:Event)
				{
					trace(e);
				}
				titleWindow2.addEventListener(events.PopupEvent.PopupItemClick, popAccMX);
				PopUpManager.addPopUp(titleWindow2, this, true);
				PopUpManager.centerPopUp(titleWindow2);
			}
			
			protected function popAccMX(event:events.PopupEvent):void
			{
				var obj:Object = event.hitDataItem;
				var currYearid:String = obj.item;
				currYearid = currYearid.substr(8, 4);
				var currMonthid:String = "00"
				if (obj.id != "00" && obj.dataType == "accident")
				{
					popupAccMX(currYearid, currYearid + "年", currMonthid, "全年", obj.plateid, obj.platename, obj.id, obj.label);
				}
			}
			
			//****************************************************
			//            事故年度数据（年度，板块，企业）
			//****************************************************
			//弹出窗口
			private var titleWindow3:views.PopupTitleWinDG;
			private function popupAccMX(yearid:String, yearname:String, monthid:String, monthname:String, plateid:String, platename:String, corpid:String, corpname:String):void
			{
				titleWindow3 = new views.PopupTitleWinDG();
				titleWindow3.TitleValue = corpname + yearname + "事故明细";
				titleWindow3.addEventListener(CloseEvent.CLOSE, function closeEV():void
					{
						PopUpManager.removePopUp(titleWindow3);
					});
				titleWindow3.IfShowFirstRecordBgColor = true;
				titleWindow3.IfShowFrontRecordColor = false;
				titleWindow3.IfShowBackRecordColor = false;
				titleWindow3.DataSourceConf = new ArrayCollection([{headerText: "序号", dataField: "order", width: "30", textAlign: "center", sortable: true, draggable: false}, 
					{headerText: "事故名称",  dataField: "accName", width: "300", textAlign: "center", sortable: true, draggable: true, enableUrlLink: true}, 
					{headerText: "发生单位", dataField: "accCorp", width: "90", textAlign: "center", sortable: true, draggable: true}, 
					{headerText: "发生时间", dataField: "accDateTime", width: "110", textAlign: "center", sortable: true, draggable: true}, 
					{headerText: "事故类别", dataField: "accType", width: "60", textAlign: "center", sortable: true, draggable: true}, 
					{headerText: "伤亡人数", dataField: "accCasualties", width: "60", textAlign: "center", sortable: true, draggable: true},
					//{headerText:"登记部门",dataField:"accOrg",width:"90",textAlign:"left",sortable:true,draggable:true},
					//{headerText:"状态",dataField:"accStats",width:"90",textAlign:"left",sortable:true,draggable:true},
					]);
				
				try
				{
					var tmpArrayCollection:ArrayCollection = new ArrayCollection();
					var tmpArrayCollection2:ArrayCollection = new ArrayCollection();
					var tmpList:XMLList
					if (monthid == "" || monthid == "00")
					{
						tmpList = hseDataXML.accidentData.yearData.(@yearid == yearid).monthData.plateData.corpData.(@subCorpid == corpid).accident;
					}
					else
					{
						tmpList = hseDataXML.accidentData.yearData.(@yearid == yearid).monthData.(@monthid == monthid).plateData.corpData.(@subCorpid == corpid).accident;
					}
					
					if (tmpList.length() > 0)
					{
						var index:int = 2;
						var order:int = 1;
						for each (var xml:XML in tmpList)
						{
							var obj:Object = new Object();
							obj.index = index;
							obj.order = order;
							//obj.id = xml.@plateid;
							obj.accName = xml.@accName;
							obj.accCorp = xml.@accFromCorp;
							obj.accDateTime = xml.@accFromTime;
							obj.accType = xml.@accType;
							obj.accOrg = xml.@accRegOrg;
							obj.accStats = xml.@accStats;
							obj.accCasualties = xml.@accCasualties;
							
							obj.accLevel = xml.@accLevel;
							obj.accFromCorp = xml.@accFromCorp;
							obj.accFromTime = xml.@accFromTime;
							obj.ifOutSide = xml.@ifOutSide;
							obj.ifBeiAn = xml.@ifBeiAn;
							obj.accDesc = xml.@accDesc;
							obj.accDeal = xml.@accDeal;
							obj.accTrain = xml.@accTrain;
							
							tmpArrayCollection.addItem(obj);
							order++;
							index++;
						}
						
						//var sort:Sort=new Sort();  
						//sort.fields=[new SortField("yearAccidentNumbers",true,true)];  
						//tmpArrayCollection.sort=sort;
						//tmpArrayCollection.refresh();
						for each (var obj2:Object in tmpArrayCollection)
						{
							tmpArrayCollection2.addItem(obj2);
						}
					}
					titleWindow3.DataSource = tmpArrayCollection2;
					
				}
				catch (e:Event)
				{
					trace(e);
				}
				titleWindow3.addEventListener(events.PopupEvent.PopupItemClick, popAccInfo);
				PopUpManager.addPopUp(titleWindow3, this, true);
				PopUpManager.centerPopUp(titleWindow3);
			}
			//弹出窗口
			private var titleWin:TitleWindow = new TitleWindow;
			private var accInfo:modules.accident.components.AccidentInfo;
			protected function popAccInfo(event:events.PopupEvent):void
			{
				var obj:Object = event.hitDataItem;
				titleWin.removeAllElements();
				titleWin.minWidth=900;
				titleWin.minHeight=500;
				titleWin.height=this.height-60;
				titleWin.width=this.width-60;
				titleWin.addEventListener(CloseEvent.CLOSE, function closeEV():void
					{
						PopUpManager.removePopUp(titleWin);
					});
				if (obj.item == "accName")
				{
					accInfo = new modules.accident.components.AccidentInfo();
					//accName accType accLevel accFromCorp accFromTime accCasualties ifOutSide ifBeiAn accDesc accDeal accTrain
					accInfo.ShowTitle = false;
					accInfo.accName = obj.accName;
					accInfo.accType = obj.accType;
					accInfo.accLevel = obj.accLevel;
					accInfo.accFromCorp = obj.accFromCorp;
					accInfo.accFromTime = obj.accFromTime;
					accInfo.accCasualties = obj.accCasualties;
					accInfo.ifOutSide = obj.ifOutSide;
					accInfo.ifBeiAn = obj.ifBeiAn;
					accInfo.accDesc = obj.accDesc;
					accInfo.accDeal = obj.accDeal;
					accInfo.accTrain = obj.accTrain;
					titleWin.addElement(accInfo);
				}
				titleWin.title = obj.accName + "详情";
				;
				titleWin.setStyle("skinClass", skins.popWinStyle);
				PopUpManager.addPopUp(titleWin, this.root, true);
				PopUpManager.centerPopUp(titleWin);
			}
			
			//****************************************************
			//            企业月度数据（板块，年度）
			//****************************************************
			//弹出窗口
			private var titleWindow4:views.PopupTitleWinDG;
			private function popupCorpMonthMX(dataType:String, dataTypeName:String, yearid:String, yearname:String, plateid:String, platename:String):void
			{
				var flag:Boolean = true;
				if(dataType=="unaccident"){
					flag = false;
				}
				titleWindow4 = new views.PopupTitleWinDG();
				titleWindow4.TitleValue = platename + "板块" + dataTypeName + "情况" + " 计量单位：起";
				titleWindow4.addEventListener(CloseEvent.CLOSE, function closeEV():void
					{
						PopUpManager.removePopUp(titleWindow4);
					});
				titleWindow4.IfShowFirstRecordBgColor = true;
				titleWindow4.IfShowFrontRecordColor = false;
				titleWindow4.IfShowBackRecordColor = false;
				var tmpHeadConf:ArrayCollection = new ArrayCollection([{headerText: "序号", dataField: "order", width: "30", textAlign: "center", sortable: false, draggable: false}, 
					{headerText: "企业", dataField: "label", width: "90", textAlign: "center", sortable: true, draggable: true,sortByCustomField:"displayindex",footHeakerText:platename+"板块合计"},
					
				]);
				if(!flag){
					var obj_total:Object = {headerText: "未遂事件合计", dataField: "total", width: "90", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"};
					tmpHeadConf.addItem(obj_total);
				}
				
				try
				{
					var tmpList0:XMLList = hseDataXML.accidentData.yearData.(@yearid == yearid).monthData;
					if (tmpList0.length() > 0)
					{
						for each (var xml0:Object in tmpList0)
						{
							var obj0:Object = {headerText: xml0.@label, dataField: "cusField" + yearid + "" + xml0.@monthid, yearid: yearid, monthid: xml0.@monthid, width: "50", textAlign: "center", sortable: true, draggable: true, enableUrlLink: flag,footLblFunEnable:true,footLblFunType:"sum"};
							tmpHeadConf.addItem(obj0);
						}
					}
					titleWindow4.DataSourceConf = tmpHeadConf;
					
					var tmpArrayCollection:ArrayCollection = new ArrayCollection();
					var tmpArrayCollection2:ArrayCollection = new ArrayCollection();
					var tmpList:XMLList
					tmpList = hseDataXML.accidentData.yearData;
					if (tmpList.length() > 0)
					{
						//合计数据
						/*组件2自动合计，因此不需要数据计算，注释掉
						var obj1:Object = new Object();
						obj1.index = 1;
						obj1.order = " ";
						obj1.label = platename + "合计";
						obj1.id = "00";
						obj1.plateid = plateid;
						obj1.platename = platename;
						obj1.dataType = dataType;
						obj1.dataTypeName = dataTypeName;
						obj1.displayindex=0
						for (var j:int = 2; j < tmpHeadConf.length; j++)
						{ //列
							//var tmpYearid1:String = tmpHeadConf[j].yearid;
							var tmpMonthid1:String = tmpHeadConf[j].monthid;
							var tmpMonth1:XMLList;
							if (plateid == "00")
							{
								tmpMonth1 = tmpList.(@yearid == yearid).monthData.(@monthid == tmpMonthid1);
							}
							else
							{
								tmpMonth1 = tmpList.(@yearid == yearid).monthData.(@monthid == tmpMonthid1).plateData.(@plateid == plateid);
							}
							//判断是事故还是未遂
							var showNum0:Number = 0;
							if (dataType == "accident")
							{
								showNum0 = (tmpMonth1 == null || tmpMonth1.length() == 0) ? 0 : Number(tmpMonth1[0].@monthAccidentNumbers);
							}
							else
							{
								showNum0 = (tmpMonth1 == null || tmpMonth1.length() == 0) ? 0 : Number(tmpMonth1[0].@monthUnaccidentNumbers);
							}
							obj1[tmpHeadConf[j].dataField] = showNum0;
						}
						tmpArrayCollection2.addItem(obj1);
						*/
						
						//明细数据
						var index:int = 2;
						var order:int = 1;
						//获取企业信息，作为循环条件
						var tmpCorp_:XMLList;
						if (plateid == "00")
						{
							tmpCorp_ = tmpList.(@yearid == yearid).monthData.plateData.corpData;
						}
						else
						{
							tmpCorp_ = tmpList.(@yearid == yearid).monthData.plateData.(@plateid == plateid).corpData;
						}
						
						var tmpCorp:ArrayCollection = new ArrayCollection();
						if (tmpCorp_.length() > 0)
						{
							for each (var xml_:XML in tmpCorp_)
							{
								//判断是否已经有该企业了
								var ifHas:Boolean = false;
								if (tmpCorp && tmpCorp.length > 0)
								{
									for each (var xml1:Object in tmpCorp)
									{
										if (String(xml1.corpid) == String(xml_.@subCorpid))
										{
											ifHas = true;
											break;
										}
									}
								}
								if (!ifHas)
								{
									var oo:Object = new Object();
									oo.corpid = xml_.@subCorpid;
									oo.corpname = xml_.@subCorpname;
									oo.displayindex=Number(xml_.@displayindex);
									tmpCorp.addItem(oo);
								}
							}
						}
						
						if (tmpCorp && tmpCorp.length > 0)
						{
							for each (var xml:Object in tmpCorp)
							{
								var obj:Object = new Object();
								var total_temp:Number = 0;
								obj.index = index;
								obj.order = order;
								obj.label = xml.corpname;
								obj.id = xml.corpid;
								obj.plateid = plateid;
								obj.platename = platename;
								obj.dataType = dataType;
								obj.dataTypeName = dataTypeName;
								obj.displayindex=Number(xml.displayindex);
								var k:int = 2;
								if(!flag){
									k = 3;
								}
								for (k; k < tmpHeadConf.length; k++)
								{ //列
									var tmpYearid:String = tmpHeadConf[k].yearid;
									var tmpMonthid:String = tmpHeadConf[k].monthid;
									//var tmpMonthCorp:XMLList=tmpList.(@yearid==tmpYearid).monthData.(@monthid==tmpMonthid).plateData.(@plateid==plateid).corpData.(@subCorpid==xml.corpid);
									var tmpMonthCorp:XMLList = tmpList.(@yearid == tmpYearid).monthData.(@monthid == tmpMonthid).plateData.corpData.(@subCorpid == xml.corpid);
									//判断是事故还是未遂
									var showNum:Number = 0;
									if (dataType == "accident")
									{
										showNum = (tmpMonthCorp == null || tmpMonthCorp.length() == 0) ? 0 : Number(tmpMonthCorp[0].@monthAccidentNumbers);
									}
									else
									{
										showNum = (tmpMonthCorp == null || tmpMonthCorp.length() == 0) ? 0 : Number(tmpMonthCorp[0].@monthUnaccidentNumbers);
									}
									obj[tmpHeadConf[k].dataField] = showNum;
									total_temp += showNum;
								}
								obj.total = total_temp;
								tmpArrayCollection.addItem(obj);
								order++;
								index++;
							}
							
							//var sort:Sort=new Sort();  
							//sort.fields=[new SortField("yearAccidentNumbers",true,true)];  
							//tmpArrayCollection.sort=sort;
							//tmpArrayCollection.refresh();
							var order2:int = 1;
							for each (var obj2:Object in tmpArrayCollection)
							{
								obj2.order = order2;
								tmpArrayCollection2.addItem(obj2);
								order2++;
							}
						}
						
					}
					titleWindow4.DataSource = tmpArrayCollection2;
					
				}
				catch (e:Event)
				{
					trace(e);
				}
				titleWindow4.addEventListener(events.PopupEvent.PopupItemClick, popMonthAccMX);
				PopUpManager.addPopUp(titleWindow4, this, true);
				PopUpManager.centerPopUp(titleWindow4);
			}
			
			protected function popMonthAccMX(event:events.PopupEvent):void
			{
				var obj:Object = event.hitDataItem;
				var currYearid:String = obj.item;
				var currMonthid:String = currYearid.substr(12, 2);
				currYearid = currYearid.substr(8, 4);
				
				if (obj.id != "00" && obj.dataType == "accident")
				{
					popupAccMX(currYearid, currYearid + "年", currMonthid, currMonthid + "月", obj.plateid, obj.platename, obj.id, obj.label);
				}
			}
			
			public function get DateStr():String
			{
				return dateStr;
			}
			
			public function set DateStr(value:String):void
			{
				if (value != dateStr)
				{
					dateStrChanged = true;
					dateStr = value;
					invalidateProperties();
				}
			}
			public function get ShowDataLabel():Boolean{
				return showDataLabel;
			}
			public function set ShowDataLabel(value:Boolean):void{
				showDataLabel = value;
				executeBind();
			}
			override protected function commitProperties():void
			{
				super.commitProperties();
				if (!isFirstLoad)
				{
					if (dateStrChanged)
					{
						dateStrChanged = false;
						refreshData();
							//invalidateDisplayList();  // invalidate in case the titles 
						
					}
				}
			}
			
			protected function tab1_topLeft_PopupClickHandler(event:PopupEvent):void
			{
				// TODO Auto-generated method stub
				var obj:Object = event.hitDataItem;
				tab1_currentYearSelect = obj.id;
				tab1_topRightDS = getTab1_topRightDS();
				tab1_downDS = getTab1_downDS();
				
				executeBindTab1Title();
			}
			
			protected function unaccGroup_doubleClickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				popupPlateMX("unaccident", "未遂事件");
			}
			
			protected function accGroup_doubleClickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				popupPlateMX("accident", "事故");
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<fx:XML id="hseDataXML"/>
		<mx:WebService id="ws" fault="ws_faultHandler(event)" result="ws_resultHandler(event)"
					   showBusyCursor="true"/>
		<s:RadioButtonGroup id="tab1_plateGrp"/>
		<s:RadioButtonGroup id="tab1_levelGrp"/>
	</fx:Declarations>
	<s:VGroup id="rootGroup" width="100%" height="100%" gap="-1" horizontalAlign="center">
		<s:HGroup id="accGroup" width="100%" height="100%"
				  doubleClick="accGroup_doubleClickHandler(event)" doubleClickEnabled="true"
				  gap="-1" horizontalAlign="center" verticalAlign="top">
			<s:BorderContainer width="100%" height="100%" styleName="contentBox">
				<s:layout>
					<s:VerticalLayout horizontalAlign="justify" paddingBottom="5" paddingLeft="5"
									  paddingRight="5" paddingTop="5"/>
				</s:layout>
				<views:ColumnMulti id="tab1_topLeft" AxisLeftTiltle="事故：起"
								   DataSource="{tab1_topLeftDS}"
								   DataSourceConf="{tab1_topLeftConfDS}" ShowDataLabel="{showDataLabel}"
								   PopupClick="tab1_topLeft_PopupClickHandler(event)"
								   showLegend="false" title="{tab1_topLeftTitle}"/>
			</s:BorderContainer>
			<s:BorderContainer width="100%" height="100%" styleName="contentBox">
				<s:layout>
					<s:VerticalLayout horizontalAlign="justify" paddingBottom="5" paddingLeft="5"
									  paddingRight="5" paddingTop="5"/>
				</s:layout>
				<views:LineMulti id="tab1_topRight" AxisLeftTiltle="事故：起"
								 DataSource="{tab1_topRightDS}"
								 DataSourceConf="{tab1_topRightConfDS}" showLegend="false" ShowDataLabel="{showDataLabel}"
								 title="{tab1_topRightTitle}"/>
			</s:BorderContainer>
		</s:HGroup>
		<s:HGroup id="unaccGroup" width="100%" height="100%"
				  doubleClick="unaccGroup_doubleClickHandler(event)" doubleClickEnabled="true"
				  gap="-1" horizontalAlign="center" verticalAlign="top">
			<s:BorderContainer width="100%" height="100%" styleName="contentBox">
				<s:layout>
					<s:VerticalLayout horizontalAlign="justify" paddingBottom="5" paddingLeft="5"
									  paddingRight="5" paddingTop="5"/>
				</s:layout>
				<views:LineMulti id="tab1_down" AxisLeftTiltle="未遂事件：起" DataSource="{tab1_downDS}"
								 DataSourceConf="{tab1_downConfDS}" showLegend="false" ShowDataLabel="{showDataLabel}"
								 title="{tab1_downTitle}"/>
			</s:BorderContainer>
		</s:HGroup>
	</s:VGroup>
</s:Group>
