<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="400"
		 height="300"
		 xmlns:views="views.*"
		 creationComplete="init()">
	<!--
		 /* *
		 * 名称：总部仪表盘-风险-企业风险落实情况
		 * 参数：开始年月（2012-01），结束年月（2012-12）
		 * 作者：孙山虎
		 * 日期：2012年12月29日
		 * */
	-->
	<fx:Script>
		<![CDATA[
			import events.PopupEvent;
			import events.SetAxisComplateEvent;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.collections.Sort;
			import spark.collections.SortField;
			
			import views.PopupTitleWinDG;
			public const _dataPath:String = "assets/data/zb_riskdata.xml";
			public const _wsdlPath:String = "assets/webserviceConf.xml";
			public const _dataType:String = "remoteWebservice"; //localStaticData   loccalXMLFile   remoteWebservice
			public const _showCorpCnt:int = 7;
			
			private var isFirstLoad:Boolean = true;
			private var dateStrChanged:Boolean = false;
			[Bindable]
			private var dateStr:String = "2012-06|2013-05";
			private var dateStart:String = "2012-06";
			private var dateEnd:String = "2013-05";
			private var dateStartName:String = "2012年06月";
			private var dateEndName:String = "2013年05月";
			[Bindable]
			private var showDataLabel:Boolean=true;
			
			[Bindable]
			private var tab3_title:String = "企业风险落实情况";
			
			[Bindable]
			private var tab3_leftTitle:String = "";
			[Bindable]
			private var tab3_rightTitle:String = "";
			
			[Bindable]
			private var tab3_plateCurrSelect:String;
			private var tab3_plateNameCurrSelect:String;
			[Bindable]
			private var tab3_levelCurrSelect:String;
			private var tab3_levelNameCurrSelect:String;
			
			[Bindable]
			private var tab3_plateDS:ArrayCollection;
			[Bindable]
			private var tab3_levelDS:ArrayCollection;
			
			[Bindable]
			private var tab3_showCorpCnt:int = _showCorpCnt;
			[Bindable]
			private var tab3_showCorpCntMax:int = 1000;
			
			[Bindable]
			private var tab3_leftConfDS:ArrayCollection;
			[Bindable]
			private var tab3_leftDS:ArrayCollection;
			[Bindable]
			private var tab3_rightConfDS:ArrayCollection;
			[Bindable]
			private var tab3_rightDS:ArrayCollection;
			
			private var loader_wsdl:URLLoader = new URLLoader();
			private var loader:URLLoader = new URLLoader();
			
			protected function init():void
			{
				tab3_plateDS = new ArrayCollection();
				tab3_levelDS = new ArrayCollection();
				tab3_leftDS = new ArrayCollection();
				tab3_rightDS = new ArrayCollection();
				//平均落实率（横线）都去掉（所有模块） 20150207  benlin.liu
				tab3_leftConfDS = new ArrayCollection([{name: "落实率", field: "vol1", type: "columnSeries", axis: "left"}, 
					//{name:"日历进度",field:"vol2",type:"lineSeries",axis:"left"},
					//{name: "平均落实率", field: "vol3", type: "lineSeries", axis: "left", showLabel: 0}
				]);
				tab3_rightConfDS = new ArrayCollection([{name: "落实率", field: "vol1", type: "columnSeries", axis: "left"}//, 
					//{name:"日历进度",field:"vol2",type:"lineSeries",axis:"left"},
					//{name: "平均落实率", field: "vol3", type: "lineSeries", axis: "left", showLabel: 0}
					
					]);
				
				refreshData();
				isFirstLoad = false;
			}
			
			private function refreshData():void
			{
//				if(this.dateStart.selectedIndex<this.dateEnd.selectedIndex){
//					Alert.show("开始日期不能大于结束日期！","HSE系统提示您");
//				}
				switch (_dataType)
				{
					case "remoteWebservice": 
						loadWSDL();
						break;
					case "loccalXMLFile": 
						loadData();
						break;
					case "localStaticData": 
						loadDemo();
						break;
				}
			}
			
			private function loadDemo():void
			{
				Alert.show("您现在浏览的为（静态）测试数据");
				//........
			}
			
			private function loadWSDL():void
			{
				loader_wsdl.load(new URLRequest(this._wsdlPath));
				loader_wsdl.addEventListener(Event.COMPLETE, loader_wsdl_result_handler);
			}
			
			private function loader_wsdl_result_handler(event:Event):void
			{
				ws_init();
			}
			
			private function ws_init():void
			{
				try
				{
					ws.wsdl = XML(loader_wsdl.data).url;
					ws.loadWSDL();
					ws.GetRisk(dateStart, dateEnd);
				}
				catch (e:Event)
				{
					Alert.show("请检查WEBSERVICE配置文件，在./assets/webserviceConf.xml中");
				}
			}
			
			protected function ws_resultHandler(event:ResultEvent):void
			{
				hseDataXML = XML(event.result);
				executeBind();
			}
			
			protected function ws_faultHandler(event:FaultEvent):void
			{
				trace(event);
			}
			
			private function loadData():void
			{
				Alert.show("您现在浏览的为（本地XML）测试数据");
				loader.load(new URLRequest(this._dataPath));
				loader.addEventListener(Event.COMPLETE, loadDataHandler);
			}
			
			private function loadDataHandler(event:Event):void
			{
				hseDataXML = XML(loader.data);
				executeBind();
			}
			
			private function executeBind():void
			{
				tab3_plateDS = getTab3_plateDS();
				tab3_levelDS = getTab3_levelDS();
				tab3_showCorpCnt = getTab3_CorpCntDS(this.tab3_plateCurrSelect, this.tab3_levelCurrSelect);
				tab3_showCorpCntMax = getTab3_CorpCntMax(this.tab3_plateCurrSelect, this.tab3_levelCurrSelect);
				
				tab3_leftDS = getTab3_leftDS();
				tab3_rightDS = getTab3_rightDS();
				
				executeBindTab3Title();
			}
			
			private function executeBindTab3Title():void
			{
				if(tab3_plateNameCurrSelect=="全部"){
				    tab3_leftTitle = "中国石化" + dateStartName + "-" + dateEndName + "企业间" + tab3_levelNameCurrSelect + "落实对比完成情况(前" + tab3_showCorpCnt + "名)";
				    tab3_rightTitle = "中国石化" + dateStartName + "-" + dateEndName + "企业间" + tab3_levelNameCurrSelect + "落实对比完成情况(后" + tab3_showCorpCnt + "名)";
				}
				else{
					tab3_leftTitle = "" + tab3_plateNameCurrSelect + "板块" + dateStartName + "-" + dateEndName + "企业间" + tab3_levelNameCurrSelect + "落实对比完成情况(前" + tab3_showCorpCnt + "名)";
					tab3_rightTitle = "" + tab3_plateNameCurrSelect + "板块" + dateStartName + "-" + dateEndName + "企业间" + tab3_levelNameCurrSelect + "落实对比完成情况(后" + tab3_showCorpCnt + "名)";				
				}
			}
			
			private function getTab3_plateDS():ArrayCollection
			{
				var tmpArrayCollection:ArrayCollection = new ArrayCollection();
				try
				{
					var tmpList:XMLList = hseDataXML.byCorp.plateData; //.(@plateid!="00");
					if (tmpList.length() > 0)
					{
						tab3_plateCurrSelect = tmpList[0].@plateid; //设置默认选择
						tab3_plateNameCurrSelect = tmpList[0].@plateLabel;
						tab3_plateNameCurrSelect = tab3_plateNameCurrSelect = null ? "" : tab3_plateNameCurrSelect;
						for each (var xml:XML in tmpList)
						{
							var obj:Object = {label: xml.@plateLabel, value: xml.@plateid};
							tmpArrayCollection.addItem(obj);
						}
					}
				}
				catch (e:Event)
				{
					trace(e);
				}
				return tmpArrayCollection;
			}
			
			private function getTab3_levelDS():ArrayCollection
			{
				var tmpArrayCollection:ArrayCollection = new ArrayCollection();
				try
				{
					var tmpList:XMLList;
					tmpList = hseDataXML.byCorp.plateData.(@plateid == tab3_plateCurrSelect);
					if (tmpList.length() > 0)
					{
						for each (var xml:XML in tmpList[0])
						{
							tab3_levelCurrSelect = (xml.riskData == null || xml.riskData.length() == 0) ? "0" : xml.riskData[0].@riskid; //设置默认选择
							tab3_levelNameCurrSelect = (xml.riskData == null || xml.riskData.length() == 0) ? "" : xml.riskData[0].@label;
							tab3_levelNameCurrSelect = tab3_levelNameCurrSelect == null ? "" : tab3_levelNameCurrSelect;
							if (xml.riskData != null && xml.riskData.length() > 0)
							{
								for each (var xml2:XML in xml.riskData)
								{
									var obj:Object = {label: xml2.@label, value: xml2.@riskid};
									tmpArrayCollection.addItem(obj);
								}
							}
						}
					}
				}
				catch (e:Event)
				{
					trace(e);
				}
				return tmpArrayCollection;
			}
			
			private function getTab3_CorpCntDS(plateid:String, levelid:String):int
			{
				var _cnt:int = getTab3_CorpCntMax(plateid, levelid);
				if (_cnt > _showCorpCnt)
					_cnt = _showCorpCnt;
				return _cnt;
			}
			
			private function getTab3_CorpCntMax(plateid:String, levelid:String):int
			{
				var _cnt:int = 0;
				try
				{
					var tmpList:XMLList;
					tmpList = hseDataXML.byCorp.plateData.(@plateid == plateid).riskData.(@riskid == levelid).corpData;
					
					if (tmpList != null && tmpList.length() > 0)
					{
						_cnt = tmpList.length();
					}
				}
				catch (e:Event)
				{
					trace(e);
				}
				//分左右2部分显示
				_cnt = Math.floor((_cnt + 1) / 2);
				return _cnt;
			}
			
			private function getTab3_leftDS():ArrayCollection
			{
				var tmpArrayCollection:ArrayCollection = new ArrayCollection();
				try
				{
					var tmpList:XMLList;
					tmpList = hseDataXML.byCorp.plateData.(@plateid == tab3_plateCurrSelect);
					
					if (tmpList.length() > 0)
					{
						//						var tmpCnt:int=0;
						for each (var xml:XML in tmpList)
						{
							for each (var xml1:XML in xml.riskData.(@riskid == tab3_levelCurrSelect))
							{
								for each (var xml2:XML in xml1.corpData)
								{
									//									tmpCnt++;
									//									if(tmpCnt>tab3_showCorpCnt) break;
									var obj:Object = {label: xml2.@subCorpname, vol1: xml2.@finishedRatio, vol2: xml2.@calendarRatio, vol3: xml2.@averageFishedratio};
									//增加排序字段,企业显示顺序
									obj.displayindex=Number(xml2.@displayindex);
									tmpArrayCollection.addItem(obj);
								}
								
							}
						}
					}
				}
				catch (e:Event)
				{
					trace(e);
				}
				
				var sort:Sort = new Sort();
				sort.fields = [new SortField("vol1", true, true),new SortField("displayindex", false, true)];
				tmpArrayCollection.sort = sort;
				tmpArrayCollection.refresh();
				
				//筛选记录数，由于先筛选再排序，造成数据不准，所以这里再排序之后进行筛选
				var tmpArrayCollection2:ArrayCollection = new ArrayCollection();
				var tmpCnt:int = 0;
				for (var i:int = 0; i < tmpArrayCollection.length; i++)
				{
					if (i >= tab3_showCorpCnt)
						break;
					tmpArrayCollection2.addItem(tmpArrayCollection.getItemAt(i));
				}
				
				return tmpArrayCollection2;
			}
			
			private function getTab3_rightDS():ArrayCollection
			{
				var tmpArrayCollection:ArrayCollection = new ArrayCollection();
				try
				{
					var tmpList:XMLList;
					tmpList = hseDataXML.byCorp.plateData.(@plateid == tab3_plateCurrSelect);
					
					if (tmpList.length() > 0)
					{
						//						var tmpCnt:int=0;
						for each (var xml:XML in tmpList)
						{
							for each (var xml1:XML in xml.riskData.(@riskid == tab3_levelCurrSelect))
							{
								for (var i:int = xml1.corpData.length() - 1; i >= 0; i--)
								{
									//									tmpCnt++;
									//									if(tmpCnt>tab3_showCorpCnt) break;
									var xml2:XML = xml1.corpData[i];
									var obj:Object = {label: xml2.@subCorpname, vol1: xml2.@finishedRatio, vol2: xml2.@calendarRatio, vol3: xml2.@averageFishedratio};
									tmpArrayCollection.addItem(obj);
								}
							}
						}
					}
				}
				catch (e:Event)
				{
					trace(e);
				}
				
				var sort:Sort = new Sort();
				sort.fields = [new SortField("vol1", false, true)];
				tmpArrayCollection.sort = sort;
				tmpArrayCollection.refresh();
				
				//筛选记录数，由于先筛选再排序，造成数据不准，所以这里再排序之后进行筛选
				var tmpArrayCollection2:ArrayCollection = new ArrayCollection();
				var tmpCnt:int = 0;
				for (var j:int = 0; j < tmpArrayCollection.length; j++)
				{
					if (j >= tab3_showCorpCnt)
						break;
					tmpArrayCollection2.addItem(tmpArrayCollection.getItemAt(j));
				}
				
				return tmpArrayCollection2;
			}
			
			//****************************************************
			//            企业信息
			//****************************************************
			//弹出窗口
			private var titleWindow3:views.PopupTitleWinDG;
			//显示某板块所有企业
			private function popupTab3(corpname:String):void
			{
				titleWindow3 = new views.PopupTitleWinDG();
				titleWindow3.TitleValue = "" + tab3_plateNameCurrSelect + "板块" + "企业间" + tab3_levelNameCurrSelect + "落实情况对比" + "(" + dateStartName + "-" + dateEndName + ")";
				titleWindow3.addEventListener(CloseEvent.CLOSE, function closeEV():void
					{
						PopUpManager.removePopUp(titleWindow3);
					});
				titleWindow3.IfShowFirstRecordBgColor = false;
				titleWindow3.IfShowFrontRecordColor = true;
				titleWindow3.IfShowBackRecordColor = true;
				titleWindow3.DataSourceConf = new ArrayCollection([
					{headerText: "序号", dataField: "order", width: "30", textAlign: "center", sortable: false, draggable: false},
					{headerText: "企业", dataField: "label", width: "90", textAlign: "left", sortable: true, draggable: true,sortByCustomField:"displayindex",footHeakerText: "合计"},
					{headerText: "风险数量", dataField: "vol1", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"}, 
					{headerText: "未评审", dataField: "vol3", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum",enableUrlLink:true}, 
					{headerText: "落实数", dataField: "vol2", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"}, 
					{headerText: "已评审未落实", dataField: "vol5", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum",enableUrlLink:true},
					{headerText: "落实率(%)", dataField: "vol4", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"percent",footLblFunCustomField:"vol2,vol1"}
				]);
				
				try
				{
					var tmpArrayCollection:ArrayCollection = new ArrayCollection();
					var tmpList:XMLList;
					var dg_index:int;
					tmpList = hseDataXML.byCorp.plateData.(@plateid == tab3_plateCurrSelect);
					
					if (tmpList.length() > 0)
					{
						var tmpCorp:XMLList = tmpList[0].riskData.(@riskid == tab3_levelCurrSelect);
						tmpList_zq = tmpCorp;
						var order:int = 1;
						for each (var xml1:XML in tmpCorp.corpData)
						{
							var obj1:Object = new Object();
							obj1.label = xml1.@subCorpname;
							obj1.order = order;
							if(obj1.label == corpname){
								dg_index = order-1;
							}
							obj1.corpid = xml1.@subCorpid;
							var UNREVIEWED:XMLList = xml1.riskSolveData.(@solveid == "UNREVIEWED");
							var SOLVED:XMLList = xml1.riskSolveData.(@solveid == "SOLVED");
							var UNSOLVED:XMLList = xml1.riskSolveData.(@solveid == "UNSOLVED");
							
							var UNREVIEWED_num:Number = (UNREVIEWED == null || UNREVIEWED.length() == 0) ? 0 : Number(UNREVIEWED[0].@numbers); //未评审
							var SOLVED_num:Number = (SOLVED == null || SOLVED.length() == 0) ? 0 : Number(SOLVED[0].@numbers); //已评审已落实
							var UNSOLVED_num:Number = (UNSOLVED == null || UNSOLVED.length() == 0) ? 0 : Number(UNSOLVED[0].@numbers); //已评审未落实
							//var REVIEWED_num:Number=SOLVED_num+UNSOLVED_num;//已评审总数（落实+未落实）
							var REVIEWED_num:Number = Number(xml1.@riskNumbers);
							//var RATE_num:Number=(REVIEWED_num==0)?0:(SOLVED_num*100/REVIEWED_num);//落实率
							var RATE_num:Number = Number(xml1.@finishedRatio); //落实率
							
							obj1.vol1 = REVIEWED_num;
							obj1.vol2 = SOLVED_num;
							obj1.vol3 = UNREVIEWED_num;
							obj1.vol3URL = UNREVIEWED[0].@url;
							obj1.vol4 = RATE_num;
							obj1.vol5 = UNSOLVED_num;
							obj1.vol5URL = UNSOLVED[0].@url;
							obj1.displayindex=Number(xml1.@displayindex);
							tmpArrayCollection.addItem(obj1);
							order++;
						}
						
						var sort:Sort = new Sort();
						sort.fields = [new SortField("vol4", true, true),new SortField("displayindex", false, true)];
						tmpArrayCollection.sort = sort;
						tmpArrayCollection.refresh();
						
						var tmpArrayCollection2:ArrayCollection = new ArrayCollection();
						var order2:int = 1;
						for each (var obj2:Object in tmpArrayCollection)
						{
							obj2.order = order2;
							tmpArrayCollection2.addItem(obj2);
							order2++;
						}
					}
					
					titleWindow3.DataSource = tmpArrayCollection2;
					
				}
				catch (e:Event)
				{
					trace(e);
				}
//				titleWindow3.addEventListener(events.PopupEvent.PopupItemClick, popCorpList);
				PopUpManager.addPopUp(titleWindow3, this, true);
				PopUpManager.centerPopUp(titleWindow3);
				titleWindow3.dataGrid.selectedIndex = titleWindow3.dataGrid.verticalScrollPosition = dg_index;
			}
			
			//显示某具体企业  qy_id：企业ID   qy_name：企业name
			private function popupTab4(qy_name:String):void
			{
				titleWindow3 = new views.PopupTitleWinDG();
				titleWindow3.TitleValue = "" + tab3_plateNameCurrSelect + "板块" + qy_name + tab3_levelNameCurrSelect + "落实情况" + "(" + dateStartName + "-" + dateEndName + ")";
				titleWindow3.addEventListener(CloseEvent.CLOSE, function closeEV():void
				{
					PopUpManager.removePopUp(titleWindow3);
				});
				titleWindow3.IfShowFirstRecordBgColor = false;
				titleWindow3.IfShowFrontRecordColor = true;
				titleWindow3.IfShowBackRecordColor = true;
				titleWindow3.DataSourceConf = new ArrayCollection([
					{headerText: "序号", dataField: "order", width: "30", textAlign: "center", sortable: false, draggable: false},
					{headerText: "企业", dataField: "label", width: "90", textAlign: "left", sortable: true, draggable: true,sortByCustomField:"displayindex",footHeakerText: "合计"},
					{headerText: "风险数量", dataField: "vol1", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"}, 
					{headerText: "未评审", dataField: "vol3", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum",enableUrlLink:true}, 
					{headerText: "落实数", dataField: "vol2", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"}, 
					{headerText: "已评审未落实", dataField: "vol5", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum",enableUrlLink:true},
					{headerText: "落实率(%)", dataField: "vol4", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"percent",footLblFunCustomField:"vol2,vol1"}
				]);
				
				try
				{
					var tmpArrayCollection:ArrayCollection = new ArrayCollection();
					var tmpList:XMLList;
					tmpList = hseDataXML.byCorp.plateData.(@plateid == tab3_plateCurrSelect);
					
					
					
					if (tmpList.length() > 0)
					{
						var tmpCorp:XMLList = tmpList[0].riskData.(@riskid == tab3_levelCurrSelect);
						tmpList_zq = tmpCorp;
						var order:int = 1;
						for each (var xml1:XML in tmpCorp.corpData)
						{
							var obj1:Object = new Object();
							var qymc:String = xml1.@subCorpname;
							if(qymc==qy_name){
							obj1.label = xml1.@subCorpname;
							obj1.order = order;
							obj1.corpid = xml1.@subCorpid;
							var UNREVIEWED:XMLList = xml1.riskSolveData.(@solveid == "UNREVIEWED");
							var SOLVED:XMLList = xml1.riskSolveData.(@solveid == "SOLVED");
							var UNSOLVED:XMLList = xml1.riskSolveData.(@solveid == "UNSOLVED");
							
							var UNREVIEWED_num:Number = (UNREVIEWED == null || UNREVIEWED.length() == 0) ? 0 : Number(UNREVIEWED[0].@numbers); //未评审
							var SOLVED_num:Number = (SOLVED == null || SOLVED.length() == 0) ? 0 : Number(SOLVED[0].@numbers); //已评审已落实
							var UNSOLVED_num:Number = (UNSOLVED == null || UNSOLVED.length() == 0) ? 0 : Number(UNSOLVED[0].@numbers); //已评审未落实
							//var REVIEWED_num:Number=SOLVED_num+UNSOLVED_num;//已评审总数（落实+未落实）
							var REVIEWED_num:Number = Number(xml1.@riskNumbers);
							//var RATE_num:Number=(REVIEWED_num==0)?0:(SOLVED_num*100/REVIEWED_num);//落实率
							var RATE_num:Number = Number(xml1.@finishedRatio); //落实率
							
							obj1.vol1 = REVIEWED_num;
							obj1.vol2 = SOLVED_num;
							obj1.vol3 = UNREVIEWED_num;
							obj1.vol3URL = UNREVIEWED[0].@url;
							obj1.vol4 = RATE_num;
							obj1.vol5 = UNSOLVED_num;
							obj1.vol5URL = UNSOLVED[0].@url;
							obj1.displayindex=Number(xml1.@displayindex);
							tmpArrayCollection.addItem(obj1);
							
							}
						}
						
						
						
						var tmpArrayCollection2:ArrayCollection = new ArrayCollection();
						var order2:int = 1;
						for each (var obj2:Object in tmpArrayCollection)
						{
							obj2.order = order2;
							tmpArrayCollection2.addItem(obj2);
							order2++;
						}
					}
					
					titleWindow3.DataSource = tmpArrayCollection2;
					
				}
				catch (e:Event)
				{
					trace(e);
				}
				//				titleWindow3.addEventListener(events.PopupEvent.PopupItemClick, popCorpList);
				PopUpManager.addPopUp(titleWindow3, this, true);
				PopUpManager.centerPopUp(titleWindow3);
			}
			protected function popCorpList(event:events.PopupEvent):void
			{
				var obj:Object = event.hitDataItem;
				if (obj.item == "vol3")
				{
					if (obj.corpid != "00")
					{
						popupKeyDeviceMX_zq(obj);
					}
				}
			}
			
			private var titleWindow1_zq:views.PopupTitleWinDG;
//			private var plateid_zq:String ="";
//			private var riskid_zq:String = "red";
			private var tmpList_zq:XMLList;
			protected function popupKeyDeviceMX_zq(obj:Object):void
			{
				//				var obj:Object = event.hitDataItem;
				var order:int = 1;
				var tmpArrayCollection:ArrayCollection = new ArrayCollection();
				
				var corpid:String = obj.corpid;
				var plateid:String = tab3_plateCurrSelect;
				var riskid:String = tab3_levelCurrSelect;
				
				//				tmpList_zq = hseDataXML.byCorp.plateData.(@plateid == plateid).riskData.(@riskid==riskid)
				//					.corpData.riskSolveData.unfinishedHarm;
				//				tmpList_zq = hseDataXML.byCorp.plateData.(@plateid == plateid).riskData.(@riskid==riskid)
				//					.corpData.(@subCorpid==subCorpid).riskSolveData.unfinishedHarm;
				
//				tmpList_zq = tmpList_zq.corpData.(@subCorpid==corpid).riskSolveData.unfinishedHarm;
				
				if(corpid&&corpid!=""){
					//					tmpList_zq = tmpList_zq.corpData.(@subCorpid == corpid).riskSolveData.unfinishedHarm;
					
					tmpList_zq = hseDataXML.byCorp.plateData.(@plateid == plateid).riskData.(@riskid==riskid)
						.corpData.(@subCorpid==corpid).riskSolveData.unfinishedHarm;
				}else{
					tmpList_zq = hseDataXML.byCorp.plateData.(@plateid == plateid).riskData.(@riskid==riskid)
						.corpData.riskSolveData.unfinishedHarm;
				}
				
				titleWindow1_zq = new views.PopupTitleWinDG();
				titleWindow1_zq.TitleValue ="未评审重大风险情况表";
				titleWindow1_zq.addEventListener(CloseEvent.CLOSE, function closeEV():void
				{
					PopUpManager.removePopUp(titleWindow1_zq);
				});
				titleWindow1_zq.IfShowFirstRecordBgColor = false;
				titleWindow1_zq.IfShowFrontRecordColor = false;
				titleWindow1_zq.IfShowBackRecordColor = false;
				titleWindow1_zq.DataSourceConf = new ArrayCollection([
					{headerText: "序号", dataField: "order", width: "40", textAlign: "left", sortable: false, draggable: false},
					{headerText: "单位名称", dataField: "label", width: "90", textAlign: "left", sortable: true, draggable: true,sortByCustomField:"displayindex"},
					{headerText: "作业活动/设备", dataField: "activities", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:false,footLblFunType:"sum"}, 
					{headerText: "危害", dataField: "harm", width: "40", textAlign: "center", sortable: true, draggable: true,footHeakerText:""},
					{headerText: "主要后果", dataField: "consequence", width: "40", textAlign: "center", sortable: true, draggable: true,footHeakerText:""},
					{headerText: "评审状态", dataField: "reviewStatus", width: "40", textAlign: "center", sortable: true, draggable: true,footHeakerText:""},
					{headerText: "落实状态", dataField: "toImplementState", width: "40", textAlign: "center", sortable: true, draggable: true,footHeakerText:""},
				]);
				
				
				for each (var xml:XML in tmpList_zq)
				{
					var obj1:Object = {order:order,label: xml.@label,activities:xml.@activities,
						harm: xml.@harm,consequence:xml.@consequence,reviewStatus: xml.@reviewStatus,
						toImplementState: xml.@toImplementState
					};
					obj1.displayindex=Number(xml.@displayindex);
					tmpArrayCollection.addItem(obj1);
					order++;
				}
				titleWindow1_zq.DataSource = tmpArrayCollection;
				PopUpManager.addPopUp(titleWindow1_zq, this, true);
				PopUpManager.centerPopUp(titleWindow1_zq);
				
			}
			
			public function get DateStr():String
			{
				return dateStr;
			}
			
			public function set DateStr(value:String):void
			{
				if (value != dateStr)
				{
					dateStrChanged = true;
					dateStr = value;
					var dateStrArr:Array = dateStr.split('|');
					if (dateStrArr && dateStrArr.length > 1)
					{
						dateStart = dateStrArr[0];
						dateEnd = dateStrArr[1];
						dateStartName = dateStart.substr(0, 4) + "年" + dateStart.substr(5, 2) + "月";
						dateEndName = dateEnd.substr(0, 4) + "年" + dateEnd.substr(5, 2) + "月";
					}
					
					invalidateProperties();
				}
			
			}
			public function get ShowDataLabel():Boolean{
				return showDataLabel;
			}
			public function set ShowDataLabel(value:Boolean):void{
				showDataLabel = value;
				executeBind();
			}
			override protected function commitProperties():void
			{
				super.commitProperties();
				if (!isFirstLoad)
				{
					if (dateStrChanged)
					{
						dateStrChanged = false;
						refreshData();
							//invalidateDisplayList();  // invalidate in case the titles 
						
					}
				}
			}
			
			protected function radiobutton3_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				this.tab3_plateCurrSelect = RadioButton(event.target).value.toString();
				this.tab3_plateNameCurrSelect = RadioButton(event.target).label;
				tab3_plateNameCurrSelect = tab3_plateNameCurrSelect == null ? "" : tab3_plateNameCurrSelect;
				tab3_showCorpCnt = getTab3_CorpCntDS(this.tab3_plateCurrSelect, this.tab3_levelCurrSelect);
				tab3_showCorpCntMax = getTab3_CorpCntMax(this.tab3_plateCurrSelect, this.tab3_levelCurrSelect);
				//初始化tab3_leftDS
				tab3_leftDS = getTab3_leftDS();
				//初始化tab3_rightDS
				tab3_rightDS = getTab3_rightDS();
				executeBindTab3Title();
			}
			
			protected function radiobutton4_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				this.tab3_levelCurrSelect = RadioButton(event.target).value.toString();
				this.tab3_levelNameCurrSelect = RadioButton(event.target).label;
				tab3_levelNameCurrSelect = tab3_levelNameCurrSelect == null ? "" : tab3_levelNameCurrSelect;
				tab3_showCorpCnt = getTab3_CorpCntDS(this.tab3_plateCurrSelect, this.tab3_levelCurrSelect);
				tab3_showCorpCntMax = getTab3_CorpCntMax(this.tab3_plateCurrSelect, this.tab3_levelCurrSelect);
				//初始化tab3_leftDS
				tab3_leftDS = getTab3_leftDS();
				//初始化tab3_rightDS
				tab3_rightDS = getTab3_rightDS();
				executeBindTab3Title();
			}
			
			protected function numericstepper2_changeHandler(event:Event):void
			{
				// TODO Auto-generated method stub
				this.tab3_showCorpCnt = int(NumericStepper(event.target).value);
				//初始化tab3_leftDS
				tab3_leftDS = getTab3_leftDS();
				//初始化tab3_rightDS
				tab3_rightDS = getTab3_rightDS();
				executeBindTab3Title();
			}
			
			//双击弹出风险落实情况窗口
			protected function tab3_PopupDoubleClickHandler(event:PopupEvent):void
			{
				// TODO Auto-generated method stub
				var item:Object = event.hitCfgItem;
				var obj:Object = event.hitDataItem;
				//显示板块所有企业
				popupTab3(obj.label);
				//显示具体企业
				//Alert.show(obj.label);
				
				//popupTab4( obj.label);
			}
			
			[Bindable]
			private var tab3_leftAxisMaximum:Number = 0;
			[Bindable]
			private var tab3_leftAxisMinimum:Number = 0;
			[Bindable]
			private var tab3_rightAxisMaximum:Number = 0;
			[Bindable]
			private var tab3_rightAxisMinimum:Number = 0;
			
			protected function tab3_left_SetAxisComplateHandler(event:SetAxisComplateEvent):void
			{
				// TODO Auto-generated method stub
				tab3_leftAxisMaximum = event.getLeftAxisMaximum>tab3_leftAxisMaximum?event.getLeftAxisMaximum:tab3_leftAxisMaximum;
				tab3_leftAxisMinimum = event.getLeftAxisMinimum<tab3_leftAxisMaximum?event.getLeftAxisMinimum:tab3_leftAxisMinimum;
				tab3_rightAxisMaximum = event.getRightAxisMaximum>tab3_rightAxisMaximum?event.getLeftAxisMaximum:tab3_rightAxisMaximum;
				tab3_rightAxisMinimum = event.getRightAxisMinimum<tab3_rightAxisMinimum?event.getLeftAxisMinimum:tab3_rightAxisMinimum;
			}
			
			protected function tab3_right_SetAxisComplateHandler(event:SetAxisComplateEvent):void
			{
				// TODO Auto-generated method stub
				tab3_leftAxisMaximum = event.getLeftAxisMaximum>tab3_leftAxisMaximum?event.getLeftAxisMaximum:tab3_leftAxisMaximum;
				tab3_leftAxisMinimum = event.getLeftAxisMinimum<tab3_leftAxisMaximum?event.getLeftAxisMinimum:tab3_leftAxisMinimum;
				tab3_rightAxisMaximum = event.getRightAxisMaximum>tab3_rightAxisMaximum?event.getLeftAxisMaximum:tab3_rightAxisMaximum;
				tab3_rightAxisMinimum = event.getRightAxisMinimum<tab3_rightAxisMinimum?event.getLeftAxisMinimum:tab3_rightAxisMinimum;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<fx:XML id="hseDataXML" />
		<mx:WebService id="ws"
					   showBusyCursor="true"
					   result="ws_resultHandler(event)"
					   fault="ws_faultHandler(event)" />
		<s:RadioButtonGroup id="tab3_plateGrp" />
		<s:RadioButtonGroup id="tab3_levelGrp" />
	</fx:Declarations>
	<s:layout>
		<s:VerticalLayout horizontalAlign="left"
						  verticalAlign="middle"
						  gap="0" />
	</s:layout>
	<s:HGroup width="100%"
			  height="30"
			  horizontalAlign="center"
			  gap="-1">
		<s:BorderContainer width="100%" height="35" styleName="tabHead2Box">
			<s:layout>
				<s:HorizontalLayout horizontalAlign="right"
									verticalAlign="middle" />
			</s:layout>
			<mx:HBox borderStyle="outset"
					 styleName="controlBox"
					 paddingLeft="10"
					 paddingRight="10">
				<mx:Repeater id="tab3_plateRep"
							 dataProvider="{tab3_plateDS}">
					<s:RadioButton groupName="tab3_plateGrp"
								   label="{tab3_plateRep.currentItem.label}"
								   value="{tab3_plateRep.currentItem.value}"
								   selected="{tab3_plateRep.currentItem.value==tab3_plateCurrSelect}"
								   click="radiobutton3_clickHandler(event)" />
				</mx:Repeater>
			</mx:HBox>
			<!--20150207 杨雷需求：去掉“重大风险”“中等风险”“一般风险”三个图标
			<mx:HBox borderStyle="outset"
					 styleName="controlBox"
					 paddingLeft="10"
					 paddingRight="10">
				<mx:Repeater id="tab3_levelRep"
							 dataProvider="{tab3_levelDS}">
					<s:RadioButton groupName="tab3_levelGrp"
								   label="{tab3_levelRep.currentItem.label}"
								   value="{tab3_levelRep.currentItem.value}"
								   selected="{tab3_levelRep.currentItem.value==tab3_levelCurrSelect}"
								   click="radiobutton4_clickHandler(event)" />
				</mx:Repeater>
			</mx:HBox>
			-->
			<s:Label text="显示企业数" />
			<mx:NumericStepper value="{tab3_showCorpCnt}"
							   minimum="0"
							   maximum="{tab3_showCorpCntMax}"
							   color="#000000"
							   change="numericstepper2_changeHandler(event)" />
		</s:BorderContainer>
	</s:HGroup>
	<s:VGroup width="100%"
			  height="100%"
			  horizontalAlign="center"
			  gap="-1">
		<s:HGroup width="100%"
				  height="100%"
				  horizontalAlign="center"
				  verticalAlign="top"
				  gap="-1">
			<s:BorderContainer width="100%"
							   height="100%"
							   styleName="contentBox">
				<s:layout>
					<s:VerticalLayout paddingLeft="5"
									  paddingTop="5"
									  paddingBottom="5"
									  paddingRight="5"
									  horizontalAlign="justify" />
				</s:layout>
				<views:ColumnLineMulti id="tab3_left"
									   labelRotationX="45"
									   showTitle="true"
									   showLegend="true"
									   title="{tab3_leftTitle}"
									   AxisLeftUnit="%"
									   DataSource="{tab3_leftDS}" showZoomControlBox="true" ShowDataLabel="{showDataLabel}"
									   DataSourceConf="{tab3_leftConfDS}"
									   PopupDoubleClick="tab3_PopupDoubleClickHandler(event)"
									   SetAxisComplate="tab3_left_SetAxisComplateHandler(event)" 
									   UseCustomAxisMaxMinmum="true"
									   LeftAxisMaximum="{tab3_leftAxisMaximum}"
									   LeftAxisMinimum="{tab3_leftAxisMinimum}"
									   RightAxisMaximum="{tab3_rightAxisMaximum}"
									   RightAxisMinimum="{tab3_rightAxisMinimum}" />
			</s:BorderContainer>
			<s:BorderContainer width="100%"
							   height="100%"
							   styleName="contentBox">
				<s:layout>
					<s:VerticalLayout paddingLeft="5"
									  paddingTop="5"
									  paddingBottom="5"
									  paddingRight="5"
									  horizontalAlign="justify" />
				</s:layout>
				<views:ColumnLineMulti id="tab3_right"
									   labelRotationX="45"
									   showTitle="true"
									   showLegend="true"
									   title="{tab3_rightTitle}"
									   AxisLeftUnit="%"
									   DataSource="{tab3_rightDS}" showZoomControlBox="true" ShowDataLabel="{showDataLabel}"
									   DataSourceConf="{tab3_rightConfDS}"
									   PopupDoubleClick="tab3_PopupDoubleClickHandler(event)"
									   SetAxisComplate="tab3_right_SetAxisComplateHandler(event)"
									   UseCustomAxisMaxMinmum="true"
									   LeftAxisMaximum="{tab3_leftAxisMaximum}"
									   LeftAxisMinimum="{tab3_leftAxisMinimum}"
									   RightAxisMaximum="{tab3_rightAxisMaximum}"
									   RightAxisMinimum="{tab3_rightAxisMinimum}" />
			</s:BorderContainer>
		</s:HGroup>
	</s:VGroup>
</s:Group>
