<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="400"
		 height="300"
		 xmlns:views="views.*"
		 creationComplete="init()">
	<!--
		 /* *
		 * 名称：总部仪表盘-教育培训-分类完成情况
		 * 参数：开始年月（2012-01），结束年月（2012-12）
		 * 作者：孙山虎
		 * 日期：2012年12月29日
	     * 修改日期2015年1月17日 刘本林
		 * */
	-->
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.collections.Sort;
			import spark.collections.SortField;
			
			import events.PopupEvent;
			import events.SetAxisComplateEvent;
			
			import views.PopupTitleWinDG;
			public const _dataPath:String = "assets/data/zb_traindata.xml";
			public const _wsdlPath:String = "assets/webserviceConf.xml";
			public const _dataType:String = "remoteWebservice"; //localStaticData   loccalXMLFile   remoteWebservice
			public const _showCorpCnt:int = 7;
			
			private var isFirstLoad:Boolean = true;
			private var dateStrChanged:Boolean = false;
			[Bindable]
			private var dateStr:String = "2012";
			[Bindable]
			private var showDataLabel:Boolean=true;
			
			[Bindable]
			private var tab1_title:String = "按班次";
			[Bindable]
			private var tab2_title:String = "按人次";
			[Bindable]
			private var tab1_1_title:String = "板块间对比分析";
			[Bindable]
			private var tab1_2_title:String = "企业间对比分析";
			[Bindable]
			private var tab2_1_title:String = "板块间对比分析";
			[Bindable]
			private var tab2_2_title:String = "企业间对比分析";
			
//			[Bindable]
//			private var tab1_1_topLeftTitle:String="中国石化2012年教育培训按班次分类完成情况";
//			[Bindable]
//			private var tab1_1_topRightTitle:String="2012年分类完成情况构成图";
//			[Bindable]
//			private var tab1_1_downTitle:String="中国石化2012年地方政府教育培训按班次完成情况";
//			[Bindable]
//			private var tab1_2_leftTitle:String="炼化板块2012年分类教育培训按班次企业间对比完成情况（后5名）";
//			[Bindable]
//			private var tab1_2_rightTitle:String="炼化板块2012年分类教育培训按班次企业间对比完成情况（后5名）";
//			
//			[Bindable]
//			private var tab2_1_topLeftTitle:String="中国石化2012年教育培训按人次分类完成情况";
//			[Bindable]
//			private var tab2_1_topRightTitle:String="2012年分类完成情况构成图";
//			[Bindable]
//			private var tab2_1_downTitle:String="中国石化2012年地方政府教育培训按人次完成情况";
//			[Bindable]
//			private var tab2_2_leftTitle:String="炼化板块2012年分类教育培训按人次企业间对比完成情况（后5名）";
//			[Bindable]
//			private var tab2_2_rightTitle:String="炼化板块2012年分类教育培训按人次企业间对比完成情况（后5名）";
			
			[Bindable]
			private var tab1_1_topLeftTitle:String = "";
			[Bindable]
			private var tab1_1_topRightTitle:String = "";
			[Bindable]
			private var tab1_1_downTitle:String = "";
			[Bindable]
			private var tab1_2_leftTitle:String = "";
			[Bindable]
			private var tab1_2_rightTitle:String = "";
			
			[Bindable]
			private var tab2_1_topLeftTitle:String = "";
			[Bindable]
			private var tab2_1_topRightTitle:String = "";
			[Bindable]
			private var tab2_1_downTitle:String = "";
			[Bindable]
			private var tab2_2_leftTitle:String = "";
			[Bindable]
			private var tab2_2_rightTitle:String = "";
			
			[Bindable]
			private var tab1_1_levelCurrSelect:String;
			private var tab1_1_levelNameCurrSelect:String;
			[Bindable]
			private var tab1_2_plateCurrSelect:String;
			private var tab1_2_plateNameCurrSelect:String;
			[Bindable]
			private var tab1_2_levelCurrSelect:String;
			private var tab1_2_levelNameCurrSelect:String;
			
			[Bindable]
			private var tab2_1_levelCurrSelect:String;
			private var tab2_1_levelNameCurrSelect:String;
			[Bindable]
			private var tab2_2_plateCurrSelect:String;
			private var tab2_2_plateNameCurrSelect:String;
			[Bindable]
			private var tab2_2_levelCurrSelect:String;
			private var tab2_2_levelNameCurrSelect:String;
			
			[Bindable]
			private var tab1_2_showCorpCnt:int = _showCorpCnt;
			[Bindable]
			private var tab1_2_showCorpCntMax:int = 1000;
			[Bindable]
			private var tab2_2_showCorpCnt:int = _showCorpCnt;
			[Bindable]
			private var tab2_2_showCorpCntMax:int = 1000;
			
			[Bindable]
			private var tab1_1_levelDS:ArrayCollection;
			[Bindable]
			private var tab1_2_plateDS:ArrayCollection;
			[Bindable]
			private var tab1_2_levelDS:ArrayCollection;
			[Bindable]
			private var tab2_1_levelDS:ArrayCollection;
			[Bindable]
			private var tab2_2_plateDS:ArrayCollection;
			[Bindable]
			private var tab2_2_levelDS:ArrayCollection;
			
			[Bindable]
			private var tab1_1_topLeftConfDS:ArrayCollection;
			[Bindable]
			private var tab1_1_downConfDS:ArrayCollection;
			[Bindable]
			private var tab1_2_leftConfDS:ArrayCollection;
			[Bindable]
			private var tab1_2_rightConfDS:ArrayCollection;
			
			[Bindable]
			private var tab2_1_topLeftConfDS:ArrayCollection;
			[Bindable]
			private var tab2_1_downConfDS:ArrayCollection;
			[Bindable]
			private var tab2_2_leftConfDS:ArrayCollection;
			[Bindable]
			private var tab2_2_rightConfDS:ArrayCollection;
			
			[Bindable]
			private var tab1_1_topLeftDS:ArrayCollection;
			[Bindable]
			private var tab1_1_topRightDS:ArrayCollection;
			[Bindable]
			private var tab1_1_downDS:ArrayCollection;
			[Bindable]
			private var tab1_2_leftDS:ArrayCollection;
			[Bindable]
			private var tab1_2_rightDS:ArrayCollection;
			
			[Bindable]
			private var tab2_1_topLeftDS:ArrayCollection;
			[Bindable]
			private var tab2_1_topRightDS:ArrayCollection;
			[Bindable]
			private var tab2_1_downDS:ArrayCollection;
			[Bindable]
			private var tab2_2_leftDS:ArrayCollection;
			[Bindable]
			private var tab2_2_rightDS:ArrayCollection;
			
			private var loader_wsdl:URLLoader = new URLLoader();
			private var loader:URLLoader = new URLLoader();
			
			protected function init():void
			{
				tab1_1_topLeftDS = new ArrayCollection();
				tab1_1_topRightDS = new ArrayCollection();
				tab1_1_downDS = new ArrayCollection();
				tab1_2_leftDS = new ArrayCollection();
				tab1_2_rightDS = new ArrayCollection();
				
				tab2_1_topLeftDS = new ArrayCollection();
				tab2_1_topRightDS = new ArrayCollection();
				tab2_1_downDS = new ArrayCollection();
				tab2_2_leftDS = new ArrayCollection();
				tab2_2_rightDS = new ArrayCollection();
				
				tab1_1_topLeftConfDS = new ArrayCollection([{name: "计划", field: "planClasses", type: "columnSeries", axis: "left"}, {name: "完成", field: "finishedClasses", type: "columnSeries", axis: "left"}, {name: "未完成", field: "remainderClasses", type: "columnSeries", axis: "left"}, {name: "完成率", field: "finishedRatio", type: "lineSeries", axis: "right"}]);
				tab1_1_downConfDS = new ArrayCollection([{name: "计划", field: "planClasses", type: "columnSeries", axis: "left"}, {name: "完成", field: "finishedClasses", type: "columnSeries", axis: "left"}, {name: "未完成", field: "remainderClasses", type: "columnSeries", axis: "left"}, {name: "完成率", field: "finishedRatio", type: "lineSeries", axis: "right"}]);
				tab1_2_leftConfDS = new ArrayCollection([{name: "完成率", field: "finishedRatio", type: "columnSeries", axis: "left"}, 
					//{name:"日历进度",field:"calendarRatio",type:"lineSeries",axis:"left",showLabel:0},
					{name: "平均完成率", field: "averageRatio", type: "lineSeries", axis: "left"},]);
				tab1_2_rightConfDS = new ArrayCollection([{name: "完成率", field: "finishedRatio", type: "columnSeries", axis: "left"}, 
					//{name:"日历进度",field:"calendarRatio",type:"lineSeries",axis:"left",showLabel:0},
					{name: "平均完成率", field: "averageRatio", type: "lineSeries", axis: "left"},]);
				
				tab2_1_topLeftConfDS = new ArrayCollection([{name: "计划", field: "planPerson", type: "columnSeries", axis: "left"},
					{name: "完成", field: "finishedPerons", type: "columnSeries", axis: "left"}, 
					{name: "未完成", field: "remainderPerons", type: "columnSeries", axis: "left"},
//					{name: "已取证", field: "certifiedPersons", type: "columnSeries", axis: "left", showLabel: "0"}, 
//					{name: "未取证", field: "uncertifiedPersons", type: "columnSeries", axis: "left", showLabel: "0"},
					{name: "完成率", field: "finishedRatio", type: "lineSeries", axis: "right"}, 
//					{name: "取证率", field: "certifiedRatio", type: "lineSeries", axis: "right"}
				]);
				tab2_1_downConfDS = new ArrayCollection([{name: "计划", field: "planPerson", type: "columnSeries", axis: "left"},
					{name: "完成", field: "finishedPerons", type: "columnSeries", axis: "left"}, 
					{name: "未完成", field: "remainderPerons", type: "columnSeries", axis: "left"}, 
//					{name: "已取证", field: "certifiedPersons", type: "columnSeries", axis: "left", showLabel: "0"}, 
//					{name: "未取证", field: "uncertifiedPersons", type: "columnSeries", axis: "left", showLabel: "0"},
					{name: "完成率", field: "finishedRatio", type: "lineSeries", axis: "right"}, 
//					{name: "取证率", field: "certifiedRatio", type: "lineSeries", axis: "right"}
				]);
//				tab2_2_leftConfDS = new ArrayCollection([{name: "取证率", field: "certifiedRatio", type: "columnSeries", axis: "left"}, 
//					//{name:"日历进度",field:"calendarRatio",type:"lineSeries",axis:"left",showLabel:0},
//					{name: "平均取证率", field: "averageRatio", type: "lineSeries", axis: "left", showLabel: 0},]);
//				tab2_2_rightConfDS = new ArrayCollection([{name: "取证率", field: "certifiedRatio", type: "columnSeries", axis: "left"}, 
//					//{name:"日历进度",field:"calendarRatio",type:"lineSeries",axis:"left",showLabel:0},
//					{name: "平均取证率", field: "averageRatio", type: "lineSeries", axis: "left", showLabel: 0},]);
				
				tab2_2_leftConfDS = new ArrayCollection([{name: "完成率", field: "finishedRatio", type: "columnSeries", axis: "left"}, 
					//{name:"日历进度",field:"calendarRatio",type:"lineSeries",axis:"left",showLabel:0},
					{name: "平均完成率", field: "averageRatio", type: "lineSeries", axis: "left", showLabel: 0},]);
				tab2_2_rightConfDS = new ArrayCollection([{name: "完成率", field: "finishedRatio", type: "columnSeries", axis: "left"}, 
					//{name:"日历进度",field:"calendarRatio",type:"lineSeries",axis:"left",showLabel:0},
					{name: "平均完成率", field: "averageRatio", type: "lineSeries", axis: "left", showLabel: 0},]);
				
				
				
				refreshData();
				isFirstLoad = false;
			}
			
			private function refreshData():void
			{
				switch (_dataType)
				{
					case "remoteWebservice": 
						loadWSDL();
						break;
					case "loccalXMLFile": 
						loadData();
						break;
					case "localStaticData": 
						loadDemo();
						break;
				}
			}
			
			private function loadDemo():void
			{
				Alert.show("您现在浏览的为（静态）测试数据");
				tab1_2_plateDS = new ArrayCollection([{label: "全部", value: "ALL"}, {label: "油田", value: "YT"}, {label: "炼化", value: "LH"}, {label: "销售", value: "XS"}, {label: "工程", value: "GC"}, {label: "其他", value: "QT"}]);
				tab1_2_levelDS = new ArrayCollection([{label: "全部", value: "LEVEL-0"}, {label: "集团公司级", value: "LEVEL-1"}, {label: "地方政府", value: "LEVEL-2"}, {label: "企业", value: "LEVEL-3"}]);
				tab2_2_plateDS = new ArrayCollection([{label: "全部", value: "ALL"}, {label: "油田", value: "YT"}, {label: "炼化", value: "LH"}, {label: "销售", value: "XS"}, {label: "工程", value: "GC"}, {label: "其他", value: "QT"}]);
				tab2_2_levelDS = new ArrayCollection([{label: "全部", value: "LEVEL-0"}, {label: "集团公司级", value: "LEVEL-1"}, {label: "地方政府", value: "LEVEL-2"}, {label: "企业", value: "LEVEL-3"}]);
				//。。。。。。给其他图赋值，这里省略。。。。。。。
			}
			
			private function loadWSDL():void
			{
				loader_wsdl.load(new URLRequest(this._wsdlPath));
				loader_wsdl.addEventListener(Event.COMPLETE, loader_wsdl_result_handler);
			}
			
			private function loader_wsdl_result_handler(event:Event):void
			{
				ws_init();
			}
			
			private function ws_init():void
			{
				try
				{
					ws.wsdl = XML(loader_wsdl.data).url;
					ws.loadWSDL();
					ws.GetTrain(dateStr, "byKindData");
					
				}
				catch (e:Event)
				{
					Alert.show("请检查WEBSERVICE配置文件，在./assets/webserviceConf.xml中");
				}
			}
			
			protected function ws_resultHandler(event:ResultEvent):void
			{
				hseDataXML = XML(event.result);
				executeBind();
			}
			
			protected function ws_faultHandler(event:FaultEvent):void
			{
				trace(event);
			}
			
			private function loadData():void
			{
				Alert.show("您现在浏览的为（本地XML）测试数据");
				loader.load(new URLRequest(this._dataPath));
				loader.addEventListener(Event.COMPLETE, loadDataHandler);
			}
			
			private function loadDataHandler(event:Event):void
			{
				hseDataXML = XML(loader.data);
				executeBind();
			}
			
			private function executeBind():void
			{
				tab1_1_levelDS = getTab1_1_levelDS();
				tab1_2_plateDS = getTab1_2_plateDS();
				tab1_2_levelDS = getTab1_2_levelDS();
				tab2_1_levelDS = getTab2_1_levelDS();
				tab2_2_plateDS = getTab2_2_plateDS();
				tab2_2_levelDS = getTab2_2_levelDS();
				
				tab1_2_showCorpCnt = getTab1_2_CorpCntDS(this.tab1_2_plateCurrSelect, this.tab1_2_levelCurrSelect);
				tab1_2_showCorpCntMax = getTab1_2_CorpCntMax(this.tab1_2_plateCurrSelect, this.tab1_2_levelCurrSelect);
				tab2_2_showCorpCnt = getTab2_2_CorpCntDS(this.tab2_2_plateCurrSelect, this.tab2_2_levelCurrSelect);
				tab2_2_showCorpCntMax = getTab2_2_CorpCntMax(this.tab2_2_plateCurrSelect, this.tab2_2_levelCurrSelect);
				
				tab1_1_topLeftDS = getTab1_1_topLeftDS();
				tab1_1_topRightDS = getTab1_1_topRightDS();
				tab1_1_downDS = getTab1_1_downDS();
				tab1_2_leftDS = getTab1_2_leftDS();
				tab1_2_rightDS = getTab1_2_rightDS();
				
				tab2_1_topLeftDS = getTab2_1_topLeftDS();
				tab2_1_topRightDS = getTab2_1_topRightDS();
				tab2_1_downDS = getTab2_1_downDS();
				tab2_2_leftDS = getTab2_2_leftDS();
				tab2_2_rightDS = getTab2_2_rightDS();
				
				executeBindTab1_1_topLeftTitle();
				executeBindTab1_1_topRightTitle();
				executeBindTab1_1_downTitle();
				executeBindTab1_2_leftTitle();
				executeBindTab1_2_rightTitle();
				
				executeBindTab2_1_topLeftTitle();
				executeBindTab2_1_topRightTitle();
				executeBindTab2_1_downTitle();
				executeBindTab2_2_leftTitle();
				executeBindTab2_2_rightTitle();
			}
			
			private function executeBindTab1_1_topLeftTitle():void
			{
				tab1_1_topLeftTitle = "中国石化" + dateStr + "年教育培训分级完成情况-按班次";
			}
			
			private function executeBindTab1_1_topRightTitle():void
			{
				tab1_1_topRightTitle = "" + dateStr + "年教育培训分级完成情况构成图-按班次";
			}
			
			private function executeBindTab1_1_downTitle():void
			{
				tab1_1_downTitle = "中国石化" + dateStr + "年" + tab1_1_levelNameCurrSelect + "教育培训完成情况-按班次";
			}
			
			private function executeBindTab1_2_leftTitle():void
			{
				if(this.tab1_2_plateNameCurrSelect =="全部"){
					tab1_2_leftTitle = "中国石化" + dateStr + "年分级教育培训企业间对比完成情况（前" + tab1_2_showCorpCnt + "名）-按班次";
				}else{
				     tab1_2_leftTitle = this.tab1_2_plateNameCurrSelect + "板块" + dateStr + "年分级教育培训企业间对比完成情况（前" + tab1_2_showCorpCnt + "名）-按班次";
				}
			}
			
			private function executeBindTab1_2_rightTitle():void
			{
				if(this.tab1_2_plateNameCurrSelect =="全部"){
					tab1_2_rightTitle =  "中国石化" + dateStr + "年分级教育培训企业间对比完成情况（后" + tab1_2_showCorpCnt + "名）-按班次";
				}else{
					tab1_2_rightTitle = this.tab1_2_plateNameCurrSelect + "板块" + dateStr + "年分级教育培训企业间对比完成情况（后" + tab1_2_showCorpCnt + "名）-按班次";
				}
				
			}
			
			private function executeBindTab2_1_topLeftTitle():void
			{
				tab2_1_topLeftTitle = "中国石化" + dateStr + "年教育培训分级完成情况-按人次";
			}
			
			private function executeBindTab2_1_topRightTitle():void
			{
				tab2_1_topRightTitle = "" + dateStr + "年分级完成情况构成图-按人次";
			}
			
			private function executeBindTab2_1_downTitle():void
			{
				tab2_1_downTitle = "中国石化" + dateStr + "年" + tab2_1_levelNameCurrSelect + "教育培训完成情况-按人次";
			}
			
			private function executeBindTab2_2_leftTitle():void
			{
				if(this.tab2_2_plateNameCurrSelect=="全部"){
					tab2_2_leftTitle = "中国石化" + dateStr + "年分级教育培训企业间对比完成情况（前" + tab2_2_showCorpCnt + "名）-按人次";
				}else{		
				      tab2_2_leftTitle = this.tab2_2_plateNameCurrSelect + "板块" + dateStr + "年分级教育培训企业间对比完成情况（前" + tab2_2_showCorpCnt + "名）-按人次";
				}
			}
			
			private function executeBindTab2_2_rightTitle():void
			{
				if(this.tab2_2_plateNameCurrSelect=="全部"){
				       tab2_2_rightTitle =  "中国石化" + dateStr + "年分级教育培训企业间对比完成情况（后" + tab2_2_showCorpCnt + "名）-按人次";
				}else{
					   tab2_2_rightTitle = this.tab2_2_plateNameCurrSelect + "板块" + dateStr + "年分级教育培训企业间对比完成情况（后" + tab2_2_showCorpCnt + "名）-按人次";
				}
			}
			
			private function getTab1_1_levelDS():ArrayCollection
			{
				var tmpArrayCollection:ArrayCollection = new ArrayCollection();
				try
				{
					var tmpList:XMLList;
					tmpList = hseDataXML.byKindData.byClasses.byPlate.kindData.dataset; //.(@plateid!="00")
					if (tmpList != null && tmpList.length() > 0)
					{
						tab1_1_levelCurrSelect = tmpList[0].@kindid; //设置默认选择
						tab1_1_levelNameCurrSelect = tmpList[0].@label;
						tab1_1_levelNameCurrSelect = tab1_1_levelNameCurrSelect == null ? "" : tab1_1_levelNameCurrSelect;
						for each (var xml:XML in tmpList)
						{
							var obj:Object = {label: xml.@label, value: xml.@kindid};
							tmpArrayCollection.addItem(obj);
						}
					}
				}
				catch (e:Event)
				{
					trace(e);
				}
				return tmpArrayCollection;
			}
			
			private function getTab1_2_plateDS():ArrayCollection
			{
				var tmpArrayCollection:ArrayCollection = new ArrayCollection();
				try
				{
					var tmpList:XMLList;
					tmpList = hseDataXML.byKindData.byClasses.byCorp.plateData;
					if (tmpList.length() > 0)
					{
						tab1_2_plateCurrSelect = tmpList[0].@plateid; //设置默认选择
						tab1_2_plateNameCurrSelect = tmpList[0].@plateLabel;
						tab1_2_plateNameCurrSelect = tab1_2_plateNameCurrSelect == null ? "" : tab1_2_plateNameCurrSelect;
						for each (var xml:XML in tmpList)
						{
							var obj:Object = {label: xml.@plateLabel, value: xml.@plateid};
							tmpArrayCollection.addItem(obj);
						}
					}
				}
				catch (e:Event)
				{
					trace(e);
				}
				return tmpArrayCollection;
			}
			
			private function getTab1_2_levelDS():ArrayCollection
			{
				var tmpArrayCollection:ArrayCollection = new ArrayCollection();
				try
				{
					var tmpList:XMLList;
					tmpList = hseDataXML.byKindData.byClasses.byCorp.plateData.(@plateid == tab1_2_plateCurrSelect); //.(@plateid!="00")
					if (tmpList != null && tmpList.length() > 0)
					{
						var tmpList2:XMLList = tmpList[0].kindData;
						if (tmpList2 != null && tmpList2.length() > 0)
						{
							tab1_2_levelCurrSelect = tmpList2[0].@kindid; //设置默认选择
							tab1_2_levelNameCurrSelect = tmpList2[0].@label;
							tab1_2_levelNameCurrSelect = tab1_2_levelNameCurrSelect == null ? "" : tab1_2_levelNameCurrSelect;
							for each (var xml:XML in tmpList2)
							{
								var obj:Object = {label: xml.@label, value: xml.@kindid};
								tmpArrayCollection.addItem(obj);
							}
						}
					}
				}
				catch (e:Event)
				{
					trace(e);
				}
				return tmpArrayCollection;
			}
			
			private function getTab2_1_levelDS():ArrayCollection
			{
				var tmpArrayCollection:ArrayCollection = new ArrayCollection();
				try
				{
					var tmpList:XMLList;
					tmpList = hseDataXML.byKindData.byPersons.byPlate.kindData.dataset; //.(@plateid!="00")
					if (tmpList != null && tmpList.length() > 0)
					{
						tab2_1_levelCurrSelect = tmpList[0].@kindid; //设置默认选择
						tab2_1_levelNameCurrSelect = tmpList[0].@label;
						tab2_1_levelNameCurrSelect = tab2_1_levelNameCurrSelect == null ? "" : tab2_1_levelNameCurrSelect;
						for each (var xml:XML in tmpList)
						{
							var obj:Object = {label: xml.@label, value: xml.@kindid};
							tmpArrayCollection.addItem(obj);
						}
					}
				}
				catch (e:Event)
				{
					trace(e);
				}
				return tmpArrayCollection;
			}
			
			private function getTab2_2_plateDS():ArrayCollection
			{
				var tmpArrayCollection:ArrayCollection = new ArrayCollection();
				try
				{
					var tmpList:XMLList;
					tmpList = hseDataXML.byKindData.byPersons.byCorp.plateData; //.(@plateid!="00")
					if (tmpList.length() > 0)
					{
						tab2_2_plateCurrSelect = tmpList[0].@plateid; //设置默认选择
						tab2_2_plateNameCurrSelect = tmpList[0].@plateLabel;
						tab2_2_plateNameCurrSelect = tab2_2_plateNameCurrSelect == null ? "" : tab2_2_plateNameCurrSelect;
						for each (var xml:XML in tmpList)
						{
							var obj:Object = {label: xml.@plateLabel, value: xml.@plateid};
							tmpArrayCollection.addItem(obj);
						}
					}
				}
				catch (e:Event)
				{
					trace(e);
				}
				return tmpArrayCollection;
			}
			
			private function getTab2_2_levelDS():ArrayCollection
			{
				var tmpArrayCollection:ArrayCollection = new ArrayCollection();
				try
				{
					var tmpList:XMLList;
					tmpList = hseDataXML.byKindData.byPersons.byCorp.plateData.(@plateid == tab2_2_plateCurrSelect); //.(@plateid!="00")
					if (tmpList != null && tmpList.length() > 0)
					{
						var tmpList2:XMLList = tmpList[0].kindData;
						if (tmpList2 != null && tmpList2.length() > 0)
						{
							tab2_2_levelCurrSelect = tmpList2[0].@kindid; //设置默认选择
							tab2_2_levelNameCurrSelect = tmpList2[0].@label;
							tab2_2_levelNameCurrSelect = tab2_2_levelNameCurrSelect == null ? "" : tab2_2_levelNameCurrSelect;
							for each (var xml:XML in tmpList2)
							{
								var obj:Object = {label: xml.@label, value: xml.@kindid};
								tmpArrayCollection.addItem(obj);
							}
						}
					}
				}
				catch (e:Event)
				{
					trace(e);
				}
				return tmpArrayCollection;
			}
			
			private function getTab1_2_CorpCntDS(plateid:String, levelid:String):int
			{
				var _cnt:int = getTab1_2_CorpCntMax(plateid, levelid);
				if (_cnt > _showCorpCnt)
					_cnt = _showCorpCnt;
				return _cnt;
			}
			
			private function getTab1_2_CorpCntMax(plateid:String, levelid:String):int
			{
				var _cnt:int = 0;
				try
				{
					var tmpList:XMLList;
					tmpList = hseDataXML.byKindData.byClasses.byCorp.plateData.(@plateid == plateid).kindData.(@kindid == levelid).dataset;
					if (tmpList != null && tmpList.length() > 0)
					{
						_cnt = tmpList.length();
					}
				}
				catch (e:Event)
				{
					trace(e);
				}
				//分左右2部分显示
				_cnt = Math.floor((_cnt + 1) / 2);
				return _cnt;
			}
			
			private function getTab2_2_CorpCntDS(plateid:String, levelid:String):int
			{
				var _cnt:int = getTab2_2_CorpCntMax(plateid, levelid);
				if (_cnt > _showCorpCnt)
					_cnt = _showCorpCnt;
				return _cnt;
			}
			
			private function getTab2_2_CorpCntMax(plateid:String, levelid:String):int
			{
				var _cnt:int = 0;
				try
				{
					var tmpList:XMLList;
					tmpList = hseDataXML.byKindData.byPersons.byCorp.plateData.(@plateid == plateid).kindData.(@kindid == levelid).dataset;
					if (tmpList != null && tmpList.length() > 0)
					{
						_cnt = tmpList.length();
					}
				}
				catch (e:Event)
				{
					trace(e);
				}
				//分左右2部分显示
				_cnt = Math.floor((_cnt + 1) / 2);
				return _cnt;
			}
			
			private function getTab1_1_topLeftDS():ArrayCollection
			{
				var tmpArrayCollection:ArrayCollection = new ArrayCollection();
				try
				{
					var tmpList:XMLList;
					tmpList = hseDataXML.byKindData.byClasses.byPlate.kindData.dataset;
					if (tmpList.length() > 0)
					{
						for each (var itemXML:XML in tmpList)
						{
							var obj:Object = new Object();
							obj.label = itemXML.@label;
							obj.planClasses = itemXML.@planClasses;
							obj.finishedClasses = itemXML.@finishedClasses;
							obj.remainderClasses = itemXML.@remainderClasses;
							obj.finishedRatio = itemXML.@finishedRatio;
							tmpArrayCollection.addItem(obj);
						}
					}
				}
				catch (e:Event)
				{
					trace(e);
				}
				return tmpArrayCollection;
			}
			
			private function getTab1_1_topRightDS():ArrayCollection
			{
				var tmpArrayCollection:ArrayCollection = new ArrayCollection();
				try
				{
					var tmpList:XMLList;
					tmpList = hseDataXML.byKindData.byClasses.byPlate.kindData.dataset;
					if (tmpList.length() > 0)
					{
						for each (var itemXML:XML in tmpList)
						{
							var obj:Object = new Object();
							obj.label = itemXML.@label;
							obj.kindid = itemXML.@kindid;
							obj.value = itemXML.@planClasses;
							tmpArrayCollection.addItem(obj);
						}
					}
				}
				catch (e:Event)
				{
					trace(e);
				}
				return tmpArrayCollection;
			}
			
			private function getTab1_1_downDS():ArrayCollection
			{
				var tmpArrayCollection:ArrayCollection = new ArrayCollection();
				try
				{
					var tmpList:XMLList;
					tmpList = hseDataXML.byKindData.byClasses.byPlate.kindPlateData.kindData.(@kindid == tab1_1_levelCurrSelect).dataset;
					if (tmpList.length() > 0)
					{
						for each (var itemXML:XML in tmpList)
						{
							var obj:Object = new Object();
							obj.label = itemXML.@plateLabel;
							obj.planClasses = itemXML.@planClasses;
							obj.finishedClasses = itemXML.@finishedClasses;
							obj.remainderClasses = itemXML.@remainderClasses;
							obj.finishedRatio = itemXML.@finishedRatio;
							tmpArrayCollection.addItem(obj);
						}
					}
				}
				catch (e:Event)
				{
					trace(e);
				}
				return tmpArrayCollection;
			}
			
			private function getTab1_2_leftDS():ArrayCollection
			{
				var tmpArrayCollection:ArrayCollection = new ArrayCollection();
				try
				{
					var tmpList:XMLList;
					tmpList = hseDataXML.byKindData.byClasses.byCorp.plateData.(@plateid == tab1_2_plateCurrSelect).kindData.(@kindid == tab1_2_levelCurrSelect).dataset;
					if (tmpList.length() > 0)
					{
						for each (var itemXML:XML in tmpList)
						{
							var obj:Object = new Object();
							obj.label = itemXML.@subCorpname;
							obj.calendarRatio = itemXML.@calendarRatio;
							obj.averageRatio = itemXML.@averageRatio;
							obj.finishedRatio = itemXML.@finishedRatio;
							tmpArrayCollection.addItem(obj);
						}
					}
				}
				catch (e:Event)
				{
					trace(e);
				}
				var sort:Sort = new Sort();
				sort.fields = [new SortField("finishedRatio", true, true)];
				tmpArrayCollection.sort = sort;
				tmpArrayCollection.refresh();
				//筛选记录数，由于先筛选再排序，造成数据不准，所以这里再排序之后进行筛选
				var tmpArrayCollection2:ArrayCollection = new ArrayCollection();
				var tmpCnt:int = 0;
				for (var i:int = 0; i < tmpArrayCollection.length; i++)
				{
					if (i >= tab1_2_showCorpCnt)
						break;
					tmpArrayCollection2.addItem(tmpArrayCollection.getItemAt(i));
				}
				
				return tmpArrayCollection2;
			}
			
			private function getTab1_2_rightDS():ArrayCollection
			{
				var tmpArrayCollection:ArrayCollection = new ArrayCollection();
				try
				{
					var tmpList:XMLList;
					tmpList = hseDataXML.byKindData.byClasses.byCorp.plateData.(@plateid == tab1_2_plateCurrSelect).kindData.(@kindid == tab1_2_levelCurrSelect).dataset;
					if (tmpList.length() > 0)
					{
						for each (var itemXML:XML in tmpList)
						{
							var obj:Object = new Object();
							obj.label = itemXML.@subCorpname;
							obj.calendarRatio = itemXML.@calendarRatio;
							obj.averageRatio = itemXML.@averageRatio;
							obj.finishedRatio = itemXML.@finishedRatio;
							tmpArrayCollection.addItem(obj);
						}
					}
				}
				catch (e:Event)
				{
					trace(e);
				}
				var sort:Sort = new Sort();
				sort.fields = [new SortField("finishedRatio", false, true)];
				tmpArrayCollection.sort = sort;
				tmpArrayCollection.refresh();
				//筛选记录数，由于先筛选再排序，造成数据不准，所以这里再排序之后进行筛选
				var tmpArrayCollection2:ArrayCollection = new ArrayCollection();
				var tmpCnt:int = 0;
				for (var i:int = 0; i < tmpArrayCollection.length; i++)
				{
					if (i >= tab1_2_showCorpCnt)
						break;
					tmpArrayCollection2.addItem(tmpArrayCollection.getItemAt(i));
				}
				
				return tmpArrayCollection2;
			}
			
			private function getTab2_1_topLeftDS():ArrayCollection
			{
				var tmpArrayCollection:ArrayCollection = new ArrayCollection();
				try
				{
					var tmpList:XMLList;
					tmpList = hseDataXML.byKindData.byPersons.byPlate.kindData.dataset;
					if (tmpList.length() > 0)
					{
						for each (var itemXML:XML in tmpList)
						{
							var obj:Object = new Object();
							obj.label = itemXML.@label;
							obj.planPerson = itemXML.@planPerson;
							obj.finishedPerons = itemXML.@finishedPerons;
							obj.remainderPerons = itemXML.@remainderPerons;
							obj.certifiedPersons = itemXML.@certifiedPersons;
							obj.uncertifiedPersons = itemXML.@uncertifiedPersons;
							obj.finishedRatio = itemXML.@finishedRatio;
							obj.certifiedRatio = itemXML.@certifiedRatio;
							tmpArrayCollection.addItem(obj);
						}
					}
				}
				catch (e:Event)
				{
					trace(e);
				}
				return tmpArrayCollection;
			}
			
			private function getTab2_1_topRightDS():ArrayCollection
			{
				var tmpArrayCollection:ArrayCollection = new ArrayCollection();
				try
				{
					var tmpList:XMLList;
					tmpList = hseDataXML.byKindData.byPersons.byPlate.kindData.dataset;
					if (tmpList.length() > 0)
					{
						for each (var itemXML:XML in tmpList)
						{
							var obj:Object = new Object();
							obj.label = itemXML.@label;
							obj.kindid = itemXML.@kindid;
							obj.value = itemXML.@finishedPerons;
							tmpArrayCollection.addItem(obj);
						}
					}
				}
				catch (e:Event)
				{
					trace(e);
				}
				return tmpArrayCollection;
			}
			
			private function getTab2_1_downDS():ArrayCollection
			{
				var tmpArrayCollection:ArrayCollection = new ArrayCollection();
				try
				{
					var tmpList:XMLList;
					tmpList = hseDataXML.byKindData.byPersons.byPlate.kindPlateData.kindData.(@kindid == tab1_1_levelCurrSelect).dataset;
					if (tmpList.length() > 0)
					{
						for each (var itemXML:XML in tmpList)
						{
							var obj:Object = new Object();
							obj.label = itemXML.@plateLabel;
							obj.planPerson = itemXML.@planPerson;
							obj.finishedPerons = itemXML.@finishedPerons;
							obj.remainderPerons = itemXML.@remainderPerons;
							obj.finishedRatio = itemXML.@finishedRatio;
							obj.certifiedPersons = itemXML.@certifiedPersons;
							obj.uncertifiedPersons = itemXML.@uncertifiedPersons;
							obj.certifiedRatio = itemXML.@certifiedRatio;
							tmpArrayCollection.addItem(obj);
						}
					}
				}
				catch (e:Event)
				{
					trace(e);
				}
				return tmpArrayCollection;
			}
			
			private function getTab2_2_leftDS():ArrayCollection
			{
				var tmpArrayCollection:ArrayCollection = new ArrayCollection();
				try
				{
					var tmpList:XMLList;
					tmpList = hseDataXML.byKindData.byPersons.byCorp.plateData.(@plateid == tab2_2_plateCurrSelect).kindData.(@kindid == tab2_2_levelCurrSelect).dataset;
					if (tmpList.length() > 0)
					{
						for each (var itemXML:XML in tmpList)
						{
							var obj:Object = new Object();
							obj.label = itemXML.@subCorpname;
							obj.certifiedRatio = itemXML.@certifiedRatio;
							obj.calendarRatio = itemXML.@calendarRatio;
							obj.averageRatio = itemXML.@averageRatio;
							obj.finishedRatio = itemXML.@finishedRatio;
							tmpArrayCollection.addItem(obj);
						}
					}
				}
				catch (e:Event)
				{
					trace(e);
				}
				var sort:Sort = new Sort();
				sort.fields = [new SortField("finishedRatio", true, true)];
				tmpArrayCollection.sort = sort;
				tmpArrayCollection.refresh();
				//筛选记录数，由于先筛选再排序，造成数据不准，所以这里再排序之后进行筛选
				var tmpArrayCollection2:ArrayCollection = new ArrayCollection();
				var tmpCnt:int = 0;
				for (var i:int = 0; i < tmpArrayCollection.length; i++)
				{
					if (i >= tab2_2_showCorpCnt)
						break;
					tmpArrayCollection2.addItem(tmpArrayCollection.getItemAt(i));
				}
				
				return tmpArrayCollection2;
			}
			
			private function getTab2_2_rightDS():ArrayCollection
			{
				var tmpArrayCollection:ArrayCollection = new ArrayCollection();
				try
				{
					var tmpList:XMLList;
					tmpList = hseDataXML.byKindData.byPersons.byCorp.plateData.(@plateid == tab2_2_plateCurrSelect).kindData.(@kindid == tab2_2_levelCurrSelect).dataset;
					if (tmpList.length() > 0)
					{
						for each (var itemXML:XML in tmpList)
						{
							var obj:Object = new Object();
							obj.label = itemXML.@subCorpname;
							obj.certifiedRatio = itemXML.@certifiedRatio;
							obj.calendarRatio = itemXML.@calendarRatio;
							obj.averageRatio = itemXML.@averageRatio;
							obj.finishedRatio = itemXML.@finishedRatio;
							tmpArrayCollection.addItem(obj);
						}
					}
				}
				catch (e:Event)
				{
					trace(e);
				}
				var sort:Sort = new Sort();
				sort.fields = [new SortField("finishedRatio", false, true)];
				tmpArrayCollection.sort = sort;
				tmpArrayCollection.refresh();
				//筛选记录数，由于先筛选再排序，造成数据不准，所以这里再排序之后进行筛选
				var tmpArrayCollection2:ArrayCollection = new ArrayCollection();
				var tmpCnt:int = 0;
				for (var i:int = 0; i < tmpArrayCollection.length; i++)
				{
					if (i >= tab2_2_showCorpCnt)
						break;
					tmpArrayCollection2.addItem(tmpArrayCollection.getItemAt(i));
				}
				
				return tmpArrayCollection2;
			}
			
			/*****************************************************************/
			
			//****************************************************
			//            分类完成情况-分类数据
			//****************************************************
			//弹出窗口
			private var titleWindow1:views.PopupTitleWinDG;
			
			protected function showLevelBC():void
			{
				titleWindow1 = new views.PopupTitleWinDG();
				titleWindow1.TitleValue = "中国石化按班次完成情况(" + dateStr + "年) 计量单位：班次";
				titleWindow1.addEventListener(CloseEvent.CLOSE, function closeEV():void
					{
						PopUpManager.removePopUp(titleWindow1);
					});
				titleWindow1.IfShowFirstRecordBgColor = true;
				titleWindow1.IfShowFrontRecordColor = false;
				titleWindow1.IfShowBackRecordColor = false;
				titleWindow1.DataSourceConf = new ArrayCollection([
					{headerText: "序号", dataField: "order", width: "40", textAlign: "center", sortable: true, draggable: false}, 
					{headerText: "培训级别", dataField: "label", width: "40", textAlign: "center", sortable: true, draggable: true,enableUrlLink:true,footHeakerText:"合计"}, 
					{headerText: "计划", dataField: "planClasses", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"}, 
					{headerText: "完成", dataField: "finishedClasses", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"}, 
					{headerText: "未完成",enableUrlLink: false, dataField: "remainderClasses", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"}, 
					{headerText: "完成率%", dataField: "finishedRatio", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"percent",footLblFunCustomField:"finishedClasses,planClasses"}
				]);
				try
				{
					var tmpArrayCollection:ArrayCollection = new ArrayCollection();
					var tmpList:XMLList;
					tmpList = hseDataXML.byKindData.byClasses.byPlate.kindData.dataset;
					if (tmpList.length() > 0)
					{
						var obj_all:Object = new Object();
						var plan_all:Number = 0;
						var act_all:Number = 0;
						var sur_all:Number = 0;
						var rate_all:Number = 0;
						obj_all.label = "合计";
						obj_all.index = 1;
						obj_all.order = "";
						obj_all.id = "00";
						var index:int = 2;
						var order:int = 1;
						for each (var itemXML:XML in tmpList)
						{
							var obj:Object = new Object();
							obj.label = itemXML.@label;
							obj.planClasses = Number(itemXML.@planClasses);
							obj.finishedClasses = Number(itemXML.@finishedClasses);
							obj.remainderClasses = Number(itemXML.@remainderClasses);
							obj.remainderClassesURL = itemXML.@url;
							obj.finishedRatio = itemXML.@finishedRatio;
							obj.index = index;
							obj.order = order;
							obj.id = itemXML.@kindid;
							tmpArrayCollection.addItem(obj);
							index++;
							order++;
							
							plan_all = plan_all + Number(itemXML.@planClasses);
							act_all = act_all + Number(itemXML.@finishedClasses);
							sur_all = sur_all + Number(itemXML.@remainderClasses);
							rate_all = plan_all == 0 ? 0 : (act_all / plan_all) * 100;
						}
						plan_all = Number(plan_all.toFixed(2));
						act_all = Number(act_all.toFixed(2));
						sur_all = Number(sur_all.toFixed(2));
						rate_all = Number(rate_all.toFixed(2));
						
						obj_all.planClasses = plan_all;
						obj_all.finishedClasses = act_all;
						obj_all.remainderClasses = sur_all;
						obj_all.finishedRatio = rate_all;
						
						//合计数据
						/*组件2自动合计，因此不需要数据计算，注释掉
						tmpArrayCollection.addItemAt(obj_all, 0);
						*/
					}
					titleWindow1.DataSource = tmpArrayCollection;
					
				}
				catch (e:Event)
				{
					trace(e);
				}
				//titleWindow1.addEventListener(events.PopupEvent.PopupDoubleClick, popshowPlateByLevelBC);
				titleWindow1.addEventListener(events.PopupEvent.PopupItemClick, popshowPlateByLevelBC);
				PopUpManager.addPopUp(titleWindow1, this, true);
				PopUpManager.centerPopUp(titleWindow1);
			}
			
			//在板块列表中双击弹出 
			//titleWindow1.addEventListener(events.PopupEvent.PopupDoubleClick,popClassCorp);
			protected function popshowPlateByLevelBC(event:events.PopupEvent):void
			{
				var obj:Object = event.hitDataItem;
				if (obj.item == "label")
				{
					if (obj.id != "00")
					{
						showPlateByLevelBC(obj.id, obj.label);
					}
				}
			}
			//****************************************************
			//            分类完成情况-板块数据
			//****************************************************
			//弹出窗口
			private var titleWindow2:views.PopupTitleWinDG;
			
			protected function showPlateByLevelBC(levelid:String, levelname:String):void
			{
				titleWindow2 = new views.PopupTitleWinDG();
				titleWindow2.TitleValue = "中国石化" + levelname + "按班次完成情况(" + dateStr + "年) 计量单位：班次";
				titleWindow2.addEventListener(CloseEvent.CLOSE, function closeEV():void
					{
						PopUpManager.removePopUp(titleWindow2);
					});
				titleWindow2.IfShowFirstRecordBgColor = true;
				titleWindow2.IfShowFrontRecordColor = false;
				titleWindow2.IfShowBackRecordColor = false;
				titleWindow2.DataSourceConf = new ArrayCollection([
					{headerText: "序号", dataField: "order", width: "40", textAlign: "center", sortable: true, draggable: false}, 
					{headerText: "板块", dataField: "plateLabel", width: "40", textAlign: "center", sortable: true, draggable: true,enableUrlLink:true,footHeakerText:"合计"},
					{headerText: "计划", dataField: "planClasses", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"},
					{headerText: "完成", dataField: "finishedClasses", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"},
					{headerText: "未完成",enableUrlLink: false, dataField: "remainderClasses", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"},
					{headerText: "完成率%", dataField: "finishedRatio", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"percent",footLblFunCustomField:"finishedClasses,planClasses"}
				]);
				if (levelid == "00")
				{
					titleWindow2.DataSourceConf.addItemAt({headerText: "级别", dataField: "levelname", width: "50", textAlign: "center", sortable: true, draggable: true}, 1);
				}
				try
				{
					var tmpArrayCollection:ArrayCollection = new ArrayCollection();
					var tmpList:XMLList;
					if (levelid == "00")
					{
						tmpList = hseDataXML.byKindData.byClasses.byPlate.kindPlateData.kindData.dataset;
					}
					else
					{
						tmpList = hseDataXML.byKindData.byClasses.byPlate.kindPlateData.kindData.(@kindid == levelid).dataset;
					}
					if (tmpList.length() > 0)
					{
						var obj_all:Object = new Object();
						var plan_all:Number = 0;
						var act_all:Number = 0;
						var sur_all:Number = 0;
						var rate_all:Number = 0;
						obj_all.plateLabel = "合计";
						obj_all.index = 1;
						obj_all.order = "";
						obj_all.levelid = levelid;
						obj_all.levelname = levelname;
						obj_all.id = "00";
						var index:int = 2;
						var order:int = 1;
						for each (var itemXML:XML in tmpList)
						{
							var obj:Object = new Object();
							obj.plateLabel = itemXML.@plateLabel;
							obj.planClasses = Number(itemXML.@planClasses);
							obj.finishedClasses = Number(itemXML.@finishedClasses);
							obj.remainderClasses = Number(itemXML.@remainderClasses);
							obj.remainderClassesURL = itemXML.@url;
							obj.finishedRatio = itemXML.@finishedRatio;
							obj.index = index;
							obj.order = order;
							obj.levelid = itemXML.parent().@kindid;
							obj.levelname = itemXML.parent().@label;
							obj.id = itemXML.@plateid;
							tmpArrayCollection.addItem(obj);
							index++;
							order++;
							plan_all = plan_all + Number(itemXML.@planClasses);
							act_all = act_all + Number(itemXML.@finishedClasses);
							sur_all = sur_all + Number(itemXML.@remainderClasses);
							rate_all = plan_all == 0 ? 0 : (act_all / plan_all) * 100;
						}
						plan_all = Number(plan_all.toFixed(2));
						act_all = Number(act_all.toFixed(2));
						sur_all = Number(sur_all.toFixed(2));
						rate_all = Number(rate_all.toFixed(2));
						
						obj_all.planClasses = plan_all;
						obj_all.finishedClasses = act_all;
						obj_all.remainderClasses = sur_all;
						obj_all.finishedRatio = rate_all;
						//合计数据
						/*组件2自动合计，因此不需要数据计算，注释掉
						tmpArrayCollection.addItemAt(obj_all, 0);
						*/
					}
					titleWindow2.DataSource = tmpArrayCollection;
					
				}
				catch (e:Event)
				{
					trace(e);
				}
				//titleWindow2.addEventListener(events.PopupEvent.PopupDoubleClick, popshowCorpByPlateLevelBC);
				titleWindow2.addEventListener(events.PopupEvent.PopupItemClick, popshowCorpByPlateLevelBC);
				PopUpManager.addPopUp(titleWindow2, this, true);
				PopUpManager.centerPopUp(titleWindow2);
			}
			
			//在板块列表中双击弹出 
			//titleWindow1.addEventListener(events.PopupEvent.PopupDoubleClick,popClassCorp);
			protected function popshowCorpByPlateLevelBC(event:events.PopupEvent):void
			{
				var obj:Object = event.hitDataItem;
				if (obj.item == "plateLabel")
				{
					if (obj.id != "00" && obj.levelid != "00")
					{
						showCorpByPlateLevelBC(obj.id, obj.plateLabel, obj.levelid, obj.levelname);
					}
				}
			}
			//****************************************************
			//            分类完成情况-企业数据
			//****************************************************
			//弹出窗口
			private var titleWindow3:views.PopupTitleWinDG;
			
			protected function showCorpByPlateLevelBC(plateid:String, platename:String, levelid:String, levelname:String):void
			{
				titleWindow3 = new views.PopupTitleWinDG();
				titleWindow3.TitleValue = platename + "板块" + levelname + "按班次完成情况(" + dateStr + "年) 计量单位：班次";
				titleWindow3.addEventListener(CloseEvent.CLOSE, function closeEV():void
					{
						PopUpManager.removePopUp(titleWindow3);
					});
				titleWindow3.IfShowFirstRecordBgColor = true;
				titleWindow3.IfShowFrontRecordColor = true;
				titleWindow3.IfShowBackRecordColor = true;
				titleWindow3.DataSourceConf = new ArrayCollection([
					{headerText: "序号", dataField: "order", width: "40", textAlign: "center", sortable: true, draggable: false},
					{headerText: "企业", dataField: "subCorpname", width: "40", textAlign: "center", sortable: true, draggable: true,sortByCustomField:"displayindex",footHeakerText:"合计"},
					{headerText: "计划", dataField: "planClasses", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"},
					{headerText: "完成", dataField: "finishedClasses", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"}, 
					{headerText: "未完成",enableUrlLink: true, dataField: "remainderClasses", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"},
					{headerText: "完成率%", dataField: "finishedRatio", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"percent",footLblFunCustomField:"finishedClasses,planClasses"} 
					//{headerText:"日历进度%",dataField:"calendarRatio",width:"40",textAlign:"center",sortable:true,draggable:true},
					//{headerText: "平均取证率%", dataField: "averageRatio", width: "40", textAlign: "center", sortable: true, draggable: true},
				]);
				if (levelid == "00")
				{
					titleWindow3.DataSourceConf.addItemAt({headerText: "级别", dataField: "levelname", width: "50", textAlign: "center", sortable: true, draggable: true}, 1);
				}
				try
				{
					var tmpArrayCollection:ArrayCollection = new ArrayCollection();
					var tmpArrayCollection2:ArrayCollection = new ArrayCollection();
					var tmpList:XMLList;
					tmpList = hseDataXML.byKindData.byClasses.byCorp.plateData.(@plateid == plateid).kindData.(@kindid == levelid);
					
					//合计数据
					/*组件2自动合计，因此不需要数据计算，注释掉
					if (tmpList.length() > 0)
					{
						var obj_all:Object = new Object();
						obj_all.subCorpname = "合计";
						obj_all.finishedClasses = Number(tmpList[0].@finishedClasses);
						obj_all.remainderClasses = Number(tmpList[0].@remainderClasses);
						obj_all.planClasses = Number(tmpList[0].@planClasses);
						obj_all.finishedRatio = Number(tmpList[0].@finishedRatio);
						obj_all.averageRatio = Number(tmpList[0].@averageRatio);
						obj_all.calendarRatio = Number(tmpList[0].@calendarRatio);
						obj_all.levelid = levelid;
						obj_all.levelname = levelname;
						obj_all.index = 1;
						obj_all.order = "";
						tmpArrayCollection2.addItem(obj_all);
					}
					*/
					tmpList = tmpList.dataset;
					if (tmpList.length() > 0)
					{
						var index:int = 2;
						var order:int = 1;
						for each (var itemXML:XML in tmpList)
						{
							var obj:Object = new Object();
							obj.subCorpname = itemXML.@subCorpname;
							obj.finishedClasses = Number(itemXML.@finishedClasses);
							obj.remainderClasses = Number(itemXML.@remainderClasses);
							obj.remainderClassesURL = itemXML.@url;
							obj.planClasses = Number(itemXML.@planClasses);
							obj.finishedRatio = itemXML.@finishedRatio;
							obj.averageRatio = Number(itemXML.@averageRatio);
							obj.calendarRatio = Number(itemXML.@calendarRatio);
							obj.levelid = itemXML.parent().@kindid;
							obj.levelname = itemXML.parent().@label;
							obj.index = index;
							obj.order = order;
							obj.displayindex=Number(itemXML.@displayindex);
							tmpArrayCollection.addItem(obj);
							index++;
							order++;
						}
					}
					
					var sort:Sort = new Sort();
					sort.fields = [new SortField("finishedRatio", true, true),new SortField("displayindex", false, true)];
					tmpArrayCollection.sort = sort;
					tmpArrayCollection.refresh();
					var order2:int = 1;
					for each (var obj2:Object in tmpArrayCollection)
					{
						obj2.order = order2;
						tmpArrayCollection2.addItem(obj2);
						order2++;
					}
					
					titleWindow3.DataSource = tmpArrayCollection2;
					
				}
				catch (e:Event)
				{
					trace(e);
				}
				
				PopUpManager.addPopUp(titleWindow3, this, true);
				PopUpManager.centerPopUp(titleWindow3);
			}
			
			//****************************************************
			//            分类完成情况-分类数据2
			//****************************************************
			//弹出窗口
			private var titleWindow4:views.PopupTitleWinDG;
			
			protected function showLevelRC():void
			{
				titleWindow4 = new views.PopupTitleWinDG();
				titleWindow4.TitleValue = "中国石化按人次完成情况(" + dateStr + "年) 计量单位：人次";
				titleWindow4.addEventListener(CloseEvent.CLOSE, function closeEV():void
					{
						PopUpManager.removePopUp(titleWindow4);
					});
				titleWindow4.IfShowFirstRecordBgColor = true;
				titleWindow4.IfShowFrontRecordColor = false;
				titleWindow4.IfShowBackRecordColor = false;
				titleWindow4.DataSourceConf = new ArrayCollection([
					{headerText: "序号", dataField: "order", width: "40", textAlign: "center", sortable: true, draggable: false}, 
					{headerText: "培训级别", dataField: "label", width: "40", textAlign: "center", sortable: true, draggable: true,enableUrlLink:true,footHeakerText:"合计"},
					{headerText: "计划", dataField: "planPerson", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"}, 
					{headerText: "完成", dataField: "finishedPerons", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"}, 
					{headerText: "未完成", dataField: "remainderPerons", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"}, 
					{headerText: "完成率%", dataField: "finishedRatio", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"percent",footLblFunCustomField:"finishedPerons,planPerson"},
//					{headerText: "已取证", dataField: "certifiedPersons", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"}, 
//					{headerText: "未取证", dataField: "uncertifiedPersons", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"}, 
//					{headerText: "取证率%", dataField: "certifiedRatio", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"percent",footLblFunCustomField:"certifiedPersons,finishedPerons"}
				]);
				try
				{
					var tmpArrayCollection:ArrayCollection = new ArrayCollection();
					var tmpList:XMLList;
					tmpList = hseDataXML.byKindData.byPersons.byPlate.kindData.dataset;
					if (tmpList.length() > 0)
					{
						var obj_all:Object = new Object();
						var plan_all:Number = 0;
						var act_all:Number = 0;
						var sur_all:Number = 0;
						var rate_all:Number = 0;
						var actqz_all:Number = 0;
						var surqz_all:Number = 0;
						var rateqz_all:Number = 0;
						obj_all.label = "合计";
						obj_all.index = 1;
						obj_all.order = "";
						obj_all.id = "00";
						var index:int = 2;
						var order:int = 1;
						for each (var itemXML:XML in tmpList)
						{
							var obj:Object = new Object();
							obj.label = itemXML.@label;
							obj.planPerson = Number(itemXML.@planPerson);
							obj.finishedPerons = Number(itemXML.@finishedPerons);
							obj.remainderPerons = Number(itemXML.@remainderPerons);
							obj.finishedRatio = itemXML.@finishedRatio;
							obj.certifiedPersons = Number(itemXML.@certifiedPersons);
							obj.uncertifiedPersons = Number(itemXML.@uncertifiedPersons);
							obj.certifiedRatio = Number(itemXML.@certifiedRatio);
							obj.index = index;
							obj.order = order;
							obj.id = itemXML.@kindid;
							tmpArrayCollection.addItem(obj);
							index++;
							order++;
							
							plan_all = plan_all + Number(itemXML.@planPerson);
							act_all = act_all + Number(itemXML.@finishedPerons);
							sur_all = sur_all + Number(itemXML.@remainderPerons);
							actqz_all = actqz_all + Number(itemXML.@certifiedPersons);
							surqz_all = surqz_all + Number(itemXML.@uncertifiedPersons);
							
							rate_all = plan_all == 0 ? 0 : (act_all / plan_all) * 100;
							rateqz_all = (actqz_all + surqz_all) == 0 ? 0 : (actqz_all / (actqz_all + surqz_all)) * 100;
						}
						plan_all = Number(plan_all.toFixed(2));
						act_all = Number(act_all.toFixed(2));
						sur_all = Number(sur_all.toFixed(2));
						rate_all = Number(rate_all.toFixed(2));
						actqz_all = Number(actqz_all.toFixed(2));
						surqz_all = Number(surqz_all.toFixed(2));
						rateqz_all = Number(rateqz_all.toFixed(2));
						
						obj_all.planPerson = plan_all;
						obj_all.finishedPerons = act_all;
						obj_all.remainderPerons = sur_all;
						obj_all.finishedRatio = rate_all;
						obj_all.certifiedPersons = actqz_all;
						obj_all.uncertifiedPersons = surqz_all;
						obj_all.certifiedRatio = rateqz_all;
						//合计数据
						/*组件2自动合计，因此不需要数据计算，注释掉
						tmpArrayCollection.addItemAt(obj_all, 0);
						*/
					}
					titleWindow4.DataSource = tmpArrayCollection;
					
				}
				catch (e:Event)
				{
					trace(e);
				}
				//titleWindow4.addEventListener(events.PopupEvent.PopupDoubleClick, popshowPlateByLevelRC);
				titleWindow4.addEventListener(events.PopupEvent.PopupItemClick, popshowPlateByLevelRC);
				PopUpManager.addPopUp(titleWindow4, this, true);
				PopUpManager.centerPopUp(titleWindow4);
			}
			
			//在板块列表中双击弹出 
			//titleWindow1.addEventListener(events.PopupEvent.PopupDoubleClick,popClassCorp);
			protected function popshowPlateByLevelRC(event:events.PopupEvent):void
			{
				var obj:Object = event.hitDataItem;
				if (obj.item == "label")
				{
					if (obj.id != "00")
					{
						showPlateByLevelRC(obj.id, obj.label);
					}
				}
			}
			//****************************************************
			//            分类完成情况-板块数据2
			//****************************************************
			//弹出窗口
			private var titleWindow5:views.PopupTitleWinDG;
			
			protected function showPlateByLevelRC(levelid:String, levelname:String):void
			{
				titleWindow5 = new views.PopupTitleWinDG();
				titleWindow5.TitleValue = "中国石化" + levelname + "按人次完成情况(" + dateStr + "年) 计量单位：人次";
				titleWindow5.addEventListener(CloseEvent.CLOSE, function closeEV():void
					{
						PopUpManager.removePopUp(titleWindow5);
					});
				titleWindow5.IfShowFirstRecordBgColor = true;
				titleWindow5.IfShowFrontRecordColor = false;
				titleWindow5.IfShowBackRecordColor = false;
				titleWindow5.DataSourceConf = new ArrayCollection([
					{headerText: "序号", dataField: "order", width: "40", textAlign: "center", sortable: true, draggable: false}, 
					{headerText: "板块", dataField: "plateLabel", width: "40", textAlign: "center", sortable: true, draggable: true,enableUrlLink:true,footHeakerText:"合计"}, 
					{headerText: "计划", dataField: "planPerson", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"},
					{headerText: "完成", dataField: "finishedPerons", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"}, 
					{headerText: "未完成", dataField: "remainderPerons", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"}, 
					{headerText: "完成率%", dataField: "finishedRatio", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"percent",footLblFunCustomField:"finishedPerons,planPerson"},
//					{headerText: "已取证", dataField: "certifiedPersons", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"}, 
//					{headerText: "未取证", dataField: "uncertifiedPersons", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"}, 
//					{headerText: "取证率%", dataField: "certifiedRatio", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"percent",footLblFunCustomField:"certifiedPersons,finishedPerons"}
				]);
				if (levelid == "00")
				{
					titleWindow5.DataSourceConf.addItemAt({headerText: "级别", dataField: "levelname", width: "50", textAlign: "center", sortable: true, draggable: true}, 1);
				}
				try
				{
					var tmpArrayCollection:ArrayCollection = new ArrayCollection();
					var tmpList:XMLList;
					if (levelid == "00")
					{
						tmpList = hseDataXML.byKindData.byPersons.byPlate.kindPlateData.kindData.dataset;
					}
					else
					{
						tmpList = hseDataXML.byKindData.byPersons.byPlate.kindPlateData.kindData.(@kindid == levelid).dataset;
					}
					
					if (tmpList.length() > 0)
					{
						var obj_all:Object = new Object();
						var plan_all:Number = 0;
						var act_all:Number = 0;
						var sur_all:Number = 0;
						var actqz_all:Number = 0;
						var surqz_all:Number = 0;
						var rate_all:Number = 0;
						var rateqz_all:Number = 0;
						obj_all.plateLabel = "合计";
						obj_all.index = 1;
						obj_all.order = "";
						obj_all.levelid = levelid;
						obj_all.levelname = levelname;
						obj_all.id = "00";
						var index:int = 2;
						var order:int = 1;
						for each (var itemXML:XML in tmpList)
						{
							var obj:Object = new Object();
							obj.plateLabel = itemXML.@plateLabel;
							obj.planPerson = Number(itemXML.@planPerson);
							obj.finishedPerons = Number(itemXML.@finishedPerons);
							obj.remainderPerons = Number(itemXML.@remainderPerons);
							obj.finishedRatio = itemXML.@finishedRatio;
							obj.certifiedPersons = Number(itemXML.@certifiedPersons);
							obj.uncertifiedPersons = Number(itemXML.@uncertifiedPersons);
							obj.certifiedRatio = Number(itemXML.@certifiedRatio);
							obj.index = index;
							obj.order = order;
							obj.levelid = itemXML.parent().@kindid;
							obj.levelname = itemXML.parent().@label;
							obj.id = itemXML.@plateid;
							tmpArrayCollection.addItem(obj);
							index++;
							order++;
							
							plan_all = plan_all + Number(itemXML.@planPerson);
							act_all = act_all + Number(itemXML.@finishedPerons);
							sur_all = sur_all + Number(itemXML.@remainderPerons);
							actqz_all = actqz_all + Number(itemXML.@certifiedPersons);
							surqz_all = surqz_all + Number(itemXML.@uncertifiedPersons);
							rate_all = plan_all == 0 ? 0 : (act_all / plan_all) * 100;
							rateqz_all = (actqz_all + surqz_all) == 0 ? 0 : (actqz_all / (actqz_all + surqz_all)) * 100;
						}
						
						plan_all = Number(plan_all.toFixed(2));
						act_all = Number(act_all.toFixed(2));
						sur_all = Number(sur_all.toFixed(2));
						rate_all = Number(rate_all.toFixed(2));
						actqz_all = Number(actqz_all.toFixed(2));
						surqz_all = Number(surqz_all.toFixed(2));
						rateqz_all = Number(rateqz_all.toFixed(2));
						
						obj_all.planPerson = plan_all;
						obj_all.finishedPerons = act_all;
						obj_all.remainderPerons = sur_all;
						obj_all.finishedRatio = rate_all;
						obj_all.certifiedPersons = actqz_all;
						obj_all.uncertifiedPersons = surqz_all;
						obj_all.certifiedRatio = rateqz_all;
						//合计数据
						/*组件2自动合计，因此不需要数据计算，注释掉
						tmpArrayCollection.addItemAt(obj_all, 0);
						*/
					}
					titleWindow5.DataSource = tmpArrayCollection;
					
				}
				catch (e:Event)
				{
					trace(e);
				}
				//titleWindow5.addEventListener(events.PopupEvent.PopupDoubleClick, popshowCorpByPlateLevelRC);
				titleWindow5.addEventListener(events.PopupEvent.PopupItemClick, popshowCorpByPlateLevelRC);
				PopUpManager.addPopUp(titleWindow5, this, true);
				PopUpManager.centerPopUp(titleWindow5);
			}
			
			//在板块列表中双击弹出 
			//titleWindow1.addEventListener(events.PopupEvent.PopupDoubleClick,popClassCorp);
			protected function popshowCorpByPlateLevelRC(event:events.PopupEvent):void
			{
				var obj:Object = event.hitDataItem;
				if (obj.item == "plateLabel")
				{
					if (obj.id != "00" && obj.levelid != "00")
					{
						showCorpByPlateLevelRC(obj.id, obj.plateLabel, obj.levelid, obj.levelname);
					}
				}
			}
			//****************************************************
			//            分类完成情况-企业数据2
			//****************************************************
			//弹出窗口
			private var titleWindow6:views.PopupTitleWinDG;
			
			protected function showCorpByPlateLevelRC(plateid:String, platename:String, levelid:String, levelname:String):void
			{
				titleWindow6 = new views.PopupTitleWinDG();
				titleWindow6.TitleValue = platename + "板块" + levelname + "按人次完成情况(" + dateStr + "年) 计量单位：人次";
				titleWindow6.addEventListener(CloseEvent.CLOSE, function closeEV():void
					{
						PopUpManager.removePopUp(titleWindow6);
					});
				titleWindow6.IfShowFirstRecordBgColor = true;
				titleWindow6.IfShowFrontRecordColor = true;
				titleWindow6.IfShowBackRecordColor = true;
				titleWindow6.DataSourceConf = new ArrayCollection([
					{headerText: "序号", dataField: "order", width: "40", textAlign: "center", sortable: true, draggable: false}, 
					{headerText: "企业", dataField: "subCorpname", width: "40", textAlign: "center", sortable: true, draggable: true,sortByCustomField:"displayindex",footHeakerText:"合计"}, 
					{headerText: "计划", dataField: "planPerson", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"}, 
					{headerText: "完成", dataField: "finishedPerons", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"},
					{headerText: "未完成", dataField: "remainderPerons", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"},
					{headerText: "完成率%", dataField: "finishedRatio", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"percent",footLblFunCustomField:"finishedPerons,planPerson"}, 
//					{headerText: "已取证", dataField: "certifiedPersons", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"}, 
//					{headerText: "未取证", dataField: "uncertifiedPersons", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"sum"}, 
//					{headerText: "取证率%", dataField: "certifiedRatio", width: "40", textAlign: "center", sortable: true, draggable: true,footLblFunEnable:true,footLblFunType:"percent",footLblFunCustomField:"certifiedPersons,finishedPerons"} 
					//{headerText:"日历进度%",dataField:"calendarRatio",width:"40",textAlign:"center",sortable:true,draggable:true},
					//{headerText: "平均取证率%", dataField: "averageRatio", width: "40", textAlign: "center", sortable: true, draggable: true},
					
					]);
				//if (levelid == "00")
				//{
				//	titleWindow6.DataSourceConf.addItemAt({headerText: "级别", dataField: "levelname", width: "50", textAlign: "left", sortable: true, draggable: true}, 1);
				//}
				try
				{
					var tmpArrayCollection:ArrayCollection = new ArrayCollection();
					var tmpArrayCollection2:ArrayCollection = new ArrayCollection();
					var tmpList:XMLList;
					
					tmpList = hseDataXML.byKindData.byPersons.byCorp.plateData.(@plateid == plateid).kindData.(@kindid == levelid);
					//合计数据
					/*组件2自动合计，因此不需要数据计算，注释掉
					if (tmpList.length() > 0)
					{
						var obj_all:Object = new Object();
						obj_all.subCorpname = "合计";
						obj_all.finishedPerons = Number(tmpList[0].@finishedPerons);
						obj_all.remainderPerons = Number(tmpList[0].@remainderPerons);
						obj_all.planPerson = Number(tmpList[0].@planPerson);
						obj_all.finishedRatio = Number(tmpList[0].@finishedRatio);
						obj_all.certifiedRatio = Number(tmpList[0].@certifiedRatio);
						obj_all.averageRatio = Number(tmpList[0].@averageRatio);
						obj_all.calendarRatio = Number(tmpList[0].@calendarRatio);
						obj_all.certifiedPersons = Number(tmpList[0].@certifiedPersons);
						obj_all.uncertifiedPersons = Number(tmpList[0].@uncertifiedPersons);
						obj_all.levelid = levelid;
						obj_all.levelname = levelname;
						obj_all.index = 1;
						obj_all.order = "";
						tmpArrayCollection2.addItem(obj_all);
					}
					*/
					tmpList = tmpList.dataset;
					if (tmpList.length() > 0)
					{
						var index:int = 2;
						var order:int = 1;
						for each (var itemXML:XML in tmpList)
						{
							var obj:Object = new Object();
							obj.subCorpname = itemXML.@subCorpname;
							obj.finishedPerons = Number(itemXML.@finishedPerons);
							obj.remainderPerons = Number(itemXML.@remainderPerons);
							obj.planPerson = Number(itemXML.@planPerson);
							obj.finishedRatio = itemXML.@finishedRatio;
							obj.certifiedRatio = Number(itemXML.@certifiedRatio);
							obj.averageRatio = Number(itemXML.@averageRatio);
							obj.calendarRatio = Number(itemXML.@calendarRatio);
							obj.certifiedPersons = Number(itemXML.@certifiedPersons);
							obj.uncertifiedPersons = Number(itemXML.@uncertifiedPersons);
							obj.levelid = itemXML.parent().@kindid;
							obj.levelname = itemXML.parent().@label;
							obj.index = index;
							obj.order = order;
							obj.displayindex=Number(itemXML.@displayindex);
							tmpArrayCollection.addItem(obj);
							index++;
							order++;
						}
					}
					
					var sort:Sort = new Sort();
					sort.fields = [new SortField("finishedRatio", true, true),new SortField("displayindex", false, true)];
					tmpArrayCollection.sort = sort;
					tmpArrayCollection.refresh();
					var order2:int = 1;
					for each (var obj2:Object in tmpArrayCollection)
					{
						obj2.order = order2;
						tmpArrayCollection2.addItem(obj2);
						order2++;
					}
					
					titleWindow6.DataSource = tmpArrayCollection2;
					
				}
				catch (e:Event)
				{
					trace(e);
				}
				
				PopUpManager.addPopUp(titleWindow6, this, true);
				PopUpManager.centerPopUp(titleWindow6);
			}
			
			/*****************************************************************/
			public function get DateStr():String
			{
				return dateStr;
			}
			
			public function set DateStr(value:String):void
			{
				if (value != dateStr)
				{
					dateStrChanged = true;
					dateStr = value;
					invalidateProperties();
				}
			}
			public function get ShowDataLabel():Boolean{
				return showDataLabel;
			}
			public function set ShowDataLabel(value:Boolean):void{
				showDataLabel = value;
				executeBind();
			}
			override protected function commitProperties():void
			{
				super.commitProperties();
				if (!isFirstLoad)
				{
					if (dateStrChanged)
					{
						dateStrChanged = false;
						refreshData();
							//invalidateDisplayList();  // invalidate in case the titles 
						
					}
				}
			}
			
			/*****************************************************************/
			
			protected function tab1_2_plate_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				tab1_2_plateCurrSelect = RadioButton(event.target).value.toString();
				tab1_2_plateNameCurrSelect = RadioButton(event.target).label;
				tab1_2_plateNameCurrSelect = tab1_2_plateNameCurrSelect == null ? "" : tab1_2_plateNameCurrSelect;
				
				tab1_2_levelDS = getTab1_2_levelDS();
				tab1_2_showCorpCnt = getTab1_2_CorpCntDS(this.tab1_2_plateCurrSelect, this.tab1_2_levelCurrSelect);
				tab1_2_showCorpCntMax = getTab1_2_CorpCntMax(this.tab1_2_plateCurrSelect, this.tab1_2_levelCurrSelect);
				tab1_2_leftDS = getTab1_2_leftDS();
				tab1_2_rightDS = getTab1_2_rightDS();
				executeBindTab1_2_leftTitle();
				executeBindTab1_2_rightTitle();
			}
			
			protected function tab1_2_level_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				tab1_2_levelCurrSelect = RadioButton(event.target).value.toString();
				tab1_2_levelNameCurrSelect = RadioButton(event.target).label;
				tab1_2_levelNameCurrSelect = tab1_2_levelNameCurrSelect == null ? "" : tab1_2_levelNameCurrSelect;
				
				tab1_2_showCorpCnt = getTab1_2_CorpCntDS(this.tab1_2_plateCurrSelect, this.tab1_2_levelCurrSelect);
				tab1_2_showCorpCntMax = getTab1_2_CorpCntMax(this.tab1_2_plateCurrSelect, this.tab1_2_levelCurrSelect);
				tab1_2_leftDS = getTab1_2_leftDS();
				tab1_2_rightDS = getTab1_2_rightDS();
				executeBindTab1_2_leftTitle();
				executeBindTab1_2_rightTitle();
			}
			
			protected function tab1_2_cnt_changeHandler(event:Event):void
			{
				// TODO Auto-generated method stub
				tab1_2_showCorpCnt = int(NumericStepper(event.target).value);
				
				tab1_2_leftDS = getTab1_2_leftDS();
				tab1_2_rightDS = getTab1_2_rightDS();
				executeBindTab1_2_leftTitle();
				executeBindTab1_2_rightTitle();
			}
			
			protected function tab2_2_plate_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				tab2_2_plateCurrSelect = RadioButton(event.target).value.toString();
				tab2_2_plateNameCurrSelect = RadioButton(event.target).label;
				tab2_2_plateNameCurrSelect = tab2_2_plateNameCurrSelect == null ? "" : tab2_2_plateNameCurrSelect;
				
				tab2_2_levelDS = getTab2_2_levelDS();
				tab2_2_showCorpCnt = getTab2_2_CorpCntDS(this.tab2_2_plateCurrSelect, this.tab2_2_levelCurrSelect);
				tab2_2_showCorpCntMax = getTab2_2_CorpCntMax(this.tab2_2_plateCurrSelect, this.tab2_2_levelCurrSelect);
				tab2_2_leftDS = getTab2_2_leftDS();
				tab2_2_rightDS = getTab2_2_rightDS();
				executeBindTab2_2_leftTitle();
				executeBindTab2_2_rightTitle();
			}
			
			protected function tab2_2_level_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				tab2_2_levelCurrSelect = RadioButton(event.target).value.toString();
				tab2_2_levelNameCurrSelect = RadioButton(event.target).label;
				tab2_2_levelNameCurrSelect = tab2_2_levelNameCurrSelect == null ? "" : tab2_2_levelNameCurrSelect;
				
				tab2_2_showCorpCnt = getTab2_2_CorpCntDS(this.tab2_2_plateCurrSelect, this.tab2_2_levelCurrSelect);
				tab2_2_showCorpCntMax = getTab2_2_CorpCntMax(this.tab2_2_plateCurrSelect, this.tab2_2_levelCurrSelect);
				tab2_2_leftDS = getTab2_2_leftDS();
				tab2_2_rightDS = getTab2_2_rightDS();
				executeBindTab2_2_leftTitle();
				executeBindTab2_2_rightTitle();
			}
			
			protected function tab2_2_cnt_changeHandler(event:Event):void
			{
				// TODO Auto-generated method stub
				tab2_2_showCorpCnt = int(NumericStepper(event.target).value);
				
				tab2_2_leftDS = getTab2_2_leftDS();
				tab2_2_rightDS = getTab2_2_rightDS();
				executeBindTab2_2_leftTitle();
				executeBindTab2_2_rightTitle();
			}
			
			/*****************************************************************/
			
			protected function tab1_1_topLeft_PopupDoubleClickHandler(event:PopupEvent):void
			{
				// TODO Auto-generated method stub
				showLevelBC();
			}
			
			protected function tab1_1_topRight_PopupClickHandler(event:PopupEvent):void
			{
				// TODO Auto-generated method stub
				var item:Object = event.hitDataItem;
				tab1_1_levelCurrSelect = item.kindid;
				tab1_1_levelNameCurrSelect = item.label;
				tab1_1_levelNameCurrSelect = tab1_1_levelNameCurrSelect == null ? "" : tab1_1_levelNameCurrSelect;
				tab1_1_downDS = getTab1_1_downDS();
				executeBindTab1_1_downTitle();
			}
			
			protected function tab1_1_down_PopupDoubleClickHandler(event:PopupEvent):void
			{
				// TODO Auto-generated method stub
				showPlateByLevelBC(tab1_1_levelCurrSelect, tab1_1_levelNameCurrSelect)
			}
			
			protected function tab1_2_left_PopupDoubleClickHandler(event:PopupEvent):void
			{
				// TODO Auto-generated method stub
				showCorpByPlateLevelBC(tab1_2_plateCurrSelect, tab1_2_plateNameCurrSelect, tab1_2_levelCurrSelect, tab1_2_levelNameCurrSelect)
			}
			
			protected function tab1_2_right_PopupDoubleClickHandler(event:PopupEvent):void
			{
				// TODO Auto-generated method stub
				showCorpByPlateLevelBC(tab1_2_plateCurrSelect, tab1_2_plateNameCurrSelect, tab1_2_levelCurrSelect, tab1_2_levelNameCurrSelect)
			}
			
			protected function tab2_1_topLeft_PopupDoubleClickHandler(event:PopupEvent):void
			{
				// TODO Auto-generated method stub
				showLevelRC();
			}
			
			protected function tab2_1_topRight_PopupClickHandler(event:PopupEvent):void
			{
				// TODO Auto-generated method stub
				var item:Object = event.hitDataItem;
				tab2_1_levelCurrSelect = item.kindid;
				tab2_1_levelNameCurrSelect = item.label;
				tab2_1_levelNameCurrSelect = tab2_1_levelNameCurrSelect == null ? "" : tab2_1_levelNameCurrSelect;
				tab2_1_downDS = getTab1_1_downDS();
				executeBindTab2_1_downTitle();
			}
			
			protected function tab2_1_down_PopupDoubleClickHandler(event:PopupEvent):void
			{
				// TODO Auto-generated method stub
				showPlateByLevelRC(tab2_1_levelCurrSelect, tab2_1_levelNameCurrSelect)
			}
			
			protected function tab2_2_left_PopupDoubleClickHandler(event:PopupEvent):void
			{
				// TODO Auto-generated method stub
				showCorpByPlateLevelRC(tab2_2_plateCurrSelect, tab2_2_plateNameCurrSelect, tab2_2_levelCurrSelect, tab2_2_levelNameCurrSelect)
			}
			
			protected function tab2_2_right_PopupDoubleClickHandler(event:PopupEvent):void
			{
				// TODO Auto-generated method stub
				showCorpByPlateLevelRC(tab2_2_plateCurrSelect, tab2_2_plateNameCurrSelect, tab2_2_levelCurrSelect, tab2_2_levelNameCurrSelect)
			}
			
			[Bindable]
			private var tab1_2_leftAxisMaximum:Number = 0;
			[Bindable]
			private var tab1_2_leftAxisMinimum:Number = 0;
			[Bindable]
			private var tab1_2_rightAxisMaximum:Number = 0;
			[Bindable]
			private var tab1_2_rightAxisMinimum:Number = 0;
			
			protected function tab1_2_left_SetAxisComplateHandler(event:SetAxisComplateEvent):void
			{
				// TODO Auto-generated method stub
				tab1_2_leftAxisMaximum = event.getLeftAxisMaximum>tab1_2_leftAxisMaximum?event.getLeftAxisMaximum:tab1_2_leftAxisMaximum;
				tab1_2_leftAxisMinimum = event.getLeftAxisMinimum<tab1_2_leftAxisMaximum?event.getLeftAxisMinimum:tab1_2_leftAxisMinimum;
				tab1_2_rightAxisMaximum = event.getRightAxisMaximum>tab1_2_rightAxisMaximum?event.getLeftAxisMaximum:tab1_2_rightAxisMaximum;
				tab1_2_rightAxisMinimum = event.getRightAxisMinimum<tab1_2_rightAxisMinimum?event.getLeftAxisMinimum:tab1_2_rightAxisMinimum;
			}
			protected function tab1_2_right_SetAxisComplateHandler(event:SetAxisComplateEvent):void
			{
				// TODO Auto-generated method stub
				tab1_2_leftAxisMaximum = event.getLeftAxisMaximum>tab1_2_leftAxisMaximum?event.getLeftAxisMaximum:tab1_2_leftAxisMaximum;
				tab1_2_leftAxisMinimum = event.getLeftAxisMinimum<tab1_2_leftAxisMaximum?event.getLeftAxisMinimum:tab1_2_leftAxisMinimum;
				tab1_2_rightAxisMaximum = event.getRightAxisMaximum>tab1_2_rightAxisMaximum?event.getLeftAxisMaximum:tab1_2_rightAxisMaximum;
				tab1_2_rightAxisMinimum = event.getRightAxisMinimum<tab1_2_rightAxisMinimum?event.getLeftAxisMinimum:tab1_2_rightAxisMinimum;
			}
			[Bindable]
			private var tab2_2_leftAxisMaximum:Number = 0;
			[Bindable]
			private var tab2_2_leftAxisMinimum:Number = 0;
			[Bindable]
			private var tab2_2_rightAxisMaximum:Number = 0;
			[Bindable]
			private var tab2_2_rightAxisMinimum:Number = 0;
			
			protected function tab2_2_left_SetAxisComplateHandler(event:SetAxisComplateEvent):void
			{
				// TODO Auto-generated method stub
				tab2_2_leftAxisMaximum = event.getLeftAxisMaximum>tab2_2_leftAxisMaximum?event.getLeftAxisMaximum:tab2_2_leftAxisMaximum;
				tab2_2_leftAxisMinimum = event.getLeftAxisMinimum<tab2_2_leftAxisMaximum?event.getLeftAxisMinimum:tab2_2_leftAxisMinimum;
				tab2_2_rightAxisMaximum = event.getRightAxisMaximum>tab2_2_rightAxisMaximum?event.getLeftAxisMaximum:tab2_2_rightAxisMaximum;
				tab2_2_rightAxisMinimum = event.getRightAxisMinimum<tab2_2_rightAxisMinimum?event.getLeftAxisMinimum:tab2_2_rightAxisMinimum;
			}
			
			
			
			protected function tab2_2_right_SetAxisComplateHandler(event:SetAxisComplateEvent):void
			{
				// TODO Auto-generated method stub
				tab2_2_leftAxisMaximum = event.getLeftAxisMaximum>tab2_2_leftAxisMaximum?event.getLeftAxisMaximum:tab2_2_leftAxisMaximum;
				tab2_2_leftAxisMinimum = event.getLeftAxisMinimum<tab2_2_leftAxisMaximum?event.getLeftAxisMinimum:tab2_2_leftAxisMinimum;
				tab2_2_rightAxisMaximum = event.getRightAxisMaximum>tab2_2_rightAxisMaximum?event.getLeftAxisMaximum:tab2_2_rightAxisMaximum;
				tab2_2_rightAxisMinimum = event.getRightAxisMinimum<tab2_2_rightAxisMinimum?event.getLeftAxisMinimum:tab2_2_rightAxisMinimum;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<fx:XML id="hseDataXML" />
		<mx:WebService id="ws"
					   showBusyCursor="true"
					   result="ws_resultHandler(event)"
					   fault="ws_faultHandler(event)" />

		<s:RadioButtonGroup id="tab1_2_plateGrp" />
		<s:RadioButtonGroup id="tab1_2_levelGrp" />
		<s:RadioButtonGroup id="tab2_2_plateGrp" />
		<s:RadioButtonGroup id="tab2_2_levelGrp" />
	</fx:Declarations>
	<s:layout>
		<s:VerticalLayout horizontalAlign="left"
						  verticalAlign="middle"
						  gap="0" />
	</s:layout>
	<s:BorderContainer width="100%" height="35" styleName="tabHead2Box">
		<s:layout>
			<s:BasicLayout />
		</s:layout>
		<s:ButtonBar id="buttonBar" dataProvider="{viewStack}" height="25" styleName="tabButtonStyle2" right="5" top="5"/>
	</s:BorderContainer>
	<mx:ViewStack id="viewStack"
				  width="100%"
				  height="100%"
				  styleName="tabContentBox"
				  borderStyle="inset">
		<!--按班次-->
		<s:NavigatorContent id="tab1"
							width="100%"
							height="100%"
							label="{tab1_title}">
			<s:layout>
				<s:VerticalLayout horizontalAlign="left"
								  verticalAlign="middle"
								  gap="0" />
			</s:layout>
			<s:BorderContainer width="100%" height="34" styleName="tabHead3Box">
				<s:layout>
					<s:BasicLayout />
				</s:layout>
				<s:ButtonBar id="buttonBarA"
							 dataProvider="{viewStackA}"
							 height="25"
							 styleName="tabButtonStyle3"
							 left="5"
							 top="5" />
			</s:BorderContainer>
			<mx:ViewStack id="viewStackA"
						  width="100%"
						  height="100%"
						  styleName="tabContentBox"
						  borderStyle="inset">
				<!--班次板块对比-->
				<s:NavigatorContent id="tab1_bc"
									width="100%"
									height="100%"
									label="{tab1_1_title}">
					<s:VGroup width="100%"
							  height="100%"
							  horizontalAlign="center"
							  gap="-1">
						<s:HGroup width="100%"
								  height="100%"
								  horizontalAlign="center"
								  verticalAlign="top"
								  gap="-1">
							<s:BorderContainer width="60%"
											   height="100%"
											   styleName="contentBox">
								<s:layout>
									<s:VerticalLayout paddingLeft="5"
													  paddingTop="5"
													  paddingBottom="5"
													  paddingRight="5"
													  horizontalAlign="justify" />
								</s:layout>
								<views:ColumnLineMulti id="tab1_1_topLeft"
													   AxisLeftTiltle="班次"
													   width="100%"
													   height="100%"
													   showTitle="true"
													   showLegend="true" ShowDataLabel="{showDataLabel}"
													   DataSourceConf="{tab1_1_topLeftConfDS}"
													   DataSource="{tab1_1_topLeftDS}"
													   title="{tab1_1_topLeftTitle}"
													   PopupDoubleClick="tab1_1_topLeft_PopupDoubleClickHandler(event)" />
							</s:BorderContainer>
							<s:BorderContainer width="40%"
											   height="100%"
											   styleName="contentBox">
								<s:layout>
									<s:VerticalLayout horizontalAlign="center"
													  paddingLeft="5"
													  paddingTop="5"
													  paddingBottom="5"
													  paddingRight="5" />
								</s:layout>
								<views:PieMulti id="tab1_1_topRight"
												DataSource="{tab1_1_topRightDS}"
												showLegend="true" ShowDataLabel="{showDataLabel}"
												title="{tab1_1_topRightTitle}"
												PopupClick="tab1_1_topRight_PopupClickHandler(event)" />
							</s:BorderContainer>
						</s:HGroup>
						<s:HGroup width="100%"
								  height="100%"
								  horizontalAlign="center"
								  verticalAlign="top"
								  gap="-1">
							<s:BorderContainer width="100%"
											   height="100%"
											   styleName="contentBox">
								<s:layout>
									<s:VerticalLayout paddingLeft="5"
													  paddingTop="5"
													  paddingBottom="5"
													  paddingRight="5"
													  horizontalAlign="justify" />
								</s:layout>
								<views:ColumnLineMulti id="tab1_1_down"
													   AxisLeftTiltle="班次"
													   width="100%"
													   height="100%"
													   showTitle="true"
													   showLegend="true" ShowDataLabel="{showDataLabel}"
													   DataSourceConf="{tab1_1_downConfDS}"
													   DataSource="{tab1_1_downDS}"
													   title="{tab1_1_downTitle}"
													   PopupDoubleClick="tab1_1_down_PopupDoubleClickHandler(event)" />
							</s:BorderContainer>
						</s:HGroup>
					</s:VGroup>
				</s:NavigatorContent>
				<!--班次企业对比-->
				<s:NavigatorContent id="tab2_bc"
									width="100%"
									height="100%"
									label="{tab1_2_title}">
					<s:layout>
						<s:VerticalLayout horizontalAlign="left"
										  verticalAlign="middle"
										  gap="0" />
					</s:layout>
					<s:HGroup width="100%"
							  height="30"
							  horizontalAlign="center"
							  gap="-1">
						<s:BorderContainer width="100%" height="35" styleName="tabHead2Box">
							<s:layout>
								<s:HorizontalLayout horizontalAlign="right"
													verticalAlign="middle" />
							</s:layout>
							<mx:HBox borderStyle="outset"
									 styleName="controlBox"
									 paddingLeft="10"
									 paddingRight="10">
								<mx:Repeater id="tab1_2_plateRep"
											 dataProvider="{tab1_2_plateDS}">
									<s:RadioButton groupName="tab1_2_plateGrp"
												   label="{tab1_2_plateRep.currentItem.label}"
												   value="{tab1_2_plateRep.currentItem.value}"
												   selected="{tab1_2_plateRep.currentItem.value==tab1_2_plateCurrSelect}"
												   click="tab1_2_plate_clickHandler(event)" />
								</mx:Repeater>
							</mx:HBox>
							<mx:HBox borderStyle="outset"
									 styleName="controlBox"
									 paddingLeft="10"
									 paddingRight="10">
								<mx:Repeater id="tab1_2_levelRep"
											 dataProvider="{tab1_2_levelDS}">
									<s:RadioButton groupName="tab1_2_levelGrp"
												   label="{tab1_2_levelRep.currentItem.label}"
												   value="{tab1_2_levelRep.currentItem.value}"
												   selected="{tab1_2_levelRep.currentItem.value==tab1_2_levelCurrSelect}"
												   click="tab1_2_level_clickHandler(event)" />
								</mx:Repeater>
							</mx:HBox>
							<s:Label text="显示企业数" />
							<mx:NumericStepper id="tab1_2_cnt"
											   value="{tab1_2_showCorpCnt}"
											   minimum="0"
											   maximum="{tab1_2_showCorpCntMax}"
											   color="#000000"
											   change="tab1_2_cnt_changeHandler(event)" />
						</s:BorderContainer>
					</s:HGroup>

					<s:VGroup width="100%"
							  height="100%"
							  horizontalAlign="center"
							  gap="-1">
						<s:HGroup width="100%"
								  height="100%"
								  horizontalAlign="center"
								  verticalAlign="top"
								  gap="-1">
							<s:BorderContainer width="100%"
											   height="100%"
											   styleName="contentBox">
								<s:layout>
									<s:VerticalLayout paddingLeft="5"
													  paddingTop="5"
													  paddingBottom="5"
													  paddingRight="5"
													  horizontalAlign="justify" />
								</s:layout>
								<views:ColumnLineMulti id="tab1_2_left"
													   AxisLeftUnit="%"
													   labelRotationX="45"
													   width="100%"
													   height="100%"
													   showTitle="true"
													   showLegend="true"
													   PopupDoubleClick="tab1_2_left_PopupDoubleClickHandler(event)"
													   DataSourceConf="{tab1_2_leftConfDS}"
													   DataSource="{tab1_2_leftDS}" showZoomControlBox="true" ShowDataLabel="{showDataLabel}"
													   title="{tab1_2_leftTitle}"
													   SetAxisComplate="tab1_2_left_SetAxisComplateHandler(event)" 
													   LeftAxisMaximum="{tab1_2_leftAxisMaximum}"
													   LeftAxisMinimum="{tab1_2_leftAxisMinimum}"
													   RightAxisMaximum="{tab1_2_rightAxisMaximum}"
													   RightAxisMinimum="{tab1_2_rightAxisMinimum}" />
							</s:BorderContainer>
							<s:BorderContainer width="100%"
											   height="100%"
											   styleName="contentBox">
								<s:layout>
									<s:VerticalLayout paddingLeft="5"
													  paddingTop="5"
													  paddingBottom="5"
													  paddingRight="5"
													  horizontalAlign="justify" />
								</s:layout>
								<views:ColumnLineMulti id="tab1_2_right"
													   AxisLeftUnit="%"
													   labelRotationX="45"
													   width="100%"
													   height="100%"
													   showTitle="true"
													   showLegend="true"
													   PopupDoubleClick="tab1_2_right_PopupDoubleClickHandler(event)"
													   DataSourceConf="{tab1_2_rightConfDS}"
													   DataSource="{tab1_2_rightDS}" showZoomControlBox="true" ShowDataLabel="{showDataLabel}"
													   title="{tab1_2_rightTitle}"
													   UseCustomAxisMaxMinmum="true"
													   SetAxisComplate="tab1_2_right_SetAxisComplateHandler(event)"
													   LeftAxisMaximum="{tab1_2_leftAxisMaximum}"
													   LeftAxisMinimum="{tab1_2_leftAxisMinimum}"
													   RightAxisMaximum="{tab1_2_rightAxisMaximum}"
													   RightAxisMinimum="{tab1_2_rightAxisMinimum}" />
							</s:BorderContainer>
						</s:HGroup>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:ViewStack>
		</s:NavigatorContent>


		<!--按人次-->
		<s:NavigatorContent id="tab2"
							width="100%"
							height="100%"
							label="{tab2_title}">
			<s:layout>
				<s:VerticalLayout horizontalAlign="left"
								  verticalAlign="middle"
								  gap="0" />
			</s:layout>
			<s:BorderContainer width="100%" height="34" styleName="tabHead3Box">
				<s:layout>
					<s:BasicLayout />
				</s:layout>
				<s:ButtonBar id="buttonBarB"
							 dataProvider="{viewStackB}"
							 height="25"
							 styleName="tabButtonStyle3"
							 left="5"
							 top="5" />
			</s:BorderContainer>
			<mx:ViewStack id="viewStackB"
						  width="100%"
						  height="100%"
						  styleName="tabContentBox"
						  borderStyle="inset">
				<!--人次板块对比-->
				<s:NavigatorContent id="tab1_rc"
									width="100%"
									height="100%"
									label="{tab2_1_title}">
					<s:VGroup width="100%"
							  height="100%"
							  horizontalAlign="center"
							  gap="-1">
						<s:HGroup width="100%"
								  height="100%"
								  horizontalAlign="center"
								  verticalAlign="top"
								  gap="-1">
							<s:BorderContainer width="60%"
											   height="100%"
											   styleName="contentBox">
								<s:layout>
									<s:VerticalLayout paddingLeft="5"
													  paddingTop="5"
													  paddingBottom="5"
													  paddingRight="5"
													  horizontalAlign="justify" />
								</s:layout>
								<views:ColumnLineMulti id="tab2_1_topLeft"
													   AxisLeftTiltle="人次"
													   width="100%"
													   height="100%"
													   showTitle="true"
													   showLegend="true" ShowDataLabel="{showDataLabel}"
													   DataSourceConf="{tab2_1_topLeftConfDS}"
													   DataSource="{tab2_1_topLeftDS}"
													   title="{tab2_1_topLeftTitle}"
													   PopupDoubleClick="tab2_1_topLeft_PopupDoubleClickHandler(event)" />
							</s:BorderContainer>
							<s:BorderContainer width="40%"
											   height="100%"
											   styleName="contentBox">
								<s:layout>
									<s:VerticalLayout horizontalAlign="center"
													  paddingLeft="5"
													  paddingTop="5"
													  paddingBottom="5"
													  paddingRight="5" />
								</s:layout>
								<views:PieMulti id="tab2_1_topRight"
												DataSource="{tab2_1_topRightDS}"
												showLegend="true" ShowDataLabel="{showDataLabel}"
												title="{tab2_1_topRightTitle}"
												PopupClick="tab2_1_topRight_PopupClickHandler(event)" />
							</s:BorderContainer>
						</s:HGroup>
						<s:HGroup width="100%"
								  height="100%"
								  horizontalAlign="center"
								  verticalAlign="top"
								  gap="-1">
							<s:BorderContainer width="100%"
											   height="100%"
											   styleName="contentBox">
								<s:layout>
									<s:VerticalLayout paddingLeft="5"
													  paddingTop="5"
													  paddingBottom="5"
													  paddingRight="5"
													  horizontalAlign="justify" />
								</s:layout>
								<views:ColumnLineMulti id="tab2_1_down"
													   AxisLeftTiltle="人次"
													   width="100%"
													   height="100%"
													   showTitle="true"
													   showLegend="true" ShowDataLabel="{showDataLabel}"
													   title="{tab2_1_downTitle}"
													   DataSourceConf="{tab2_1_downConfDS}"
													   DataSource="{tab2_1_downDS}"
													   PopupDoubleClick="tab2_1_down_PopupDoubleClickHandler(event)" />
							</s:BorderContainer>
						</s:HGroup>
					</s:VGroup>
				</s:NavigatorContent>
				<!--人次企业对比-->
				<s:NavigatorContent id="tab2_rc"
									width="100%"
									height="100%"
									label="{tab2_2_title}">
					<s:layout>
						<s:VerticalLayout horizontalAlign="left"
										  verticalAlign="middle"
										  gap="0" />
					</s:layout>
					<s:HGroup width="100%"
							  height="30"
							  horizontalAlign="center"
							  gap="-1">
						<s:BorderContainer width="100%" height="35" styleName="tabHead2Box">
							<s:layout>
								<s:HorizontalLayout horizontalAlign="right"
													verticalAlign="middle" />
							</s:layout>
							<mx:HBox borderStyle="outset"
									 styleName="controlBox"
									 paddingLeft="10"
									 paddingRight="10">
								<mx:Repeater id="tab2_2_plateRep"
											 dataProvider="{tab2_2_plateDS}">
									<s:RadioButton groupName="tab2_2_plateGrp"
												   label="{tab2_2_plateRep.currentItem.label}"
												   value="{tab2_2_plateRep.currentItem.value}"
												   selected="{tab2_2_plateRep.currentItem.value==tab2_2_plateCurrSelect}"
												   click="tab2_2_plate_clickHandler(event)" />
								</mx:Repeater>
							</mx:HBox>
							<mx:HBox borderStyle="outset"
									 styleName="controlBox"
									 paddingLeft="10"
									 paddingRight="10">
								<mx:Repeater id="tab2_2_levelRep"
											 dataProvider="{tab2_2_levelDS}">
									<s:RadioButton groupName="tab2_2_levelGrp"
												   label="{tab2_2_levelRep.currentItem.label}"
												   value="{tab2_2_levelRep.currentItem.value}"
												   selected="{tab2_2_levelRep.currentItem.value==tab2_2_levelCurrSelect}"
												   click="tab2_2_level_clickHandler(event)" />
								</mx:Repeater>
							</mx:HBox>
							<s:Label text="显示企业数" />
							<mx:NumericStepper id="tab2_2_cnt"
											   value="{tab2_2_showCorpCnt}"
											   minimum="0"
											   maximum="{tab2_2_showCorpCntMax}"
											   color="#000000"
											   change="tab2_2_cnt_changeHandler(event)" />
						</s:BorderContainer>
					</s:HGroup>

					<s:VGroup width="100%"
							  height="100%"
							  horizontalAlign="center"
							  gap="-1">
						<s:HGroup width="100%"
								  height="100%"
								  horizontalAlign="center"
								  verticalAlign="top"
								  gap="-1">
							<s:BorderContainer width="100%"
											   height="100%"
											   styleName="contentBox">
								<s:layout>
									<s:VerticalLayout paddingLeft="5"
													  paddingTop="5"
													  paddingBottom="5"
													  paddingRight="5"
													  horizontalAlign="justify" />
								</s:layout>
								<views:ColumnLineMulti id="tab2_2_left"
													   AxisLeftUnit="%"
													   labelRotationX="45"
													   width="100%"
													   height="100%"
													   showTitle="true"
													   showLegend="true"
													   PopupDoubleClick="tab2_2_left_PopupDoubleClickHandler(event)"
													   DataSourceConf="{tab2_2_leftConfDS}"
													   DataSource="{tab2_2_leftDS}" showZoomControlBox="true" ShowDataLabel="{showDataLabel}"
													   title="{tab2_2_leftTitle}"
													   SetAxisComplate="tab2_2_left_SetAxisComplateHandler(event)"
													   LeftAxisMaximum="{tab2_2_leftAxisMaximum}"
													   LeftAxisMinimum="{tab2_2_leftAxisMinimum}"
													   RightAxisMaximum="{tab2_2_rightAxisMaximum}"
													   RightAxisMinimum="{tab2_2_rightAxisMinimum}" />
							</s:BorderContainer>
							<s:BorderContainer width="100%"
											   height="100%"
											   styleName="contentBox">
								<s:layout>
									<s:VerticalLayout paddingLeft="5"
													  paddingTop="5"
													  paddingBottom="5"
													  paddingRight="5"
													  horizontalAlign="justify" />
								</s:layout>
								<views:ColumnLineMulti id="tab2_2_right"
													   AxisLeftUnit="%"
													   labelRotationX="45"
													   width="100%"
													   height="100%"
													   showTitle="true"
													   showLegend="true"
													   PopupDoubleClick="tab2_2_right_PopupDoubleClickHandler(event)"
													   DataSourceConf="{tab2_2_rightConfDS}"
													   DataSource="{tab2_2_rightDS}" showZoomControlBox="true" ShowDataLabel="{showDataLabel}"
													   title="{tab2_2_rightTitle}"
													   UseCustomAxisMaxMinmum="true"
													   SetAxisComplate="tab2_2_right_SetAxisComplateHandler(event)"
													   LeftAxisMaximum="{tab2_2_leftAxisMaximum}"
													   LeftAxisMinimum="{tab2_2_leftAxisMinimum}"
													   RightAxisMaximum="{tab2_2_rightAxisMaximum}"
													   RightAxisMinimum="{tab2_2_rightAxisMinimum}" />
							</s:BorderContainer>
						</s:HGroup>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:ViewStack>
		</s:NavigatorContent>

	</mx:ViewStack>
</s:Group>
